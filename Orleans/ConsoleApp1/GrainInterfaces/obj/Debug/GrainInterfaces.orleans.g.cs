// <auto-generated />
#if !EXCLUDE_GENERATED_CODE
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
using global::Orleans;

[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof(OrleansGeneratedCode.OrleansCodeGenb711798fd0FeaturePopulator))]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("GrainInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Win32.Primitives, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("mscorlib, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("netfx.force.conflicts, Version=0.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("netstandard, Version=2.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Orleans.Core.Abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.AppContext, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections.Concurrent, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections.NonGeneric, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections.Specialized, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel.EventBasedAsync, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel.Primitives, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel.TypeConverter, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Console, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Core, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Data.Common, Version=4.2.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Data, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Contracts, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Debug, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.FileVersionInfo, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Process, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.StackTrace, Version=4.1.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.TextWriterTraceListener, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Tools, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.TraceSource, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Tracing, Version=4.2.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Drawing.Primitives, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Dynamic.Runtime, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Globalization.Calendars, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Globalization, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Globalization.Extensions, Version=4.1.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.Compression, Version=4.2.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.Compression.ZipFile, Version=4.0.3.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem.DriveInfo, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem.Primitives, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem.Watcher, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.IsolatedStorage, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.MemoryMappedFiles, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.Pipes, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.UnmanagedMemoryStream, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq.Expressions, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq.Parallel, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq.Queryable, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Memory, Version=4.0.1.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Http, Version=4.2.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.NameResolution, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.NetworkInformation, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Ping, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Primitives, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Requests, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Security, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Sockets, Version=4.2.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.WebHeaderCollection, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.WebSockets.Client, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.WebSockets, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ObjectModel, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Extensions, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Primitives, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Resources.Reader, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Resources.ResourceManager, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Resources.Writer, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.CompilerServices.Unsafe, Version=4.0.4.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.CompilerServices.VisualC, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Extensions, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Handles, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.InteropServices, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.InteropServices.RuntimeInformation, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Numerics, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization.Formatters, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization.Json, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization.Primitives, Version=4.2.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization.Xml, Version=4.1.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Claims, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Algorithms, Version=4.3.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Csp, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Encoding, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Primitives, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.X509Certificates, Version=4.1.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Principal, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.SecureString, Version=4.1.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.Encoding, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.Encoding.Extensions, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.RegularExpressions, Version=4.1.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Overlapped, Version=4.1.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Tasks, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Tasks.Parallel, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Thread, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.ThreadPool, Version=4.0.12.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Timer, Version=4.0.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ValueTuple, Version=4.0.2.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.ReaderWriter, Version=4.1.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XDocument, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XmlDocument, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XmlSerializer, Version=4.0.11.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XPath, Version=4.0.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XPath.XDocument, Version=4.1.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel.Annotations, Version=4.0.10.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Emit, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Emit.ILGeneration, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Emit.Lightweight, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.InteropServices.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ServiceModel.Duplex, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ServiceModel.Http, Version=4.0.10.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ServiceModel.NetTcp, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ServiceModel.Primitives, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ServiceModel.Security, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293")]
namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0")]
    internal sealed class OrleansCodeGenb711798fd0FeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.RuntimeBinderException,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException");
            feature.AddKnownType("Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr", "Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr");
            feature.AddKnownType("Microsoft.Runtime.Hosting.IClrStrongName", "Microsoft.Runtime.Hosting.IClrStrongName");
            feature.AddKnownType("Microsoft.Win32.IAssemblyEnum", "Microsoft.Win32.IAssemblyEnum");
            feature.AddKnownType("Microsoft.Win32.IApplicationContext", "Microsoft.Win32.IApplicationContext");
            feature.AddKnownType("Microsoft.Win32.IAssemblyName", "Microsoft.Win32.IAssemblyName");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SystemTime", "Microsoft.Win32.SystemTime");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TimeZoneInformation", "Microsoft.Win32.TimeZoneInformation");
            feature.AddKnownType("Microsoft.Win32.Win32Native+DynamicTimeZoneInformation", "Microsoft.Win32.DynamicTimeZoneInformation");
            feature.AddKnownType("Microsoft.Win32.Win32Native+RegistryTimeZoneInformation", "Microsoft.Win32.RegistryTimeZoneInformation");
            feature.AddKnownType("Microsoft.Win32.Win32Native+OSVERSIONINFO", "Microsoft.Win32.OSVERSIONINFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+OSVERSIONINFOEX", "Microsoft.Win32.OSVERSIONINFOEX");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SYSTEM_INFO", "Microsoft.Win32.SYSTEM_INFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES", "Microsoft.Win32.SECURITY_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA", "Microsoft.Win32.WIN32_FILE_ATTRIBUTE_DATA");
            feature.AddKnownType("Microsoft.Win32.Win32Native+FILE_TIME", "Microsoft.Win32.FILE_TIME");
            feature.AddKnownType("Microsoft.Win32.Win32Native+KERB_S4U_LOGON", "Microsoft.Win32.KERB_S4U_LOGON");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_OBJECT_ATTRIBUTES", "Microsoft.Win32.LSA_OBJECT_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.Win32Native+UNICODE_STRING", "Microsoft.Win32.UNICODE_STRING");
            feature.AddKnownType("Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING", "Microsoft.Win32.UNICODE_INTPTR_STRING");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_TRANSLATED_NAME", "Microsoft.Win32.LSA_TRANSLATED_NAME");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_TRANSLATED_SID", "Microsoft.Win32.LSA_TRANSLATED_SID");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_TRANSLATED_SID2", "Microsoft.Win32.LSA_TRANSLATED_SID2");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_TRUST_INFORMATION", "Microsoft.Win32.LSA_TRUST_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_REFERENCED_DOMAIN_LIST", "Microsoft.Win32.LSA_REFERENCED_DOMAIN_LIST");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LUID", "Microsoft.Win32.LUID");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LUID_AND_ATTRIBUTES", "Microsoft.Win32.LUID_AND_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.Win32Native+QUOTA_LIMITS", "Microsoft.Win32.QUOTA_LIMITS");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SECURITY_LOGON_SESSION_DATA", "Microsoft.Win32.SECURITY_LOGON_SESSION_DATA");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SID_AND_ATTRIBUTES", "Microsoft.Win32.SID_AND_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_GROUPS", "Microsoft.Win32.TOKEN_GROUPS");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_PRIMARY_GROUP", "Microsoft.Win32.TOKEN_PRIMARY_GROUP");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE", "Microsoft.Win32.TOKEN_PRIVILEGE");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_SOURCE", "Microsoft.Win32.TOKEN_SOURCE");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_STATISTICS", "Microsoft.Win32.TOKEN_STATISTICS");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_USER", "Microsoft.Win32.TOKEN_USER");
            feature.AddKnownType("Microsoft.Win32.Win32Native+MEMORYSTATUSEX", "Microsoft.Win32.MEMORYSTATUSEX");
            feature.AddKnownType("Microsoft.Win32.Win32Native+MEMORY_BASIC_INFORMATION", "Microsoft.Win32.MEMORY_BASIC_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.Win32Native+NlsVersionInfoEx", "Microsoft.Win32.NlsVersionInfoEx");
            feature.AddKnownType("Microsoft.Win32.Win32Native+WIN32_FIND_DATA", "Microsoft.Win32.WIN32_FIND_DATA");
            feature.AddKnownType("Microsoft.Win32.Win32Native+COORD", "Microsoft.Win32.COORD");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SMALL_RECT", "Microsoft.Win32.SMALL_RECT");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO", "Microsoft.Win32.CONSOLE_SCREEN_BUFFER_INFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO", "Microsoft.Win32.CONSOLE_CURSOR_INFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+KeyEventRecord", "Microsoft.Win32.KeyEventRecord");
            feature.AddKnownType("Microsoft.Win32.Win32Native+InputRecord", "Microsoft.Win32.InputRecord");
            feature.AddKnownType("Microsoft.Win32.Win32Native+Color", "Microsoft.Win32.Color");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CHAR_INFO", "Microsoft.Win32.CHAR_INFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+USEROBJECTFLAGS", "Microsoft.Win32.USEROBJECTFLAGS");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SECURITY_IMPERSONATION_LEVEL", "Microsoft.Win32.SECURITY_IMPERSONATION_LEVEL");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_INFORMATION_V1", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTE_INFORMATION_V1");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTES_INFORMATION", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTES_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_VALUES_ATTRIBUTE_V1", "Microsoft.Win32.CLAIM_VALUES_ATTRIBUTE_V1");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_V1", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTE_V1");
            feature.AddKnownType("Microsoft.Win32.RegistryHive", "Microsoft.Win32.RegistryHive");
            feature.AddKnownType("Microsoft.Win32.RegistryKey", "Microsoft.Win32.RegistryKey");
            feature.AddKnownType("Microsoft.Win32.RegistryValueOptions", "Microsoft.Win32.RegistryValueOptions");
            feature.AddKnownType("Microsoft.Win32.RegistryKeyPermissionCheck", "Microsoft.Win32.RegistryKeyPermissionCheck");
            feature.AddKnownType("Microsoft.Win32.RegistryOptions", "Microsoft.Win32.RegistryOptions");
            feature.AddKnownType("Microsoft.Win32.RegistryValueKind", "Microsoft.Win32.RegistryValueKind");
            feature.AddKnownType("Microsoft.Win32.RegistryView", "Microsoft.Win32.RegistryView");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EVENT_FILTER_DESCRIPTOR", "Microsoft.Win32.EVENT_FILTER_DESCRIPTOR");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+ActivityControl", "Microsoft.Win32.ActivityControl");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EVENT_INFO_CLASS", "Microsoft.Win32.EVENT_INFO_CLASS");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_QUERY_INFO_CLASS", "Microsoft.Win32.TRACE_QUERY_INFO_CLASS");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_GUID_INFO", "Microsoft.Win32.TRACE_GUID_INFO");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_PROVIDER_INSTANCE_INFO", "Microsoft.Win32.TRACE_PROVIDER_INSTANCE_INFO");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_ENABLE_INFO", "Microsoft.Win32.TRACE_ENABLE_INFO");
            feature.AddKnownType("Microsoft.Win32.SafeLibraryHandle", "Microsoft.Win32.SafeLibraryHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileHandle", "Microsoft.Win32.SafeHandles.SafeFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileMappingHandle", "Microsoft.Win32.SafeHandles.SafeFileMappingHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFindHandle", "Microsoft.Win32.SafeHandles.SafeFindHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLocalAllocHandle", "Microsoft.Win32.SafeHandles.SafeLocalAllocHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafePEFileHandle", "Microsoft.Win32.SafeHandles.SafePEFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeRegistryHandle", "Microsoft.Win32.SafeHandles.SafeRegistryHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeViewOfFileHandle", "Microsoft.Win32.SafeHandles.SafeViewOfFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeWaitHandle", "Microsoft.Win32.SafeHandles.SafeWaitHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid", "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid", "Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid", "Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid", "Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeAccessTokenHandle", "Microsoft.Win32.SafeHandles.SafeAccessTokenHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle", "Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle", "Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle", "Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle", "Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeProcessHandle", "Microsoft.Win32.SafeHandles.SafeProcessHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeThreadHandle", "Microsoft.Win32.SafeHandles.SafeThreadHandle");
            feature.AddKnownType("System.AggregateException", "AggregateException");
            feature.AddKnownType("System.__Canon", "__Canon");
            feature.AddKnownType("System.ICloneable", "ICloneable");
            feature.AddKnownType("System.Array+FunctorComparer`1", "FunctorComparer'1");
            feature.AddKnownType("System.SZArrayHelper", "SZArrayHelper");
            feature.AddKnownType("System.ArraySegment`1", "ArraySegment'1");
            feature.AddKnownType("System.IComparable", "IComparable");
            feature.AddKnownType("System.IComparable`1", "IComparable'1");
            feature.AddKnownType("System.IEquatable`1", "IEquatable'1");
            feature.AddKnownType("System.ExceptionArgument", "ExceptionArgument");
            feature.AddKnownType("System.ExceptionResource", "ExceptionResource");
            feature.AddKnownType("System.ITuple", "ITuple");
            feature.AddKnownType("System.Tuple`1", "Tuple'1");
            feature.AddKnownType("System.Tuple`2", "Tuple'2");
            feature.AddKnownType("System.Tuple`3", "Tuple'3");
            feature.AddKnownType("System.Tuple`4", "Tuple'4");
            feature.AddKnownType("System.Tuple`5", "Tuple'5");
            feature.AddKnownType("System.Tuple`6", "Tuple'6");
            feature.AddKnownType("System.Tuple`7", "Tuple'7");
            feature.AddKnownType("System.Tuple`8", "Tuple'8");
            feature.AddKnownType("System.StringSplitOptions", "StringSplitOptions");
            feature.AddKnownType("System.StringComparer", "StringComparer");
            feature.AddKnownType("System.CultureAwareComparer", "CultureAwareComparer");
            feature.AddKnownType("System.CultureAwareRandomizedComparer", "CultureAwareRandomizedComparer");
            feature.AddKnownType("System.OrdinalComparer", "OrdinalComparer");
            feature.AddKnownType("System.OrdinalRandomizedComparer", "OrdinalRandomizedComparer");
            feature.AddKnownType("System.IWellKnownStringEqualityComparer", "IWellKnownStringEqualityComparer");
            feature.AddKnownType("System.StringComparison", "StringComparison");
            feature.AddKnownType("System.Exception", "Exception");
            feature.AddKnownType("System.Exception+__RestrictedErrorObject", "__RestrictedErrorObject");
            feature.AddKnownType("System.Exception+ExceptionMessageKind", "ExceptionMessageKind");
            feature.AddKnownType("System.DateTimeKind", "DateTimeKind");
            feature.AddKnownType("System.DateTimeOffset", "DateTimeOffset");
            feature.AddKnownType("System.SystemException", "SystemException");
            feature.AddKnownType("System.OutOfMemoryException", "OutOfMemoryException");
            feature.AddKnownType("System.StackOverflowException", "StackOverflowException");
            feature.AddKnownType("System.DataMisalignedException", "DataMisalignedException");
            feature.AddKnownType("System.ExecutionEngineException", "ExecutionEngineException");
            feature.AddKnownType("System.DelegateBindingFlags", "DelegateBindingFlags");
            feature.AddKnownType("System.__Filters", "__Filters");
            feature.AddKnownType("System.LogLevel", "LogLevel");
            feature.AddKnownType("System.SwitchStructure", "SwitchStructure");
            feature.AddKnownType("System.MemberAccessException", "MemberAccessException");
            feature.AddKnownType("System.Activator", "Activator");
            feature.AddKnownType("System.AccessViolationException", "AccessViolationException");
            feature.AddKnownType("System.ApplicationException", "ApplicationException");
            feature.AddKnownType("System.ResolveEventArgs", "ResolveEventArgs");
            feature.AddKnownType("System.AssemblyLoadEventArgs", "AssemblyLoadEventArgs");
            feature.AddKnownType("System.AppDomainInitializerInfo", "AppDomainInitializerInfo");
            feature.AddKnownType("System.AppDomainInitializerInfo+ItemInfo", "ItemInfo");
            feature.AddKnownType("System.AppDomain", "AppDomain");
            feature.AddKnownType("System.AppDomainHandle", "AppDomainHandle");
            feature.AddKnownType("System.AppDomainManagerInitializationOptions", "AppDomainManagerInitializationOptions");
            feature.AddKnownType("System.AppDomainManager", "AppDomainManager");
            feature.AddKnownType("System.AppDomainPauseManager", "AppDomainPauseManager");
            feature.AddKnownType("System._AppDomain", "_AppDomain");
            feature.AddKnownType("System.AppDomainSetup", "AppDomainSetup");
            feature.AddKnownType("System.AppDomainSetup+LoaderInformation", "LoaderInformation");
            feature.AddKnownType("System.IAppDomainSetup", "IAppDomainSetup");
            feature.AddKnownType("System.LoaderOptimization", "LoaderOptimization");
            feature.AddKnownType("System.LoaderOptimizationAttribute", "LoaderOptimizationAttribute");
            feature.AddKnownType("System.AppDomainUnloadedException", "AppDomainUnloadedException");
            feature.AddKnownType("System.ActivationContext", "ActivationContext");
            feature.AddKnownType("System.ActivationContext+ContextForm", "ActivationContext.ContextForm");
            feature.AddKnownType("System.ActivationContext+ApplicationState", "ApplicationState");
            feature.AddKnownType("System.ActivationContext+ApplicationStateDisposition", "ApplicationStateDisposition");
            feature.AddKnownType("System.ApplicationIdentity", "ApplicationIdentity");
            feature.AddKnownType("System.ApplicationId", "ApplicationId");
            feature.AddKnownType("System.ArgumentException", "ArgumentException");
            feature.AddKnownType("System.ArgumentNullException", "ArgumentNullException");
            feature.AddKnownType("System.ArgumentOutOfRangeException", "ArgumentOutOfRangeException");
            feature.AddKnownType("System.ArithmeticException", "ArithmeticException");
            feature.AddKnownType("System.ArrayTypeMismatchException", "ArrayTypeMismatchException");
            feature.AddKnownType("System.Attribute", "Attribute");
            feature.AddKnownType("System.AttributeTargets", "AttributeTargets");
            feature.AddKnownType("System.AttributeUsageAttribute", "AttributeUsageAttribute");
            feature.AddKnownType("System.BadImageFormatException", "BadImageFormatException");
            feature.AddKnownType("System.CannotUnloadAppDomainException", "CannotUnloadAppDomainException");
            feature.AddKnownType("System.CharEnumerator", "CharEnumerator");
            feature.AddKnownType("System.ConfigEvents", "ConfigEvents");
            feature.AddKnownType("System.ConfigNodeType", "ConfigNodeType");
            feature.AddKnownType("System.ConfigNodeSubType", "ConfigNodeSubType");
            feature.AddKnownType("System.BaseConfigHandler", "BaseConfigHandler");
            feature.AddKnownType("System.ConfigTreeParser", "ConfigTreeParser");
            feature.AddKnownType("System.ConfigNode", "ConfigNode");
            feature.AddKnownType("System.CLSCompliantAttribute", "CLSCompliantAttribute");
            feature.AddKnownType("System.TypeUnloadedException", "TypeUnloadedException");
            feature.AddKnownType("System.__ComObject", "__ComObject");
            feature.AddKnownType("System.Console+ControlKeyState", "ControlKeyState");
            feature.AddKnownType("System.Console+ControlCHooker", "ControlCHooker");
            feature.AddKnownType("System.ConsoleCancelEventArgs", "ConsoleCancelEventArgs");
            feature.AddKnownType("System.ConsoleColor", "ConsoleColor");
            feature.AddKnownType("System.ConsoleKey", "ConsoleKey");
            feature.AddKnownType("System.ConsoleKeyInfo", "ConsoleKeyInfo");
            feature.AddKnownType("System.ConsoleModifiers", "ConsoleModifiers");
            feature.AddKnownType("System.ConsoleSpecialKey", "ConsoleSpecialKey");
            feature.AddKnownType("System.ContextMarshalException", "ContextMarshalException");
            feature.AddKnownType("System.Base64FormattingOptions", "Base64FormattingOptions");
            feature.AddKnownType("System.ContextBoundObject", "ContextBoundObject");
            feature.AddKnownType("System.ContextStaticAttribute", "ContextStaticAttribute");
            feature.AddKnownType("System.Currency", "Currency");
            feature.AddKnownType("System.CurrentSystemTimeZone", "CurrentSystemTimeZone");
            feature.AddKnownType("System.DayOfWeek", "DayOfWeek");
            feature.AddKnownType("System.DBNull", "DBNull");
            feature.AddKnownType("System.DefaultBinder", "DefaultBinder");
            feature.AddKnownType("System.DefaultBinder+BinderState", "BinderState");
            feature.AddKnownType("System.DelegateSerializationHolder", "DelegateSerializationHolder");
            feature.AddKnownType("System.DelegateSerializationHolder+DelegateEntry", "DelegateEntry");
            feature.AddKnownType("System.DivideByZeroException", "DivideByZeroException");
            feature.AddKnownType("System.DuplicateWaitObjectException", "DuplicateWaitObjectException");
            feature.AddKnownType("System.Empty", "Empty");
            feature.AddKnownType("System.EntryPointNotFoundException", "EntryPointNotFoundException");
            feature.AddKnownType("System.DllNotFoundException", "DllNotFoundException");
            feature.AddKnownType("System.EnvironmentVariableTarget", "EnvironmentVariableTarget");
            feature.AddKnownType("System.Environment+ResourceHelper", "ResourceHelper");
            feature.AddKnownType("System.Environment+ResourceHelper+GetResourceStringUserData", "GetResourceStringUserData");
            feature.AddKnownType("System.Environment+SpecialFolderOption", "Environment.SpecialFolderOption");
            feature.AddKnownType("System.Environment+SpecialFolder", "Environment.SpecialFolder");
            feature.AddKnownType("System.EventArgs", "EventArgs");
            feature.AddKnownType("System.FieldAccessException", "FieldAccessException");
            feature.AddKnownType("System.FlagsAttribute", "FlagsAttribute");
            feature.AddKnownType("System.FormatException", "FormatException");
            feature.AddKnownType("System.FormattableString", "FormattableString");
            feature.AddKnownType("System.GCCollectionMode", "GCCollectionMode");
            feature.AddKnownType("System.InternalGCCollectionMode", "InternalGCCollectionMode");
            feature.AddKnownType("System.GCNotificationStatus", "GCNotificationStatus");
            feature.AddKnownType("System.SizedReference", "SizedReference");
            feature.AddKnownType("System.Guid", "Guid");
            feature.AddKnownType("System.ICustomFormatter", "ICustomFormatter");
            feature.AddKnownType("System.IFormatProvider", "IFormatProvider");
            feature.AddKnownType("System.IFormattable", "IFormattable");
            feature.AddKnownType("System.IndexOutOfRangeException", "IndexOutOfRangeException");
            feature.AddKnownType("System.IObservable`1", "IObservable'1");
            feature.AddKnownType("System.IObserver`1", "IObserver'1");
            feature.AddKnownType("System.IProgress`1", "IProgress'1");
            feature.AddKnownType("System.InsufficientMemoryException", "InsufficientMemoryException");
            feature.AddKnownType("System.InsufficientExecutionStackException", "InsufficientExecutionStackException");
            feature.AddKnownType("System.Lazy`1", "Lazy'1");
            feature.AddKnownType("System.System_LazyDebugView`1", "System_LazyDebugView'1");
            feature.AddKnownType("System.InvalidCastException", "InvalidCastException");
            feature.AddKnownType("System.InvalidOperationException", "InvalidOperationException");
            feature.AddKnownType("System.InvalidProgramException", "InvalidProgramException");
            feature.AddKnownType("System.InvalidTimeZoneException", "InvalidTimeZoneException");
            feature.AddKnownType("System.IConvertible", "IConvertible");
            feature.AddKnownType("System.IServiceProvider", "IServiceProvider");
            feature.AddKnownType("System.LocalDataStoreHolder", "LocalDataStoreHolder");
            feature.AddKnownType("System.LocalDataStoreElement", "LocalDataStoreElement");
            feature.AddKnownType("System.LocalDataStore", "LocalDataStore");
            feature.AddKnownType("System.LocalDataStoreSlot", "LocalDataStoreSlot");
            feature.AddKnownType("System.LocalDataStoreMgr", "LocalDataStoreMgr");
            feature.AddKnownType("System.MarshalByRefObject", "MarshalByRefObject");
            feature.AddKnownType("System.MethodAccessException", "MethodAccessException");
            feature.AddKnownType("System.MidpointRounding", "MidpointRounding");
            feature.AddKnownType("System.MissingFieldException", "MissingFieldException");
            feature.AddKnownType("System.MissingMemberException", "MissingMemberException");
            feature.AddKnownType("System.MissingMethodException", "MissingMethodException");
            feature.AddKnownType("System.MulticastNotSupportedException", "MulticastNotSupportedException");
            feature.AddKnownType("System.NonSerializedAttribute", "NonSerializedAttribute");
            feature.AddKnownType("System.NotFiniteNumberException", "NotFiniteNumberException");
            feature.AddKnownType("System.NotImplementedException", "NotImplementedException");
            feature.AddKnownType("System.NotSupportedException", "NotSupportedException");
            feature.AddKnownType("System.NullReferenceException", "NullReferenceException");
            feature.AddKnownType("System.Number", "Number");
            feature.AddKnownType("System.Number+NumberBuffer", "NumberBuffer");
            feature.AddKnownType("System.ObjectDisposedException", "ObjectDisposedException");
            feature.AddKnownType("System.ObsoleteAttribute", "ObsoleteAttribute");
            feature.AddKnownType("System.OleAutBinder", "OleAutBinder");
            feature.AddKnownType("System.OperatingSystem", "OperatingSystem");
            feature.AddKnownType("System.OperationCanceledException", "OperationCanceledException");
            feature.AddKnownType("System.OverflowException", "OverflowException");
            feature.AddKnownType("System.ParamArrayAttribute", "ParamArrayAttribute");
            feature.AddKnownType("System.ParamsArray", "ParamsArray");
            feature.AddKnownType("System.PlatformID", "PlatformID");
            feature.AddKnownType("System.PlatformNotSupportedException", "PlatformNotSupportedException");
            feature.AddKnownType("System.Progress`1", "Progress'1");
            feature.AddKnownType("System.Random", "Random");
            feature.AddKnownType("System.RankException", "RankException");
            feature.AddKnownType("System.TypeNameFormatFlags", "TypeNameFormatFlags");
            feature.AddKnownType("System.TypeNameKind", "TypeNameKind");
            feature.AddKnownType("System.RuntimeType", "RuntimeType");
            feature.AddKnownType("System.RuntimeType+MemberListType", "MemberListType");
            feature.AddKnownType("System.RuntimeType+RuntimeTypeCache", "RuntimeTypeCache");
            feature.AddKnownType("System.RuntimeType+RuntimeTypeCache+CacheType", "CacheType");
            feature.AddKnownType("System.ReflectionOnlyType", "ReflectionOnlyType");
            feature.AddKnownType("System.Utf8String", "Utf8String");
            feature.AddKnownType("System.RuntimeTypeHandle+IntroducedMethodEnumerator", "IntroducedMethodEnumerator");
            feature.AddKnownType("System.RuntimeMethodHandleInternal", "RuntimeMethodHandleInternal");
            feature.AddKnownType("System.RuntimeMethodInfoStub", "RuntimeMethodInfoStub");
            feature.AddKnownType("System.IRuntimeMethodInfo", "IRuntimeMethodInfo");
            feature.AddKnownType("System.RuntimeFieldHandleInternal", "RuntimeFieldHandleInternal");
            feature.AddKnownType("System.IRuntimeFieldInfo", "IRuntimeFieldInfo");
            feature.AddKnownType("System.RuntimeFieldInfoStub", "RuntimeFieldInfoStub");
            feature.AddKnownType("System.ModuleHandle", "ModuleHandle");
            feature.AddKnownType("System.Signature", "Signature");
            feature.AddKnownType("System.Signature+MdSigCallingConvention", "MdSigCallingConvention");
            feature.AddKnownType("System.Resolver", "Resolver");
            feature.AddKnownType("System.Resolver+CORINFO_EH_CLAUSE", "CORINFO_EH_CLAUSE");
            feature.AddKnownType("System.SerializableAttribute", "SerializableAttribute");
            feature.AddKnownType("System.SharedStatics", "SharedStatics");
            feature.AddKnownType("System.STAThreadAttribute", "STAThreadAttribute");
            feature.AddKnownType("System.MTAThreadAttribute", "MTAThreadAttribute");
            feature.AddKnownType("System.TimeoutException", "TimeoutException");
            feature.AddKnownType("System.TimeSpan", "TimeSpan");
            feature.AddKnownType("System.TimeZone", "TimeZone");
            feature.AddKnownType("System.TimeZoneInfoOptions", "TimeZoneInfoOptions");
            feature.AddKnownType("System.TimeZoneInfo", "TimeZoneInfo");
            feature.AddKnownType("System.TimeZoneInfo+AdjustmentRule", "TimeZoneInfo.AdjustmentRule");
            feature.AddKnownType("System.TimeZoneInfo+TransitionTime", "TimeZoneInfo.TransitionTime");
            feature.AddKnownType("System.TimeZoneNotFoundException", "TimeZoneNotFoundException");
            feature.AddKnownType("System.Type", "Type");
            feature.AddKnownType("System.TypeAccessException", "TypeAccessException");
            feature.AddKnownType("System.SafeTypeNameParserHandle", "SafeTypeNameParserHandle");
            feature.AddKnownType("System.TypeNameParser", "TypeNameParser");
            feature.AddKnownType("System.TypeCode", "TypeCode");
            feature.AddKnownType("System.TypeInitializationException", "TypeInitializationException");
            feature.AddKnownType("System.TypeLoadException", "TypeLoadException");
            feature.AddKnownType("System.UnauthorizedAccessException", "UnauthorizedAccessException");
            feature.AddKnownType("System.UnitySerializationHolder", "UnitySerializationHolder");
            feature.AddKnownType("System.UnhandledExceptionEventArgs", "UnhandledExceptionEventArgs");
            feature.AddKnownType("System.UnSafeCharBuffer", "UnSafeCharBuffer");
            feature.AddKnownType("System.Variant", "Variant");
            feature.AddKnownType("System.Version", "Version");
            feature.AddKnownType("System.Version+ParseFailureKind", "ParseFailureKind");
            feature.AddKnownType("System.Version+VersionResult", "VersionResult");
            feature.AddKnownType("System.WeakReference", "WeakReference");
            feature.AddKnownType("System.WeakReference`1", "WeakReference'1");
            feature.AddKnownType("System.XmlIgnoreMemberAttribute", "XmlIgnoreMemberAttribute");
            feature.AddKnownType("System.CLRConfig", "CLRConfig");
            feature.AddKnownType("System.ThreadStaticAttribute", "ThreadStaticAttribute");
            feature.AddKnownType("System.DateTimeParse+DTT", "DTT");
            feature.AddKnownType("System.DateTimeParse+TM", "TM");
            feature.AddKnownType("System.DateTimeParse+DS", "DS");
            feature.AddKnownType("System.__DTString", "__DTString");
            feature.AddKnownType("System.DTSubStringType", "DTSubStringType");
            feature.AddKnownType("System.DTSubString", "DTSubString");
            feature.AddKnownType("System.DateTimeToken", "DateTimeToken");
            feature.AddKnownType("System.DateTimeRawInfo", "DateTimeRawInfo");
            feature.AddKnownType("System.ParseFailureKind", "ParseFailureKind");
            feature.AddKnownType("System.ParseFlags", "ParseFlags");
            feature.AddKnownType("System.DateTimeResult", "DateTimeResult");
            feature.AddKnownType("System.ParsingInfo", "ParsingInfo");
            feature.AddKnownType("System.TokenType", "TokenType");
            feature.AddKnownType("System.CompatibilityFlag", "CompatibilityFlag");
            feature.AddKnownType("System.Collections.CaseInsensitiveComparer", "CaseInsensitiveComparer");
            feature.AddKnownType("System.Collections.CaseInsensitiveHashCodeProvider", "CaseInsensitiveHashCodeProvider");
            feature.AddKnownType("System.Collections.CollectionBase", "CollectionBase");
            feature.AddKnownType("System.Collections.DictionaryBase", "DictionaryBase");
            feature.AddKnownType("System.Collections.ReadOnlyCollectionBase", "ReadOnlyCollectionBase");
            feature.AddKnownType("System.Collections.Queue", "Queue");
            feature.AddKnownType("System.Collections.Queue+QueueDebugView", "QueueDebugView");
            feature.AddKnownType("System.Collections.ArrayList", "ArrayList");
            feature.AddKnownType("System.Collections.ArrayList+ArrayListDebugView", "ArrayListDebugView");
            feature.AddKnownType("System.Collections.BitArray", "BitArray");
            feature.AddKnownType("System.Collections.Stack", "Stack");
            feature.AddKnownType("System.Collections.Stack+StackDebugView", "StackDebugView");
            feature.AddKnownType("System.Collections.Comparer", "Comparer");
            feature.AddKnownType("System.Collections.CompatibleComparer", "CompatibleComparer");
            feature.AddKnownType("System.Collections.ListDictionaryInternal", "ListDictionaryInternal");
            feature.AddKnownType("System.Collections.EmptyReadOnlyDictionaryInternal", "EmptyReadOnlyDictionaryInternal");
            feature.AddKnownType("System.Collections.Hashtable", "Hashtable");
            feature.AddKnownType("System.Collections.Hashtable+HashtableDebugView", "HashtableDebugView");
            feature.AddKnownType("System.Collections.DictionaryEntry", "DictionaryEntry");
            feature.AddKnownType("System.Collections.ICollection", "ICollection");
            feature.AddKnownType("System.Collections.IComparer", "IComparer");
            feature.AddKnownType("System.Collections.IDictionary", "IDictionary");
            feature.AddKnownType("System.Collections.IDictionaryEnumerator", "IDictionaryEnumerator");
            feature.AddKnownType("System.Collections.IEqualityComparer", "IEqualityComparer");
            feature.AddKnownType("System.Collections.IHashCodeProvider", "IHashCodeProvider");
            feature.AddKnownType("System.Collections.IList", "IList");
            feature.AddKnownType("System.Collections.KeyValuePairs", "KeyValuePairs");
            feature.AddKnownType("System.Collections.SortedList", "SortedList");
            feature.AddKnownType("System.Collections.SortedList+SortedListDebugView", "SortedListDebugView");
            feature.AddKnownType("System.Collections.IStructuralEquatable", "IStructuralEquatable");
            feature.AddKnownType("System.Collections.IStructuralComparable", "IStructuralComparable");
            feature.AddKnownType("System.Collections.StructuralEqualityComparer", "StructuralEqualityComparer");
            feature.AddKnownType("System.Collections.StructuralComparer", "StructuralComparer");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentStack`1", "ConcurrentStack'1");
            feature.AddKnownType("System.Collections.Concurrent.IProducerConsumerCollection`1", "IProducerConsumerCollection'1");
            feature.AddKnownType("System.Collections.Concurrent.SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1", "SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView'1");
            feature.AddKnownType("System.Collections.Concurrent.CDSCollectionETWBCLProvider", "CDSCollectionETWBCLProvider");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentDictionary`2", "ConcurrentDictionary'2");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentQueue`1", "ConcurrentQueue'1");
            feature.AddKnownType("System.Collections.Concurrent.VolatileBool", "VolatileBool");
            feature.AddKnownType("System.Collections.Concurrent.Partitioner`1", "Partitioner'1");
            feature.AddKnownType("System.Collections.Concurrent.OrderablePartitioner`1", "OrderablePartitioner'1");
            feature.AddKnownType("System.Collections.Concurrent.EnumerablePartitionerOptions", "EnumerablePartitionerOptions");
            feature.AddKnownType("System.Collections.Generic.Comparer`1", "Comparer'1");
            feature.AddKnownType("System.Collections.Generic.GenericComparer`1", "GenericComparer'1");
            feature.AddKnownType("System.Collections.Generic.NullableComparer`1", "NullableComparer'1");
            feature.AddKnownType("System.Collections.Generic.ObjectComparer`1", "ObjectComparer'1");
            feature.AddKnownType("System.Collections.Generic.ComparisonComparer`1", "ComparisonComparer'1");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2", "Dictionary'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+Enumerator", "Dictionary'2.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+KeyCollection", "Dictionary'2.KeyCollection'0");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator", "Dictionary'2.KeyCollection'0.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+ValueCollection", "Dictionary'2.ValueCollection'0");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator", "Dictionary'2.ValueCollection'0.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.EqualityComparer`1", "EqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.GenericEqualityComparer`1", "GenericEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.NullableEqualityComparer`1", "NullableEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.ObjectEqualityComparer`1", "ObjectEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.ByteEqualityComparer", "ByteEqualityComparer");
            feature.AddKnownType("System.Collections.Generic.EnumEqualityComparer`1", "EnumEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.SByteEnumEqualityComparer`1", "SByteEnumEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.ShortEnumEqualityComparer`1", "ShortEnumEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.LongEnumEqualityComparer`1", "LongEnumEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.RandomizedStringEqualityComparer", "RandomizedStringEqualityComparer");
            feature.AddKnownType("System.Collections.Generic.RandomizedObjectEqualityComparer", "RandomizedObjectEqualityComparer");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_CollectionDebugView`1", "Mscorlib_CollectionDebugView'1");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_DictionaryKeyCollectionDebugView`2", "Mscorlib_DictionaryKeyCollectionDebugView'2");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_DictionaryValueCollectionDebugView`2", "Mscorlib_DictionaryValueCollectionDebugView'2");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_DictionaryDebugView`2", "Mscorlib_DictionaryDebugView'2");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2", "Mscorlib_KeyedCollectionDebugView'2");
            feature.AddKnownType("System.Collections.Generic.IComparer`1", "IComparer'1");
            feature.AddKnownType("System.Collections.Generic.IDictionary`2", "IDictionary'2");
            feature.AddKnownType("System.Collections.Generic.IEqualityComparer`1", "IEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.IReadOnlyDictionary`2", "IReadOnlyDictionary'2");
            feature.AddKnownType("System.Collections.Generic.KeyNotFoundException", "KeyNotFoundException");
            feature.AddKnownType("System.Collections.Generic.KeyValuePair`2", "KeyValuePair'2");
            feature.AddKnownType("System.Collections.Generic.List`1", "List'1");
            feature.AddKnownType("System.Collections.Generic.List`1+SynchronizedList", "SynchronizedList'0");
            feature.AddKnownType("System.Collections.Generic.List`1+Enumerator", "List'1.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.IArraySortHelper`1", "IArraySortHelper'1");
            feature.AddKnownType("System.Collections.Generic.IArraySortHelper`2", "IArraySortHelper'2");
            feature.AddKnownType("System.Collections.Generic.ArraySortHelper`1", "ArraySortHelper'1");
            feature.AddKnownType("System.Collections.Generic.ArraySortHelper`2", "ArraySortHelper'2");
            feature.AddKnownType("System.Collections.Generic.GenericArraySortHelper`1", "GenericArraySortHelper'1");
            feature.AddKnownType("System.Collections.Generic.GenericArraySortHelper`2", "GenericArraySortHelper'2");
            feature.AddKnownType("System.Collections.ObjectModel.Collection`1", "Collection'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyCollection`1", "ReadOnlyCollection'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2", "ReadOnlyDictionary'2");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2+KeyCollection", "ReadOnlyDictionary'2.KeyCollection'0");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2+ValueCollection", "ReadOnlyDictionary'2.ValueCollection'0");
            feature.AddKnownType("System.Collections.ObjectModel.KeyedCollection`2", "KeyedCollection'2");
            feature.AddKnownType("System.Configuration.Assemblies.AssemblyHash", "AssemblyHash");
            feature.AddKnownType("System.Configuration.Assemblies.AssemblyHashAlgorithm", "AssemblyHashAlgorithm");
            feature.AddKnownType("System.Configuration.Assemblies.AssemblyVersionCompatibility", "AssemblyVersionCompatibility");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISection", "ISection");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISectionWithStringKey", "ISectionWithStringKey");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISectionWithReferenceIdentityKey", "ISectionWithReferenceIdentityKey");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISectionEntry", "ISectionEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumUnknown", "IEnumUnknown");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ICDF", "ICDF");
            feature.AddKnownType("System.Deployment.Internal.Isolation.BLOB", "BLOB");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE", "IDENTITY_ATTRIBUTE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_STATUS_FLAGS", "STORE_ASSEMBLY_STATUS_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_ASSEMBLY", "STORE_ASSEMBLY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE_STATUS_FLAGS", "STORE_ASSEMBLY_FILE_STATUS_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE", "STORE_ASSEMBLY_FILE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_CATEGORY", "STORE_CATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY", "STORE_CATEGORY_SUBCATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE", "STORE_CATEGORY_INSTANCE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.CATEGORY", "CATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.CATEGORY_SUBCATEGORY", "CATEGORY_SUBCATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.CATEGORY_INSTANCE", "CATEGORY_INSTANCE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_INSTALLATION_REFERENCE", "IEnumSTORE_ASSEMBLY_INSTALLATION_REFERENCE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA", "IEnumSTORE_DEPLOYMENT_METADATA");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreDeploymentMetadataEnumeration", "StoreDeploymentMetadataEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY", "IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreDeploymentMetadataPropertyEnumeration", "StoreDeploymentMetadataPropertyEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY", "IEnumSTORE_ASSEMBLY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreAssemblyEnumeration", "StoreAssemblyEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_FILE", "IEnumSTORE_ASSEMBLY_FILE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreAssemblyFileEnumeration", "StoreAssemblyFileEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY", "IEnumSTORE_CATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreCategoryEnumeration", "StoreCategoryEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_SUBCATEGORY", "IEnumSTORE_CATEGORY_SUBCATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreSubcategoryEnumeration", "StoreSubcategoryEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_INSTANCE", "IEnumSTORE_CATEGORY_INSTANCE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreCategoryInstanceEnumeration", "StoreCategoryInstanceEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IReferenceIdentity", "IReferenceIdentity");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IDefinitionIdentity", "IDefinitionIdentity");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumIDENTITY_ATTRIBUTE", "IEnumIDENTITY_ATTRIBUTE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumDefinitionIdentity", "IEnumDefinitionIdentity");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumReferenceIdentity", "IEnumReferenceIdentity");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IDefinitionAppId", "IDefinitionAppId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IReferenceAppId", "IReferenceAppId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_DEFINITION_IDENTITY_TO_TEXT_FLAGS", "IIDENTITYAUTHORITY_DEFINITION_IDENTITY_TO_TEXT_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_REFERENCE_IDENTITY_TO_TEXT_FLAGS", "IIDENTITYAUTHORITY_REFERENCE_IDENTITY_TO_TEXT_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_DOES_DEFINITION_MATCH_REFERENCE_FLAGS", "IIDENTITYAUTHORITY_DOES_DEFINITION_MATCH_REFERENCE_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IIdentityAuthority", "IIdentityAuthority");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IAPPIDAUTHORITY_ARE_DEFINITIONS_EQUAL_FLAGS", "IAPPIDAUTHORITY_ARE_DEFINITIONS_EQUAL_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IAPPIDAUTHORITY_ARE_REFERENCES_EQUAL_FLAGS", "IAPPIDAUTHORITY_ARE_REFERENCES_EQUAL_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IAppIdAuthority", "IAppIdAuthority");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISTORE_BIND_REFERENCE_TO_ASSEMBLY_FLAGS", "ISTORE_BIND_REFERENCE_TO_ASSEMBLY_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISTORE_ENUM_ASSEMBLIES_FLAGS", "ISTORE_ENUM_ASSEMBLIES_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISTORE_ENUM_FILES_FLAGS", "ISTORE_ENUM_FILES_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponent", "StoreOperationStageComponent");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponent+OpFlags", "StoreOperationStageComponent.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponent+Disposition", "StoreOperationStageComponent.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponentFile", "StoreOperationStageComponentFile");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+OpFlags", "StoreOperationStageComponentFile.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+Disposition", "StoreOperationStageComponentFile.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreApplicationReference", "StoreApplicationReference");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreApplicationReference+RefFlags", "StoreApplicationReference.RefFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationPinDeployment", "StoreOperationPinDeployment");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationPinDeployment+OpFlags", "StoreOperationPinDeployment.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationPinDeployment+Disposition", "StoreOperationPinDeployment.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment", "StoreOperationUnpinDeployment");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+OpFlags", "StoreOperationUnpinDeployment.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+Disposition", "StoreOperationUnpinDeployment.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationInstallDeployment", "StoreOperationInstallDeployment");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+OpFlags", "StoreOperationInstallDeployment.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+Disposition", "StoreOperationInstallDeployment.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment", "StoreOperationUninstallDeployment");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+OpFlags", "StoreOperationUninstallDeployment.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+Disposition", "StoreOperationUninstallDeployment.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty", "StoreOperationMetadataProperty");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata", "StoreOperationSetDeploymentMetadata");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+OpFlags", "StoreOperationSetDeploymentMetadata.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+Disposition", "StoreOperationSetDeploymentMetadata.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext", "StoreOperationSetCanonicalizationContext");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext+OpFlags", "StoreOperationSetCanonicalizationContext.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationScavenge", "StoreOperationScavenge");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationScavenge+OpFlags", "StoreOperationScavenge.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreTransactionOperationType", "StoreTransactionOperationType");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreTransactionOperation", "StoreTransactionOperation");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreTransactionData", "StoreTransactionData");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store", "Store");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumAssembliesFlags", "Store.EnumAssembliesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumAssemblyFilesFlags", "Store.EnumAssemblyFilesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumApplicationPrivateFiles", "Store.EnumApplicationPrivateFiles");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumAssemblyInstallReferenceFlags", "Store.EnumAssemblyInstallReferenceFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+IPathLock", "Store.IPathLock");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumCategoriesFlags", "Store.EnumCategoriesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumSubcategoriesFlags", "Store.EnumSubcategoriesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumCategoryInstancesFlags", "Store.EnumCategoryInstancesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+GetPackagePropertyFlags", "Store.GetPackagePropertyFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IStore_BindingResult_BoundVersion", "IStore_BindingResult_BoundVersion");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IStore_BindingResult", "IStore_BindingResult");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IStore", "IStore");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreTransaction", "StoreTransaction");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IManifestParseErrorCallback", "IManifestParseErrorCallback");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters", "CreateActContextParameters");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters+CreateFlags", "CreateActContextParameters.CreateFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource", "CreateActContextParametersSource");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource+SourceFlags", "CreateActContextParametersSource.SourceFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSourceDefinitionAppid", "CreateActContextParametersSourceDefinitionAppid");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IManifestInformation", "IManifestInformation");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IActContext", "IActContext");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StateManager_RunningState", "StateManager_RunningState");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IStateManager", "IStateManager");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMSSECTIONID", "CMSSECTIONID");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_DEPLOYMENT_FLAG", "CMS_ASSEMBLY_DEPLOYMENT_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_REFERENCE_FLAG", "CMS_ASSEMBLY_REFERENCE_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG", "CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_FILE_FLAG", "CMS_FILE_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_ENTRY_POINT_FLAG", "CMS_ENTRY_POINT_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_COM_SERVER_FLAG", "CMS_COM_SERVER_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_USAGE_PATTERN", "CMS_USAGE_PATTERN");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_SCHEMA_VERSION", "CMS_SCHEMA_VERSION");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_FILE_HASH_ALGORITHM", "CMS_FILE_HASH_ALGORITHM");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_TIME_UNIT_TYPE", "CMS_TIME_UNIT_TYPE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_FILE_WRITABLE_TYPE", "CMS_FILE_WRITABLE_TYPE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM", "CMS_HASH_TRANSFORM");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD", "CMS_HASH_DIGESTMETHOD");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICMS", "ICMS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntry", "MuiResourceIdLookupMapEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntryFieldId", "MuiResourceIdLookupMapEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMuiResourceIdLookupMapEntry", "IMuiResourceIdLookupMapEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntry", "MuiResourceTypeIdStringEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntryFieldId", "MuiResourceTypeIdStringEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMuiResourceTypeIdStringEntry", "IMuiResourceTypeIdStringEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntry", "MuiResourceTypeIdIntEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntryFieldId", "MuiResourceTypeIdIntEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMuiResourceTypeIdIntEntry", "IMuiResourceTypeIdIntEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntry", "MuiResourceMapEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntryFieldId", "MuiResourceMapEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMuiResourceMapEntry", "IMuiResourceMapEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.HashElementEntry", "HashElementEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.HashElementEntryFieldId", "HashElementEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IHashElementEntry", "IHashElementEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.FileEntry", "FileEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.FileEntryFieldId", "FileEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IFileEntry", "IFileEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.FileAssociationEntry", "FileAssociationEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.FileAssociationEntryFieldId", "FileAssociationEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IFileAssociationEntry", "IFileAssociationEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntry", "CategoryMembershipDataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntryFieldId", "CategoryMembershipDataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICategoryMembershipDataEntry", "ICategoryMembershipDataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntry", "SubcategoryMembershipEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntryFieldId", "SubcategoryMembershipEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ISubcategoryMembershipEntry", "ISubcategoryMembershipEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntry", "CategoryMembershipEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntryFieldId", "CategoryMembershipEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICategoryMembershipEntry", "ICategoryMembershipEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.COMServerEntry", "COMServerEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.COMServerEntryFieldId", "COMServerEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICOMServerEntry", "ICOMServerEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntry", "ProgIdRedirectionEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntryFieldId", "ProgIdRedirectionEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IProgIdRedirectionEntry", "IProgIdRedirectionEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntry", "CLRSurrogateEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntryFieldId", "CLRSurrogateEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICLRSurrogateEntry", "ICLRSurrogateEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntry", "AssemblyReferenceDependentAssemblyEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntryFieldId", "AssemblyReferenceDependentAssemblyEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceDependentAssemblyEntry", "IAssemblyReferenceDependentAssemblyEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntry", "AssemblyReferenceEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntryFieldId", "AssemblyReferenceEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceEntry", "IAssemblyReferenceEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.WindowClassEntry", "WindowClassEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.WindowClassEntryFieldId", "WindowClassEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IWindowClassEntry", "IWindowClassEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntry", "ResourceTableMappingEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntryFieldId", "ResourceTableMappingEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IResourceTableMappingEntry", "IResourceTableMappingEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.EntryPointEntry", "EntryPointEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.EntryPointEntryFieldId", "EntryPointEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IEntryPointEntry", "IEntryPointEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.PermissionSetEntry", "PermissionSetEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.PermissionSetEntryFieldId", "PermissionSetEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IPermissionSetEntry", "IPermissionSetEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntry", "AssemblyRequestEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntryFieldId", "AssemblyRequestEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IAssemblyRequestEntry", "IAssemblyRequestEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntry", "DescriptionMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntryFieldId", "DescriptionMetadataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IDescriptionMetadataEntry", "IDescriptionMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntry", "DeploymentMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntryFieldId", "DeploymentMetadataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IDeploymentMetadataEntry", "IDeploymentMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntry", "DependentOSMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntryFieldId", "DependentOSMetadataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IDependentOSMetadataEntry", "IDependentOSMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntry", "CompatibleFrameworksMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntryFieldId", "CompatibleFrameworksMetadataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICompatibleFrameworksMetadataEntry", "ICompatibleFrameworksMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntry", "MetadataSectionEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntryFieldId", "MetadataSectionEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMetadataSectionEntry", "IMetadataSectionEntry");
            feature.AddKnownType("System.Diagnostics.AssertFilter", "AssertFilter");
            feature.AddKnownType("System.Diagnostics.DefaultFilter", "DefaultFilter");
            feature.AddKnownType("System.Diagnostics.AssertFilters", "AssertFilters");
            feature.AddKnownType("System.Diagnostics.ConditionalAttribute", "ConditionalAttribute");
            feature.AddKnownType("System.Diagnostics.Debugger", "Debugger");
            feature.AddKnownType("System.Diagnostics.DebuggerStepThroughAttribute", "DebuggerStepThroughAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerStepperBoundaryAttribute", "DebuggerStepperBoundaryAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerHiddenAttribute", "DebuggerHiddenAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerNonUserCodeAttribute", "DebuggerNonUserCodeAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggableAttribute", "DebuggableAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggableAttribute+DebuggingModes", "DebuggableAttribute.DebuggingModes");
            feature.AddKnownType("System.Diagnostics.DebuggerBrowsableState", "DebuggerBrowsableState");
            feature.AddKnownType("System.Diagnostics.DebuggerBrowsableAttribute", "DebuggerBrowsableAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerTypeProxyAttribute", "DebuggerTypeProxyAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerDisplayAttribute", "DebuggerDisplayAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerVisualizerAttribute", "DebuggerVisualizerAttribute");
            feature.AddKnownType("System.Diagnostics.ICustomDebuggerNotification", "ICustomDebuggerNotification");
            feature.AddKnownType("System.Diagnostics.LoggingLevels", "LoggingLevels");
            feature.AddKnownType("System.Diagnostics.LogSwitch", "LogSwitch");
            feature.AddKnownType("System.Diagnostics.StackFrameHelper", "StackFrameHelper");
            feature.AddKnownType("System.Diagnostics.StackTrace", "StackTrace");
            feature.AddKnownType("System.Diagnostics.StackTrace+TraceFormat", "TraceFormat");
            feature.AddKnownType("System.Diagnostics.StackFrame", "StackFrame");
            feature.AddKnownType("System.Diagnostics.EditAndContinueHelper", "EditAndContinueHelper");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute", "SuppressMessageAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.PureAttribute", "PureAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractClassAttribute", "ContractClassAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractClassForAttribute", "ContractClassForAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractInvariantMethodAttribute", "ContractInvariantMethodAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute", "ContractReferenceAssemblyAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute", "ContractRuntimeIgnoredAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractVerificationAttribute", "ContractVerificationAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute", "ContractPublicPropertyNameAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractArgumentValidatorAttribute", "ContractArgumentValidatorAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractAbbreviatorAttribute", "ContractAbbreviatorAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractOptionAttribute", "ContractOptionAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractFailureKind", "ContractFailureKind");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractFailedEventArgs", "ContractFailedEventArgs");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractException", "ContractException");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolBinder", "ISymbolBinder");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolBinder1", "ISymbolBinder1");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolDocument", "ISymbolDocument");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolDocumentWriter", "ISymbolDocumentWriter");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolMethod", "ISymbolMethod");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolNamespace", "ISymbolNamespace");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolReader", "ISymbolReader");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolScope", "ISymbolScope");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolVariable", "ISymbolVariable");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolWriter", "ISymbolWriter");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymAddressKind", "SymAddressKind");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymDocumentType", "SymDocumentType");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymLanguageType", "SymLanguageType");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymLanguageVendor", "SymLanguageVendor");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymbolToken", "SymbolToken");
            feature.AddKnownType("System.Diagnostics.Tracing.ActivityTracker", "ActivityTracker");
            feature.AddKnownType("System.Diagnostics.Tracing.EventActivityOptions", "EventActivityOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.EventDescriptor", "EventDescriptor");
            feature.AddKnownType("System.Diagnostics.Tracing.ControllerCommand", "ControllerCommand");
            feature.AddKnownType("System.Diagnostics.Tracing.EventProvider", "EventProvider");
            feature.AddKnownType("System.Diagnostics.Tracing.EventProvider+EventData", "EventProvider.EventData");
            feature.AddKnownType("System.Diagnostics.Tracing.EventProvider+SessionInfo", "EventProvider.SessionInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.EventProvider+WriteEventErrorCode", "EventProvider.WriteEventErrorCode");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSource", "EventSource");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSource+EventData", "EventData");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSource+EventMetadata", "EventMetadata");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceSettings", "EventSourceSettings");
            feature.AddKnownType("System.Diagnostics.Tracing.EventListener", "EventListener");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCommandEventArgs", "EventCommandEventArgs");
            feature.AddKnownType("System.Diagnostics.Tracing.EventWrittenEventArgs", "EventWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceAttribute", "EventSourceAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventAttribute", "EventAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.NonEventAttribute", "NonEventAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventChannelAttribute", "EventChannelAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventChannelType", "EventChannelType");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCommand", "EventCommand");
            feature.AddKnownType("System.Diagnostics.Tracing.ActivityFilter", "ActivityFilter");
            feature.AddKnownType("System.Diagnostics.Tracing.EtwSession", "EtwSession");
            feature.AddKnownType("System.Diagnostics.Tracing.SessionMask", "SessionMask");
            feature.AddKnownType("System.Diagnostics.Tracing.EventDispatcher", "EventDispatcher");
            feature.AddKnownType("System.Diagnostics.Tracing.EventManifestOptions", "EventManifestOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.ManifestBuilder", "ManifestBuilder");
            feature.AddKnownType("System.Diagnostics.Tracing.ManifestEnvelope", "ManifestEnvelope");
            feature.AddKnownType("System.Diagnostics.Tracing.ManifestEnvelope+ManifestFormats", "ManifestEnvelope.ManifestFormats");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceException", "EventSourceException");
            feature.AddKnownType("System.Diagnostics.Tracing.FrameworkEventSource", "FrameworkEventSource");
            feature.AddKnownType("System.Diagnostics.Tracing.EventLevel", "EventLevel");
            feature.AddKnownType("System.Diagnostics.Tracing.EventTask", "EventTask");
            feature.AddKnownType("System.Diagnostics.Tracing.EventOpcode", "EventOpcode");
            feature.AddKnownType("System.Diagnostics.Tracing.EventChannel", "EventChannel");
            feature.AddKnownType("System.Diagnostics.Tracing.EventKeywords", "EventKeywords");
            feature.AddKnownType("System.Diagnostics.Tracing.ArrayTypeInfo`1", "ArrayTypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.ConcurrentSet`2", "ConcurrentSet'2");
            feature.AddKnownType("System.Diagnostics.Tracing.ConcurrentSetItem`2", "ConcurrentSetItem'2");
            feature.AddKnownType("System.Diagnostics.Tracing.DataCollector", "DataCollector");
            feature.AddKnownType("System.Diagnostics.Tracing.EmptyStruct", "EmptyStruct");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumerableTypeInfo`2", "EnumerableTypeInfo'2");
            feature.AddKnownType("System.Diagnostics.Tracing.EventDataAttribute", "EventDataAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldTags", "EventFieldTags");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldAttribute", "EventFieldAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldFormat", "EventFieldFormat");
            feature.AddKnownType("System.Diagnostics.Tracing.EventIgnoreAttribute", "EventIgnoreAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventPayload", "EventPayload");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceActivity", "EventSourceActivity");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceOptions", "EventSourceOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.FieldMetadata", "FieldMetadata");
            feature.AddKnownType("System.Diagnostics.Tracing.InvokeTypeInfo`1", "InvokeTypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.NameInfo", "NameInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.PropertyAccessor`1", "PropertyAccessor'1");
            feature.AddKnownType("System.Diagnostics.Tracing.NonGenericProperytWriter`1", "NonGenericProperytWriter'1");
            feature.AddKnownType("System.Diagnostics.Tracing.StructPropertyWriter`2", "StructPropertyWriter'2");
            feature.AddKnownType("System.Diagnostics.Tracing.ClassPropertyWriter`2", "ClassPropertyWriter'2");
            feature.AddKnownType("System.Diagnostics.Tracing.PropertyAnalysis", "PropertyAnalysis");
            feature.AddKnownType("System.Diagnostics.Tracing.SimpleEventTypes`1", "SimpleEventTypes'1");
            feature.AddKnownType("System.Diagnostics.Tracing.NullTypeInfo`1", "NullTypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.BooleanTypeInfo", "BooleanTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.ByteTypeInfo", "ByteTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.SByteTypeInfo", "SByteTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int16TypeInfo", "Int16TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt16TypeInfo", "UInt16TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int32TypeInfo", "Int32TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt32TypeInfo", "UInt32TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int64TypeInfo", "Int64TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt64TypeInfo", "UInt64TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.IntPtrTypeInfo", "IntPtrTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UIntPtrTypeInfo", "UIntPtrTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DoubleTypeInfo", "DoubleTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.SingleTypeInfo", "SingleTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.CharTypeInfo", "CharTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.BooleanArrayTypeInfo", "BooleanArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.ByteArrayTypeInfo", "ByteArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.SByteArrayTypeInfo", "SByteArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int16ArrayTypeInfo", "Int16ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt16ArrayTypeInfo", "UInt16ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int32ArrayTypeInfo", "Int32ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt32ArrayTypeInfo", "UInt32ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int64ArrayTypeInfo", "Int64ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt64ArrayTypeInfo", "UInt64ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.IntPtrArrayTypeInfo", "IntPtrArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UIntPtrArrayTypeInfo", "UIntPtrArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.CharArrayTypeInfo", "CharArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DoubleArrayTypeInfo", "DoubleArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.SingleArrayTypeInfo", "SingleArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumByteTypeInfo`1", "EnumByteTypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumSByteTypeInfo`1", "EnumSByteTypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumInt16TypeInfo`1", "EnumInt16TypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumUInt16TypeInfo`1", "EnumUInt16TypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumInt32TypeInfo`1", "EnumInt32TypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumUInt32TypeInfo`1", "EnumUInt32TypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumInt64TypeInfo`1", "EnumInt64TypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumUInt64TypeInfo`1", "EnumUInt64TypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.StringTypeInfo", "StringTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.GuidTypeInfo", "GuidTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.GuidArrayTypeInfo", "GuidArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DateTimeTypeInfo", "DateTimeTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DateTimeOffsetTypeInfo", "DateTimeOffsetTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.TimeSpanTypeInfo", "TimeSpanTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DecimalTypeInfo", "DecimalTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.KeyValuePairTypeInfo`2", "KeyValuePairTypeInfo'2");
            feature.AddKnownType("System.Diagnostics.Tracing.NullableTypeInfo`1", "NullableTypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingDataCollector", "TraceLoggingDataCollector");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingDataType", "TraceLoggingDataType");
            feature.AddKnownType("System.Diagnostics.Tracing.EventTags", "EventTags");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingEventTypes", "TraceLoggingEventTypes");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingMetadataCollector", "TraceLoggingMetadataCollector");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingTypeInfo", "TraceLoggingTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingTypeInfo`1", "TraceLoggingTypeInfo'1");
            feature.AddKnownType("System.Diagnostics.Tracing.TypeAnalysis", "TypeAnalysis");
            feature.AddKnownType("System.Globalization.AppDomainSortingSetupInfo", "AppDomainSortingSetupInfo");
            feature.AddKnownType("System.Globalization.BidiCategory", "BidiCategory");
            feature.AddKnownType("System.Globalization.Calendar", "Calendar");
            feature.AddKnownType("System.Globalization.CalendarData", "CalendarData");
            feature.AddKnownType("System.Globalization.CalendarAlgorithmType", "CalendarAlgorithmType");
            feature.AddKnownType("System.Globalization.CalendarWeekRule", "CalendarWeekRule");
            feature.AddKnownType("System.Globalization.CharUnicodeInfo+UnicodeDataHeader", "UnicodeDataHeader");
            feature.AddKnownType("System.Globalization.CharUnicodeInfo+DigitValues", "DigitValues");
            feature.AddKnownType("System.Globalization.CompareOptions", "CompareOptions");
            feature.AddKnownType("System.Globalization.CompareInfo", "CompareInfo");
            feature.AddKnownType("System.Globalization.CultureInfo", "CultureInfo");
            feature.AddKnownType("System.Globalization.CultureNotFoundException", "CultureNotFoundException");
            feature.AddKnownType("System.Globalization.CultureTypes", "CultureTypes");
            feature.AddKnownType("System.Globalization.DateTimeStyles", "DateTimeStyles");
            feature.AddKnownType("System.Globalization.MonthNameStyles", "MonthNameStyles");
            feature.AddKnownType("System.Globalization.DateTimeFormatFlags", "DateTimeFormatFlags");
            feature.AddKnownType("System.Globalization.DateTimeFormatInfo", "DateTimeFormatInfo");
            feature.AddKnownType("System.Globalization.TokenHashValue", "TokenHashValue");
            feature.AddKnownType("System.Globalization.FORMATFLAGS", "FORMATFLAGS");
            feature.AddKnownType("System.Globalization.CalendarId", "CalendarId");
            feature.AddKnownType("System.Globalization.DateTimeFormatInfoScanner", "DateTimeFormatInfoScanner");
            feature.AddKnownType("System.Globalization.DaylightTime", "DaylightTime");
            feature.AddKnownType("System.Globalization.DigitShapes", "DigitShapes");
            feature.AddKnownType("System.Globalization.CodePageDataItem", "CodePageDataItem");
            feature.AddKnownType("System.Globalization.InternalEncodingDataItem", "InternalEncodingDataItem");
            feature.AddKnownType("System.Globalization.InternalCodePageDataItem", "InternalCodePageDataItem");
            feature.AddKnownType("System.Globalization.GlobalizationAssembly", "GlobalizationAssembly");
            feature.AddKnownType("System.Globalization.GregorianCalendar", "GregorianCalendar");
            feature.AddKnownType("System.Globalization.GregorianCalendarTypes", "GregorianCalendarTypes");
            feature.AddKnownType("System.Globalization.EraInfo", "EraInfo");
            feature.AddKnownType("System.Globalization.GregorianCalendarHelper", "GregorianCalendarHelper");
            feature.AddKnownType("System.Globalization.HebrewCalendar", "HebrewCalendar");
            feature.AddKnownType("System.Globalization.HebrewCalendar+__DateBuffer", "__DateBuffer");
            feature.AddKnownType("System.Globalization.HijriCalendar", "HijriCalendar");
            feature.AddKnownType("System.Globalization.UmAlQuraCalendar", "UmAlQuraCalendar");
            feature.AddKnownType("System.Globalization.UmAlQuraCalendar+DateMapping", "DateMapping");
            feature.AddKnownType("System.Globalization.ChineseLunisolarCalendar", "ChineseLunisolarCalendar");
            feature.AddKnownType("System.Globalization.EastAsianLunisolarCalendar", "EastAsianLunisolarCalendar");
            feature.AddKnownType("System.Globalization.JapaneseLunisolarCalendar", "JapaneseLunisolarCalendar");
            feature.AddKnownType("System.Globalization.JulianCalendar", "JulianCalendar");
            feature.AddKnownType("System.Globalization.KoreanLunisolarCalendar", "KoreanLunisolarCalendar");
            feature.AddKnownType("System.Globalization.PersianCalendar", "PersianCalendar");
            feature.AddKnownType("System.Globalization.CalendricalCalculationsHelper", "CalendricalCalculationsHelper");
            feature.AddKnownType("System.Globalization.TaiwanLunisolarCalendar", "TaiwanLunisolarCalendar");
            feature.AddKnownType("System.Globalization.IdnMapping", "IdnMapping");
            feature.AddKnownType("System.Globalization.JapaneseCalendar", "JapaneseCalendar");
            feature.AddKnownType("System.Globalization.KoreanCalendar", "KoreanCalendar");
            feature.AddKnownType("System.Globalization.RegionInfo", "RegionInfo");
            feature.AddKnownType("System.Globalization.SortKey", "SortKey");
            feature.AddKnownType("System.Globalization.StringInfo", "StringInfo");
            feature.AddKnownType("System.Globalization.TaiwanCalendar", "TaiwanCalendar");
            feature.AddKnownType("System.Globalization.TextElementEnumerator", "TextElementEnumerator");
            feature.AddKnownType("System.Globalization.TextInfo", "TextInfo");
            feature.AddKnownType("System.Globalization.ThaiBuddhistCalendar", "ThaiBuddhistCalendar");
            feature.AddKnownType("System.Globalization.TimeSpanFormat+Pattern", "Pattern");
            feature.AddKnownType("System.Globalization.TimeSpanFormat+FormatLiterals", "FormatLiterals");
            feature.AddKnownType("System.Globalization.TimeSpanStyles", "TimeSpanStyles");
            feature.AddKnownType("System.Globalization.NumberFormatInfo", "NumberFormatInfo");
            feature.AddKnownType("System.Globalization.NumberStyles", "NumberStyles");
            feature.AddKnownType("System.Globalization.UnicodeCategory", "UnicodeCategory");
            feature.AddKnownType("System.Globalization.CultureData", "CultureData");
            feature.AddKnownType("System.Globalization.HebrewNumberParsingContext", "HebrewNumberParsingContext");
            feature.AddKnownType("System.Globalization.HebrewNumberParsingState", "HebrewNumberParsingState");
            feature.AddKnownType("System.Globalization.HebrewNumber", "HebrewNumber");
            feature.AddKnownType("System.Globalization.HebrewNumber+HS", "HS");
            feature.AddKnownType("System.Globalization.SortVersion", "SortVersion");
            feature.AddKnownType("System.IO.__ConsoleStream", "__ConsoleStream");
            feature.AddKnownType("System.IO.BinaryReader", "BinaryReader");
            feature.AddKnownType("System.IO.BinaryWriter", "BinaryWriter");
            feature.AddKnownType("System.IO.BufferedStream", "BufferedStream");
            feature.AddKnownType("System.IO.Directory+SearchData", "SearchData");
            feature.AddKnownType("System.IO.DirectoryInfo", "DirectoryInfo");
            feature.AddKnownType("System.IO.SearchOption", "SearchOption");
            feature.AddKnownType("System.IO.DirectoryNotFoundException", "DirectoryNotFoundException");
            feature.AddKnownType("System.IO.DriveType", "DriveType");
            feature.AddKnownType("System.IO.DriveInfo", "DriveInfo");
            feature.AddKnownType("System.IO.DriveNotFoundException", "DriveNotFoundException");
            feature.AddKnownType("System.IO.EndOfStreamException", "EndOfStreamException");
            feature.AddKnownType("System.IO.FileAccess", "FileAccess");
            feature.AddKnownType("System.IO.FileInfo", "FileInfo");
            feature.AddKnownType("System.IO.FileLoadException", "FileLoadException");
            feature.AddKnownType("System.IO.FileMode", "FileMode");
            feature.AddKnownType("System.IO.FileNotFoundException", "FileNotFoundException");
            feature.AddKnownType("System.IO.FileOptions", "FileOptions");
            feature.AddKnownType("System.IO.FileShare", "FileShare");
            feature.AddKnownType("System.IO.FileStreamAsyncResult", "FileStreamAsyncResult");
            feature.AddKnownType("System.IO.FileStream", "FileStream");
            feature.AddKnownType("System.IO.Iterator`1", "Iterator'1");
            feature.AddKnownType("System.IO.FileSystemEnumerableIterator`1", "FileSystemEnumerableIterator'1");
            feature.AddKnownType("System.IO.SearchResultHandler`1", "SearchResultHandler'1");
            feature.AddKnownType("System.IO.StringResultHandler", "StringResultHandler");
            feature.AddKnownType("System.IO.FileInfoResultHandler", "FileInfoResultHandler");
            feature.AddKnownType("System.IO.DirectoryInfoResultHandler", "DirectoryInfoResultHandler");
            feature.AddKnownType("System.IO.FileSystemInfoResultHandler", "FileSystemInfoResultHandler");
            feature.AddKnownType("System.IO.SearchResult", "SearchResult");
            feature.AddKnownType("System.IO.FileSystemInfo", "FileSystemInfo");
            feature.AddKnownType("System.IO.FileAttributes", "FileAttributes");
            feature.AddKnownType("System.IO.IOException", "IOException");
            feature.AddKnownType("System.IO.MemoryStream", "MemoryStream");
            feature.AddKnownType("System.IO.PathHelper", "PathHelper");
            feature.AddKnownType("System.IO.PathTooLongException", "PathTooLongException");
            feature.AddKnownType("System.IO.PinnedBufferMemoryStream", "PinnedBufferMemoryStream");
            feature.AddKnownType("System.IO.ReadLinesIterator", "ReadLinesIterator");
            feature.AddKnownType("System.IO.SeekOrigin", "SeekOrigin");
            feature.AddKnownType("System.IO.Stream", "Stream");
            feature.AddKnownType("System.IO.Stream+SynchronousAsyncResult", "SynchronousAsyncResult");
            feature.AddKnownType("System.IO.Stream+SyncStream", "SyncStream");
            feature.AddKnownType("System.IO.StreamReader", "StreamReader");
            feature.AddKnownType("System.IO.StreamWriter", "StreamWriter");
            feature.AddKnownType("System.IO.StringReader", "StringReader");
            feature.AddKnownType("System.IO.StringWriter", "StringWriter");
            feature.AddKnownType("System.IO.TextReader", "TextReader");
            feature.AddKnownType("System.IO.TextReader+SyncTextReader", "SyncTextReader");
            feature.AddKnownType("System.IO.TextWriter", "TextWriter");
            feature.AddKnownType("System.IO.TextWriter+SyncTextWriter", "SyncTextWriter");
            feature.AddKnownType("System.IO.UnmanagedMemoryAccessor", "UnmanagedMemoryAccessor");
            feature.AddKnownType("System.IO.UnmanagedMemoryStream", "UnmanagedMemoryStream");
            feature.AddKnownType("System.IO.UnmanagedMemoryStreamWrapper", "UnmanagedMemoryStreamWrapper");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageScope", "IsolatedStorageScope");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorage", "IsolatedStorage");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageFileStream", "IsolatedStorageFileStream");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageException", "IsolatedStorageException");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageSecurityOptions", "IsolatedStorageSecurityOptions");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageSecurityState", "IsolatedStorageSecurityState");
            feature.AddKnownType("System.IO.IsolatedStorage.INormalizeForIsolatedStorage", "INormalizeForIsolatedStorage");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageFile", "IsolatedStorageFile");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageFileEnumerator", "IsolatedStorageFileEnumerator");
            feature.AddKnownType("System.IO.IsolatedStorage.SafeIsolatedStorageFileHandle", "SafeIsolatedStorageFileHandle");
            feature.AddKnownType("System.IO.IsolatedStorage.TwoPaths", "TwoPaths");
            feature.AddKnownType("System.IO.IsolatedStorage.TwoLevelFileEnumerator", "TwoLevelFileEnumerator");
            feature.AddKnownType("System.Reflection.CerHashtable`2", "CerHashtable'2");
            feature.AddKnownType("System.Reflection.CerHashtable`2+Table", "Table'0");
            feature.AddKnownType("System.Reflection.__Filters", "__Filters");
            feature.AddKnownType("System.Reflection.AmbiguousMatchException", "AmbiguousMatchException");
            feature.AddKnownType("System.Reflection.Assembly", "Assembly");
            feature.AddKnownType("System.Reflection.LoadContext", "LoadContext");
            feature.AddKnownType("System.Reflection.RuntimeAssembly", "RuntimeAssembly");
            feature.AddKnownType("System.Reflection.AssemblyCopyrightAttribute", "AssemblyCopyrightAttribute");
            feature.AddKnownType("System.Reflection.AssemblyTrademarkAttribute", "AssemblyTrademarkAttribute");
            feature.AddKnownType("System.Reflection.AssemblyProductAttribute", "AssemblyProductAttribute");
            feature.AddKnownType("System.Reflection.AssemblyCompanyAttribute", "AssemblyCompanyAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDescriptionAttribute", "AssemblyDescriptionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyTitleAttribute", "AssemblyTitleAttribute");
            feature.AddKnownType("System.Reflection.AssemblyConfigurationAttribute", "AssemblyConfigurationAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDefaultAliasAttribute", "AssemblyDefaultAliasAttribute");
            feature.AddKnownType("System.Reflection.AssemblyInformationalVersionAttribute", "AssemblyInformationalVersionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyFileVersionAttribute", "AssemblyFileVersionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyCultureAttribute", "AssemblyCultureAttribute");
            feature.AddKnownType("System.Reflection.AssemblyVersionAttribute", "AssemblyVersionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyKeyFileAttribute", "AssemblyKeyFileAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDelaySignAttribute", "AssemblyDelaySignAttribute");
            feature.AddKnownType("System.Reflection.AssemblyAlgorithmIdAttribute", "AssemblyAlgorithmIdAttribute");
            feature.AddKnownType("System.Reflection.AssemblyFlagsAttribute", "AssemblyFlagsAttribute");
            feature.AddKnownType("System.Reflection.AssemblyMetadataAttribute", "AssemblyMetadataAttribute");
            feature.AddKnownType("System.Reflection.AssemblySignatureKeyAttribute", "AssemblySignatureKeyAttribute");
            feature.AddKnownType("System.Reflection.AssemblyKeyNameAttribute", "AssemblyKeyNameAttribute");
            feature.AddKnownType("System.Reflection.AssemblyName", "AssemblyName");
            feature.AddKnownType("System.Reflection.AssemblyNameProxy", "AssemblyNameProxy");
            feature.AddKnownType("System.Reflection.AssemblyNameFlags", "AssemblyNameFlags");
            feature.AddKnownType("System.Reflection.AssemblyContentType", "AssemblyContentType");
            feature.AddKnownType("System.Reflection.ProcessorArchitecture", "ProcessorArchitecture");
            feature.AddKnownType("System.Reflection.Associates+Attributes", "Attributes");
            feature.AddKnownType("System.Reflection.CustomAttributeFormatException", "CustomAttributeFormatException");
            feature.AddKnownType("System.Reflection.Binder", "Binder");
            feature.AddKnownType("System.Reflection.BindingFlags", "BindingFlags");
            feature.AddKnownType("System.Reflection.CallingConventions", "CallingConventions");
            feature.AddKnownType("System.Reflection.ConstructorInfo", "ConstructorInfo");
            feature.AddKnownType("System.Reflection.RuntimeConstructorInfo", "RuntimeConstructorInfo");
            feature.AddKnownType("System.Reflection.CustomAttributeData", "CustomAttributeData");
            feature.AddKnownType("System.Reflection.CustomAttributeNamedArgument", "CustomAttributeNamedArgument");
            feature.AddKnownType("System.Reflection.CustomAttributeTypedArgument", "CustomAttributeTypedArgument");
            feature.AddKnownType("System.Reflection.CustomAttributeRecord", "CustomAttributeRecord");
            feature.AddKnownType("System.Reflection.CustomAttributeEncoding", "CustomAttributeEncoding");
            feature.AddKnownType("System.Reflection.CustomAttributeEncodedArgument", "CustomAttributeEncodedArgument");
            feature.AddKnownType("System.Reflection.CustomAttributeNamedParameter", "CustomAttributeNamedParameter");
            feature.AddKnownType("System.Reflection.CustomAttributeCtorParameter", "CustomAttributeCtorParameter");
            feature.AddKnownType("System.Reflection.SecurityContextFrame", "SecurityContextFrame");
            feature.AddKnownType("System.Reflection.CustomAttributeType", "CustomAttributeType");
            feature.AddKnownType("System.Reflection.DefaultMemberAttribute", "DefaultMemberAttribute");
            feature.AddKnownType("System.Reflection.EventAttributes", "EventAttributes");
            feature.AddKnownType("System.Reflection.EventInfo", "EventInfo");
            feature.AddKnownType("System.Reflection.RuntimeEventInfo", "RuntimeEventInfo");
            feature.AddKnownType("System.Reflection.FieldAttributes", "FieldAttributes");
            feature.AddKnownType("System.Reflection.FieldInfo", "FieldInfo");
            feature.AddKnownType("System.Reflection.RuntimeFieldInfo", "RuntimeFieldInfo");
            feature.AddKnownType("System.Reflection.RtFieldInfo", "RtFieldInfo");
            feature.AddKnownType("System.Reflection.MdFieldInfo", "MdFieldInfo");
            feature.AddKnownType("System.Reflection.GenericParameterAttributes", "GenericParameterAttributes");
            feature.AddKnownType("System.Reflection.ICustomAttributeProvider", "ICustomAttributeProvider");
            feature.AddKnownType("System.Reflection.IReflectableType", "IReflectableType");
            feature.AddKnownType("System.Reflection.InterfaceMapping", "InterfaceMapping");
            feature.AddKnownType("System.Reflection.InvalidFilterCriteriaException", "InvalidFilterCriteriaException");
            feature.AddKnownType("System.Reflection.IReflect", "IReflect");
            feature.AddKnownType("System.Reflection.LoaderAllocatorScout", "LoaderAllocatorScout");
            feature.AddKnownType("System.Reflection.LoaderAllocator", "LoaderAllocator");
            feature.AddKnownType("System.Reflection.ManifestResourceInfo", "ManifestResourceInfo");
            feature.AddKnownType("System.Reflection.ResourceLocation", "ResourceLocation");
            feature.AddKnownType("System.Reflection.CorElementType", "CorElementType");
            feature.AddKnownType("System.Reflection.MdSigCallingConvention", "MdSigCallingConvention");
            feature.AddKnownType("System.Reflection.PInvokeAttributes", "PInvokeAttributes");
            feature.AddKnownType("System.Reflection.MethodSemanticsAttributes", "MethodSemanticsAttributes");
            feature.AddKnownType("System.Reflection.MetadataTokenType", "MetadataTokenType");
            feature.AddKnownType("System.Reflection.ConstArray", "ConstArray");
            feature.AddKnownType("System.Reflection.MetadataToken", "MetadataToken");
            feature.AddKnownType("System.Reflection.MetadataEnumResult", "MetadataEnumResult");
            feature.AddKnownType("System.Reflection.MetadataImport", "MetadataImport");
            feature.AddKnownType("System.Reflection.MetadataException", "MetadataException");
            feature.AddKnownType("System.Reflection.MemberInfo", "MemberInfo");
            feature.AddKnownType("System.Reflection.MemberInfoSerializationHolder", "MemberInfoSerializationHolder");
            feature.AddKnownType("System.Reflection.MemberTypes", "MemberTypes");
            feature.AddKnownType("System.Reflection.MethodAttributes", "MethodAttributes");
            feature.AddKnownType("System.Reflection.INVOCATION_FLAGS", "INVOCATION_FLAGS");
            feature.AddKnownType("System.Reflection.MethodBase", "MethodBase");
            feature.AddKnownType("System.Reflection.MethodImplAttributes", "MethodImplAttributes");
            feature.AddKnownType("System.Reflection.MethodInfo", "MethodInfo");
            feature.AddKnownType("System.Reflection.RuntimeMethodInfo", "RuntimeMethodInfo");
            feature.AddKnownType("System.Reflection.Missing", "Missing");
            feature.AddKnownType("System.Reflection.PortableExecutableKinds", "PortableExecutableKinds");
            feature.AddKnownType("System.Reflection.ImageFileMachine", "ImageFileMachine");
            feature.AddKnownType("System.Reflection.Module", "Module");
            feature.AddKnownType("System.Reflection.RuntimeModule", "RuntimeModule");
            feature.AddKnownType("System.Reflection.ObfuscateAssemblyAttribute", "ObfuscateAssemblyAttribute");
            feature.AddKnownType("System.Reflection.ObfuscationAttribute", "ObfuscationAttribute");
            feature.AddKnownType("System.Reflection.ExceptionHandlingClauseOptions", "ExceptionHandlingClauseOptions");
            feature.AddKnownType("System.Reflection.ExceptionHandlingClause", "ExceptionHandlingClause");
            feature.AddKnownType("System.Reflection.MethodBody", "MethodBody");
            feature.AddKnownType("System.Reflection.LocalVariableInfo", "LocalVariableInfo");
            feature.AddKnownType("System.Reflection.ParameterAttributes", "ParameterAttributes");
            feature.AddKnownType("System.Reflection.ParameterInfo", "ParameterInfo");
            feature.AddKnownType("System.Reflection.RuntimeParameterInfo", "RuntimeParameterInfo");
            feature.AddKnownType("System.Reflection.ParameterModifier", "ParameterModifier");
            feature.AddKnownType("System.Reflection.Pointer", "Pointer");
            feature.AddKnownType("System.Reflection.PropertyAttributes", "PropertyAttributes");
            feature.AddKnownType("System.Reflection.PropertyInfo", "PropertyInfo");
            feature.AddKnownType("System.Reflection.RuntimePropertyInfo", "RuntimePropertyInfo");
            feature.AddKnownType("System.Reflection.ReflectionContext", "ReflectionContext");
            feature.AddKnownType("System.Reflection.ReflectionTypeLoadException", "ReflectionTypeLoadException");
            feature.AddKnownType("System.Reflection.ResourceAttributes", "ResourceAttributes");
            feature.AddKnownType("System.Reflection.StrongNameKeyPair", "StrongNameKeyPair");
            feature.AddKnownType("System.Reflection.TargetException", "TargetException");
            feature.AddKnownType("System.Reflection.TargetInvocationException", "TargetInvocationException");
            feature.AddKnownType("System.Reflection.TargetParameterCountException", "TargetParameterCountException");
            feature.AddKnownType("System.Reflection.TypeAttributes", "TypeAttributes");
            feature.AddKnownType("System.Reflection.TypeDelegator", "TypeDelegator");
            feature.AddKnownType("System.Reflection.TypeInfo", "TypeInfo");
            feature.AddKnownType("System.Reflection.Emit.DynamicAssemblyFlags", "DynamicAssemblyFlags");
            feature.AddKnownType("System.Reflection.Emit.InternalAssemblyBuilder", "InternalAssemblyBuilder");
            feature.AddKnownType("System.Reflection.Emit.AssemblyBuilder", "AssemblyBuilder");
            feature.AddKnownType("System.Reflection.Emit.AssemblyBuilderData", "AssemblyBuilderData");
            feature.AddKnownType("System.Reflection.Emit.ResWriterData", "ResWriterData");
            feature.AddKnownType("System.Reflection.Emit.NativeVersionInfo", "NativeVersionInfo");
            feature.AddKnownType("System.Reflection.Emit.AssemblyBuilderAccess", "AssemblyBuilderAccess");
            feature.AddKnownType("System.Reflection.Emit.TypeNameBuilder", "TypeNameBuilder");
            feature.AddKnownType("System.Reflection.Emit.TypeNameBuilder+Format", "Format");
            feature.AddKnownType("System.Reflection.Emit.ConstructorBuilder", "ConstructorBuilder");
            feature.AddKnownType("System.Reflection.Emit.DynamicILGenerator", "DynamicILGenerator");
            feature.AddKnownType("System.Reflection.Emit.DynamicResolver", "DynamicResolver");
            feature.AddKnownType("System.Reflection.Emit.DynamicResolver+SecurityControlFlags", "SecurityControlFlags");
            feature.AddKnownType("System.Reflection.Emit.DynamicILInfo", "DynamicILInfo");
            feature.AddKnownType("System.Reflection.Emit.DynamicScope", "DynamicScope");
            feature.AddKnownType("System.Reflection.Emit.GenericMethodInfo", "GenericMethodInfo");
            feature.AddKnownType("System.Reflection.Emit.GenericFieldInfo", "GenericFieldInfo");
            feature.AddKnownType("System.Reflection.Emit.VarArgMethod", "VarArgMethod");
            feature.AddKnownType("System.Reflection.Emit.DynamicMethod", "DynamicMethod");
            feature.AddKnownType("System.Reflection.Emit.DynamicMethod+RTDynamicMethod", "RTDynamicMethod");
            feature.AddKnownType("System.Reflection.Emit.EventBuilder", "EventBuilder");
            feature.AddKnownType("System.Reflection.Emit.EventToken", "EventToken");
            feature.AddKnownType("System.Reflection.Emit.FieldBuilder", "FieldBuilder");
            feature.AddKnownType("System.Reflection.Emit.FieldToken", "FieldToken");
            feature.AddKnownType("System.Reflection.Emit.ILGenerator", "ILGenerator");
            feature.AddKnownType("System.Reflection.Emit.__FixupData", "__FixupData");
            feature.AddKnownType("System.Reflection.Emit.__ExceptionInfo", "__ExceptionInfo");
            feature.AddKnownType("System.Reflection.Emit.ScopeAction", "ScopeAction");
            feature.AddKnownType("System.Reflection.Emit.ScopeTree", "ScopeTree");
            feature.AddKnownType("System.Reflection.Emit.LineNumberInfo", "LineNumberInfo");
            feature.AddKnownType("System.Reflection.Emit.REDocument", "REDocument");
            feature.AddKnownType("System.Reflection.Emit.Label", "Label");
            feature.AddKnownType("System.Reflection.Emit.LocalBuilder", "LocalBuilder");
            feature.AddKnownType("System.Reflection.Emit.MethodBuilder", "MethodBuilder");
            feature.AddKnownType("System.Reflection.Emit.LocalSymInfo", "LocalSymInfo");
            feature.AddKnownType("System.Reflection.Emit.ExceptionHandler", "ExceptionHandler");
            feature.AddKnownType("System.Reflection.Emit.MethodBuilderInstantiation", "MethodBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.TypeKind", "TypeKind");
            feature.AddKnownType("System.Reflection.Emit.SymbolType", "SymbolType");
            feature.AddKnownType("System.Reflection.Emit.SymbolMethod", "SymbolMethod");
            feature.AddKnownType("System.Reflection.Emit.CustomAttributeBuilder", "CustomAttributeBuilder");
            feature.AddKnownType("System.Reflection.Emit.MethodRental", "MethodRental");
            feature.AddKnownType("System.Reflection.Emit.MethodToken", "MethodToken");
            feature.AddKnownType("System.Reflection.Emit.InternalModuleBuilder", "InternalModuleBuilder");
            feature.AddKnownType("System.Reflection.Emit.ModuleBuilder", "ModuleBuilder");
            feature.AddKnownType("System.Reflection.Emit.ModuleBuilderData", "ModuleBuilderData");
            feature.AddKnownType("System.Reflection.Emit.PEFileKinds", "PEFileKinds");
            feature.AddKnownType("System.Reflection.Emit.OpCodeValues", "OpCodeValues");
            feature.AddKnownType("System.Reflection.Emit.OpCodes", "OpCodes");
            feature.AddKnownType("System.Reflection.Emit.OpCode", "OpCode");
            feature.AddKnownType("System.Reflection.Emit.OpCodeType", "OpCodeType");
            feature.AddKnownType("System.Reflection.Emit.StackBehaviour", "StackBehaviour");
            feature.AddKnownType("System.Reflection.Emit.OperandType", "OperandType");
            feature.AddKnownType("System.Reflection.Emit.FlowControl", "FlowControl");
            feature.AddKnownType("System.Reflection.Emit.ParameterBuilder", "ParameterBuilder");
            feature.AddKnownType("System.Reflection.Emit.ParameterToken", "ParameterToken");
            feature.AddKnownType("System.Reflection.Emit.PropertyBuilder", "PropertyBuilder");
            feature.AddKnownType("System.Reflection.Emit.PropertyToken", "PropertyToken");
            feature.AddKnownType("System.Reflection.Emit.SignatureHelper", "SignatureHelper");
            feature.AddKnownType("System.Reflection.Emit.SignatureToken", "SignatureToken");
            feature.AddKnownType("System.Reflection.Emit.StringToken", "StringToken");
            feature.AddKnownType("System.Reflection.Emit.PackingSize", "PackingSize");
            feature.AddKnownType("System.Reflection.Emit.TypeBuilder", "TypeBuilder");
            feature.AddKnownType("System.Reflection.Emit.TypeBuilderInstantiation", "TypeBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.GenericTypeParameterBuilder", "GenericTypeParameterBuilder");
            feature.AddKnownType("System.Reflection.Emit.EnumBuilder", "EnumBuilder");
            feature.AddKnownType("System.Reflection.Emit.TypeToken", "TypeToken");
            feature.AddKnownType("System.Reflection.Emit.MethodOnTypeBuilderInstantiation", "MethodOnTypeBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.ConstructorOnTypeBuilderInstantiation", "ConstructorOnTypeBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.FieldOnTypeBuilderInstantiation", "FieldOnTypeBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.UnmanagedMarshal", "UnmanagedMarshal");
            feature.AddKnownType("System.Resources.FastResourceComparer", "FastResourceComparer");
            feature.AddKnownType("System.Resources.FileBasedResourceGroveler", "FileBasedResourceGroveler");
            feature.AddKnownType("System.Resources.IResourceGroveler", "IResourceGroveler");
            feature.AddKnownType("System.Resources.IResourceReader", "IResourceReader");
            feature.AddKnownType("System.Resources.IResourceWriter", "IResourceWriter");
            feature.AddKnownType("System.Resources.ManifestBasedResourceGroveler", "ManifestBasedResourceGroveler");
            feature.AddKnownType("System.Resources.MissingManifestResourceException", "MissingManifestResourceException");
            feature.AddKnownType("System.Resources.MissingSatelliteAssemblyException", "MissingSatelliteAssemblyException");
            feature.AddKnownType("System.Resources.NeutralResourcesLanguageAttribute", "NeutralResourcesLanguageAttribute");
            feature.AddKnownType("System.Resources.ResourceFallbackManager", "ResourceFallbackManager");
            feature.AddKnownType("System.Resources.WindowsRuntimeResourceManagerBase", "WindowsRuntimeResourceManagerBase");
            feature.AddKnownType("System.Resources.PRIExceptionInfo", "PRIExceptionInfo");
            feature.AddKnownType("System.Resources.ResourceManager", "ResourceManager");
            feature.AddKnownType("System.Resources.ResourceManager+CultureNameResourceSetPair", "CultureNameResourceSetPair");
            feature.AddKnownType("System.Resources.ResourceManager+ResourceManagerMediator", "ResourceManagerMediator");
            feature.AddKnownType("System.Resources.ResourceLocator", "ResourceLocator");
            feature.AddKnownType("System.Resources.ResourceReader", "ResourceReader");
            feature.AddKnownType("System.Resources.ResourceReader+TypeLimitingDeserializationBinder", "TypeLimitingDeserializationBinder");
            feature.AddKnownType("System.Resources.ResourceReader+ResourceEnumerator", "ResourceEnumerator");
            feature.AddKnownType("System.Resources.ResourceSet", "ResourceSet");
            feature.AddKnownType("System.Resources.ResourceTypeCode", "ResourceTypeCode");
            feature.AddKnownType("System.Resources.ResourceWriter", "ResourceWriter");
            feature.AddKnownType("System.Resources.RuntimeResourceSet", "RuntimeResourceSet");
            feature.AddKnownType("System.Resources.SatelliteContractVersionAttribute", "SatelliteContractVersionAttribute");
            feature.AddKnownType("System.Resources.UltimateResourceFallbackLocation", "UltimateResourceFallbackLocation");
            feature.AddKnownType("System.Runtime.MemoryFailPoint", "MemoryFailPoint");
            feature.AddKnownType("System.Runtime.GCLargeObjectHeapCompactionMode", "GCLargeObjectHeapCompactionMode");
            feature.AddKnownType("System.Runtime.GCLatencyMode", "GCLatencyMode");
            feature.AddKnownType("System.Runtime.AssemblyTargetedPatchBandAttribute", "AssemblyTargetedPatchBandAttribute");
            feature.AddKnownType("System.Runtime.TargetedPatchingOptOutAttribute", "TargetedPatchingOptOutAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StringFreezingAttribute", "StringFreezingAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AccessedThroughPropertyAttribute", "AccessedThroughPropertyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHere", "AssemblyAttributesGoHere");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereS", "AssemblyAttributesGoHereS");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereM", "AssemblyAttributesGoHereM");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereSM", "AssemblyAttributesGoHereSM");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvCdecl", "CallConvCdecl");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvStdcall", "CallConvStdcall");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvThiscall", "CallConvThiscall");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvFastcall", "CallConvFastcall");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilerGeneratedAttribute", "CompilerGeneratedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CustomConstantAttribute", "CustomConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DateTimeConstantAttribute", "DateTimeConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DiscardableAttribute", "DiscardableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DecimalConstantAttribute", "DecimalConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DisablePrivateReflectionAttribute", "DisablePrivateReflectionAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilationRelaxations", "CompilationRelaxations");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilationRelaxationsAttribute", "CompilationRelaxationsAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilerGlobalScopeAttribute", "CompilerGlobalScopeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ExtensionAttribute", "ExtensionAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.FixedBufferAttribute", "FixedBufferAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IndexerNameAttribute", "IndexerNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.InternalsVisibleToAttribute", "InternalsVisibleToAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.FriendAccessAllowedAttribute", "FriendAccessAllowedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodImplOptions", "MethodImplOptions");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodCodeType", "MethodCodeType");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodImplAttribute", "MethodImplAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.FixedAddressValueTypeAttribute", "FixedAddressValueTypeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.UnsafeValueTypeAttribute", "UnsafeValueTypeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RequiredAttributeAttribute", "RequiredAttributeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.LoadHint", "LoadHint");
            feature.AddKnownType("System.Runtime.CompilerServices.DefaultDependencyAttribute", "DefaultDependencyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DependencyAttribute", "DependencyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TypeDependencyAttribute", "TypeDependencyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.HasCopySemanticsAttribute", "HasCopySemanticsAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StringHandleOnStack", "StringHandleOnStack");
            feature.AddKnownType("System.Runtime.CompilerServices.ObjectHandleOnStack", "ObjectHandleOnStack");
            feature.AddKnownType("System.Runtime.CompilerServices.StackCrawlMarkHandle", "StackCrawlMarkHandle");
            feature.AddKnownType("System.Runtime.CompilerServices.PinningHelper", "PinningHelper");
            feature.AddKnownType("System.Runtime.CompilerServices.ScopelessEnumAttribute", "ScopelessEnumAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SpecialNameAttribute", "SpecialNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SuppressMergeCheckAttribute", "SuppressMergeCheckAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SuppressIldasmAttribute", "SuppressIldasmAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NativeCppClassAttribute", "NativeCppClassAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DecoratedNameAttribute", "DecoratedNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TypeForwardedToAttribute", "TypeForwardedToAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TypeForwardedFromAttribute", "TypeForwardedFromAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ReferenceAssemblyAttribute", "ReferenceAssemblyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RuntimeCompatibilityAttribute", "RuntimeCompatibilityAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RuntimeWrappedException", "RuntimeWrappedException");
            feature.AddKnownType("System.Runtime.CompilerServices.ConditionalWeakTable`2", "ConditionalWeakTable'2");
            feature.AddKnownType("System.Runtime.CompilerServices.DependentHandle", "DependentHandle");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerFilePathAttribute", "CallerFilePathAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerLineNumberAttribute", "CallerLineNumberAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerMemberNameAttribute", "CallerMemberNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StateMachineAttribute", "StateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IteratorStateMachineAttribute", "IteratorStateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncStateMachineAttribute", "AsyncStateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncVoidMethodBuilder", "AsyncVoidMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncTaskMethodBuilder", "AsyncTaskMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1", "AsyncTaskMethodBuilder'1");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncMethodBuilderCore", "AsyncMethodBuilderCore");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner", "MoveNextRunner");
            feature.AddKnownType("System.Runtime.CompilerServices.IAsyncStateMachine", "IAsyncStateMachine");
            feature.AddKnownType("System.Runtime.CompilerServices.INotifyCompletion", "INotifyCompletion");
            feature.AddKnownType("System.Runtime.CompilerServices.ICriticalNotifyCompletion", "ICriticalNotifyCompletion");
            feature.AddKnownType("System.Runtime.CompilerServices.TaskAwaiter", "TaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.TaskAwaiter`1", "TaskAwaiter'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable", "ConfiguredTaskAwaitable");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter", "ConfiguredTaskAwaitable.ConfiguredTaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1", "ConfiguredTaskAwaitable'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter", "ConfiguredTaskAwaitable'1.ConfiguredTaskAwaiter'0");
            feature.AddKnownType("System.Runtime.CompilerServices.YieldAwaitable", "YieldAwaitable");
            feature.AddKnownType("System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter", "YieldAwaitable.YieldAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.IDispatchConstantAttribute", "IDispatchConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IUnknownConstantAttribute", "IUnknownConstantAttribute");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.CriticalFinalizerObject", "CriticalFinalizerObject");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.Consistency", "Consistency");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.Cer", "Cer");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.ReliabilityContractAttribute", "ReliabilityContractAttribute");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute", "PrePrepareMethodAttribute");
            feature.AddKnownType("System.Runtime.DesignerServices.WindowsRuntimeDesignerContext", "WindowsRuntimeDesignerContext");
            feature.AddKnownType("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute", "HandleProcessCorruptedStateExceptionsAttribute");
            feature.AddKnownType("System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs", "FirstChanceExceptionEventArgs");
            feature.AddKnownType("System.Runtime.ExceptionServices.ExceptionDispatchInfo", "ExceptionDispatchInfo");
            feature.AddKnownType("System.Runtime.Hosting.ManifestRunner", "ManifestRunner");
            feature.AddKnownType("System.Runtime.Hosting.ApplicationActivator", "ApplicationActivator");
            feature.AddKnownType("System.Runtime.Hosting.ActivationArguments", "ActivationArguments");
            feature.AddKnownType("System.Runtime.InteropServices._Activator", "_Activator");
            feature.AddKnownType("System.Runtime.InteropServices._Attribute", "_Attribute");
            feature.AddKnownType("System.Runtime.InteropServices._Thread", "_Thread");
            feature.AddKnownType("System.Runtime.InteropServices._Type", "_Type");
            feature.AddKnownType("System.Runtime.InteropServices._Assembly", "_Assembly");
            feature.AddKnownType("System.Runtime.InteropServices._MemberInfo", "_MemberInfo");
            feature.AddKnownType("System.Runtime.InteropServices._MethodBase", "_MethodBase");
            feature.AddKnownType("System.Runtime.InteropServices._MethodInfo", "_MethodInfo");
            feature.AddKnownType("System.Runtime.InteropServices._ConstructorInfo", "_ConstructorInfo");
            feature.AddKnownType("System.Runtime.InteropServices._FieldInfo", "_FieldInfo");
            feature.AddKnownType("System.Runtime.InteropServices._PropertyInfo", "_PropertyInfo");
            feature.AddKnownType("System.Runtime.InteropServices._EventInfo", "_EventInfo");
            feature.AddKnownType("System.Runtime.InteropServices._ParameterInfo", "_ParameterInfo");
            feature.AddKnownType("System.Runtime.InteropServices._Module", "_Module");
            feature.AddKnownType("System.Runtime.InteropServices._AssemblyName", "_AssemblyName");
            feature.AddKnownType("System.Runtime.InteropServices.ArrayWithOffset", "ArrayWithOffset");
            feature.AddKnownType("System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute", "UnmanagedFunctionPointerAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeIdentifierAttribute", "TypeIdentifierAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute", "AllowReversePInvokeCallsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DispIdAttribute", "DispIdAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComInterfaceType", "ComInterfaceType");
            feature.AddKnownType("System.Runtime.InteropServices.InterfaceTypeAttribute", "InterfaceTypeAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComDefaultInterfaceAttribute", "ComDefaultInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ClassInterfaceType", "ClassInterfaceType");
            feature.AddKnownType("System.Runtime.InteropServices.ClassInterfaceAttribute", "ClassInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComVisibleAttribute", "ComVisibleAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibImportClassAttribute", "TypeLibImportClassAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.LCIDConversionAttribute", "LCIDConversionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComRegisterFunctionAttribute", "ComRegisterFunctionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComUnregisterFunctionAttribute", "ComUnregisterFunctionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ProgIdAttribute", "ProgIdAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ImportedFromTypeLibAttribute", "ImportedFromTypeLibAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.IDispatchImplType", "IDispatchImplType");
            feature.AddKnownType("System.Runtime.InteropServices.IDispatchImplAttribute", "IDispatchImplAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComSourceInterfacesAttribute", "ComSourceInterfacesAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComConversionLossAttribute", "ComConversionLossAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibTypeFlags", "TypeLibTypeFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibFuncFlags", "TypeLibFuncFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVarFlags", "TypeLibVarFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibTypeAttribute", "TypeLibTypeAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibFuncAttribute", "TypeLibFuncAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVarAttribute", "TypeLibVarAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.VarEnum", "VarEnum");
            feature.AddKnownType("System.Runtime.InteropServices.UnmanagedType", "UnmanagedType");
            feature.AddKnownType("System.Runtime.InteropServices.MarshalAsAttribute", "MarshalAsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComImportAttribute", "ComImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.GuidAttribute", "GuidAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.PreserveSigAttribute", "PreserveSigAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.InAttribute", "InAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.OutAttribute", "OutAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.OptionalAttribute", "OptionalAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DllImportSearchPath", "DllImportSearchPath");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute", "DefaultDllImportSearchPathsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DllImportAttribute", "DllImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.StructLayoutAttribute", "StructLayoutAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.FieldOffsetAttribute", "FieldOffsetAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComAliasNameAttribute", "ComAliasNameAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.AutomationProxyAttribute", "AutomationProxyAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute", "PrimaryInteropAssemblyAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.CoClassAttribute", "CoClassAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventInterfaceAttribute", "ComEventInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVersionAttribute", "TypeLibVersionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComCompatibleVersionAttribute", "ComCompatibleVersionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.BestFitMappingAttribute", "BestFitMappingAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultCharSetAttribute", "DefaultCharSetAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute", "SetWin32ContextInIDispatchAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute", "ManagedToNativeComInteropStubAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.CallingConvention", "CallingConvention");
            feature.AddKnownType("System.Runtime.InteropServices.CharSet", "CharSet");
            feature.AddKnownType("System.Runtime.InteropServices.COMException", "COMException");
            feature.AddKnownType("System.Runtime.InteropServices.CriticalHandle", "CriticalHandle");
            feature.AddKnownType("System.Runtime.InteropServices.ExternalException", "ExternalException");
            feature.AddKnownType("System.Runtime.InteropServices.GCHandleType", "GCHandleType");
            feature.AddKnownType("System.Runtime.InteropServices.GCHandle", "GCHandle");
            feature.AddKnownType("System.Runtime.InteropServices.GCHandleCookieTable", "GCHandleCookieTable");
            feature.AddKnownType("System.Runtime.InteropServices.HandleRef", "HandleRef");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomMarshaler", "ICustomMarshaler");
            feature.AddKnownType("System.Runtime.InteropServices._Exception", "_Exception");
            feature.AddKnownType("System.Runtime.InteropServices.InvalidOleVariantTypeException", "InvalidOleVariantTypeException");
            feature.AddKnownType("System.Runtime.InteropServices.LayoutKind", "LayoutKind");
            feature.AddKnownType("System.Runtime.InteropServices.CustomQueryInterfaceMode", "CustomQueryInterfaceMode");
            feature.AddKnownType("System.Runtime.InteropServices.ImporterCallback", "ImporterCallback");
            feature.AddKnownType("System.Runtime.InteropServices.MarshalDirectiveException", "MarshalDirectiveException");
            feature.AddKnownType("System.Runtime.InteropServices.PInvokeMap", "PInvokeMap");
            feature.AddKnownType("System.Runtime.InteropServices.RuntimeEnvironment", "RuntimeEnvironment");
            feature.AddKnownType("System.Runtime.InteropServices.SEHException", "SEHException");
            feature.AddKnownType("System.Runtime.InteropServices.SafeBuffer", "SafeBuffer");
            feature.AddKnownType("System.Runtime.InteropServices.SafeHandle", "SafeHandle");
            feature.AddKnownType("System.Runtime.InteropServices.BStrWrapper", "BStrWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.CurrencyWrapper", "CurrencyWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.DispatchWrapper", "DispatchWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.ErrorWrapper", "ErrorWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.UnknownWrapper", "UnknownWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.VariantWrapper", "VariantWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.ComMemberType", "ComMemberType");
            feature.AddKnownType("System.Runtime.InteropServices.ExtensibleClassFactory", "ExtensibleClassFactory");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomAdapter", "ICustomAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomFactory", "ICustomFactory");
            feature.AddKnownType("System.Runtime.InteropServices.CustomQueryInterfaceResult", "CustomQueryInterfaceResult");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomQueryInterface", "ICustomQueryInterface");
            feature.AddKnownType("System.Runtime.InteropServices.InvalidComObjectException", "InvalidComObjectException");
            feature.AddKnownType("System.Runtime.InteropServices.AssemblyRegistrationFlags", "AssemblyRegistrationFlags");
            feature.AddKnownType("System.Runtime.InteropServices.IRegistrationServices", "IRegistrationServices");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibImporterFlags", "TypeLibImporterFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibExporterFlags", "TypeLibExporterFlags");
            feature.AddKnownType("System.Runtime.InteropServices.ImporterEventKind", "ImporterEventKind");
            feature.AddKnownType("System.Runtime.InteropServices.ExporterEventKind", "ExporterEventKind");
            feature.AddKnownType("System.Runtime.InteropServices.ITypeLibImporterNotifySink", "ITypeLibImporterNotifySink");
            feature.AddKnownType("System.Runtime.InteropServices.ITypeLibExporterNotifySink", "ITypeLibExporterNotifySink");
            feature.AddKnownType("System.Runtime.InteropServices.ITypeLibConverter", "ITypeLibConverter");
            feature.AddKnownType("System.Runtime.InteropServices.ITypeLibExporterNameProvider", "ITypeLibExporterNameProvider");
            feature.AddKnownType("System.Runtime.InteropServices.RegistrationClassContext", "RegistrationClassContext");
            feature.AddKnownType("System.Runtime.InteropServices.RegistrationConnectionType", "RegistrationConnectionType");
            feature.AddKnownType("System.Runtime.InteropServices.RegistrationServices", "RegistrationServices");
            feature.AddKnownType("System.Runtime.InteropServices.SafeArrayRankMismatchException", "SafeArrayRankMismatchException");
            feature.AddKnownType("System.Runtime.InteropServices.SafeArrayTypeMismatchException", "SafeArrayTypeMismatchException");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibConverter", "TypeLibConverter");
            feature.AddKnownType("System.Runtime.InteropServices.BIND_OPTS", "BIND_OPTS");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIBindCtx", "UCOMIBindCtx");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIConnectionPointContainer", "UCOMIConnectionPointContainer");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIConnectionPoint", "UCOMIConnectionPoint");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumerable", "UCOMIEnumerable");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumerator", "UCOMIEnumerator");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumMoniker", "UCOMIEnumMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.CONNECTDATA", "CONNECTDATA");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumConnections", "UCOMIEnumConnections");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumConnectionPoints", "UCOMIEnumConnectionPoints");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumString", "UCOMIEnumString");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumVARIANT", "UCOMIEnumVARIANT");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIExpando", "UCOMIExpando");
            feature.AddKnownType("System.Runtime.InteropServices.FILETIME", "FILETIME");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIMoniker", "UCOMIMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIPersistFile", "UCOMIPersistFile");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIReflect", "UCOMIReflect");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIRunningObjectTable", "UCOMIRunningObjectTable");
            feature.AddKnownType("System.Runtime.InteropServices.STATSTG", "STATSTG");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIStream", "UCOMIStream");
            feature.AddKnownType("System.Runtime.InteropServices.DESCKIND", "DESCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.BINDPTR", "BINDPTR");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMITypeComp", "UCOMITypeComp");
            feature.AddKnownType("System.Runtime.InteropServices.TYPEKIND", "TYPEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.TYPEFLAGS", "TYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.IMPLTYPEFLAGS", "IMPLTYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.TYPEATTR", "TYPEATTR");
            feature.AddKnownType("System.Runtime.InteropServices.FUNCDESC", "FUNCDESC");
            feature.AddKnownType("System.Runtime.InteropServices.IDLFLAG", "IDLFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.IDLDESC", "IDLDESC");
            feature.AddKnownType("System.Runtime.InteropServices.PARAMFLAG", "PARAMFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.PARAMDESC", "PARAMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.TYPEDESC", "TYPEDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ELEMDESC", "ELEMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ELEMDESC+DESCUNION", "ELEMDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.VARDESC", "VARDESC");
            feature.AddKnownType("System.Runtime.InteropServices.VARDESC+DESCUNION", "VARDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.DISPPARAMS", "DISPPARAMS");
            feature.AddKnownType("System.Runtime.InteropServices.EXCEPINFO", "EXCEPINFO");
            feature.AddKnownType("System.Runtime.InteropServices.FUNCKIND", "FUNCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.INVOKEKIND", "INVOKEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.CALLCONV", "CALLCONV");
            feature.AddKnownType("System.Runtime.InteropServices.FUNCFLAGS", "FUNCFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.VARFLAGS", "VARFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMITypeInfo", "UCOMITypeInfo");
            feature.AddKnownType("System.Runtime.InteropServices.SYSKIND", "SYSKIND");
            feature.AddKnownType("System.Runtime.InteropServices.LIBFLAGS", "LIBFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.TYPELIBATTR", "TYPELIBATTR");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMITypeLib", "UCOMITypeLib");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventsInfo", "ComEventsInfo");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventsMethod", "ComEventsMethod");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventsMethod+DelegateWrapper", "DelegateWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventsSink", "ComEventsSink");
            feature.AddKnownType("System.Runtime.InteropServices.NativeMethods+IDispatch", "IDispatch");
            feature.AddKnownType("System.Runtime.InteropServices.Variant", "Variant");
            feature.AddKnownType("System.Runtime.InteropServices.Variant+TypeUnion", "TypeUnion");
            feature.AddKnownType("System.Runtime.InteropServices.Variant+Record", "Record");
            feature.AddKnownType("System.Runtime.InteropServices.Variant+UnionTypes", "UnionTypes");
            feature.AddKnownType("System.Runtime.InteropServices._AssemblyBuilder", "_AssemblyBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._ConstructorBuilder", "_ConstructorBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._CustomAttributeBuilder", "_CustomAttributeBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._EnumBuilder", "_EnumBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._EventBuilder", "_EventBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._FieldBuilder", "_FieldBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._ILGenerator", "_ILGenerator");
            feature.AddKnownType("System.Runtime.InteropServices._LocalBuilder", "_LocalBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._MethodBuilder", "_MethodBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._MethodRental", "_MethodRental");
            feature.AddKnownType("System.Runtime.InteropServices._ModuleBuilder", "_ModuleBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._ParameterBuilder", "_ParameterBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._PropertyBuilder", "_PropertyBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._SignatureHelper", "_SignatureHelper");
            feature.AddKnownType("System.Runtime.InteropServices._TypeBuilder", "_TypeBuilder");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.BIND_OPTS", "BIND_OPTS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IBindCtx", "IBindCtx");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IConnectionPointContainer", "IConnectionPointContainer");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IConnectionPoint", "IConnectionPoint");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumerable", "IEnumerable");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumerator", "IEnumerator");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumMoniker", "IEnumMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.CONNECTDATA", "CONNECTDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumConnections", "IEnumConnections");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints", "IEnumConnectionPoints");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumString", "IEnumString");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumVARIANT", "IEnumVARIANT");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IExpando", "IExpando");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FILETIME", "FILETIME");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IMoniker", "IMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IPersistFile", "IPersistFile");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IReflect", "IReflect");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IRunningObjectTable", "IRunningObjectTable");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STATSTG", "STATSTG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IStream", "IStream");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DESCKIND", "DESCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.BINDPTR", "BINDPTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeComp", "ITypeComp");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEKIND", "TYPEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEFLAGS", "TYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS", "IMPLTYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEATTR", "TYPEATTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCDESC", "FUNCDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDLFLAG", "IDLFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDLDESC", "IDLDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.PARAMFLAG", "PARAMFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.PARAMDESC", "PARAMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEDESC", "TYPEDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ELEMDESC", "ELEMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ELEMDESC+DESCUNION", "ELEMDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARKIND", "VARKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARDESC", "VARDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARDESC+DESCUNION", "VARDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DISPPARAMS", "DISPPARAMS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.EXCEPINFO", "EXCEPINFO");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCKIND", "FUNCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.INVOKEKIND", "INVOKEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.CALLCONV", "CALLCONV");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCFLAGS", "FUNCFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARFLAGS", "VARFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeInfo", "ITypeInfo");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.SYSKIND", "SYSKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.LIBFLAGS", "LIBFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPELIBATTR", "TYPELIBATTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeLib", "ITypeLib");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeLib2", "ITypeLib2");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeInfo2", "ITypeInfo2");
            feature.AddKnownType("System.Runtime.InteropServices.Expando.IExpando", "IExpando");
            feature.AddKnownType("System.Runtime.InteropServices.TCEAdapterGen.EventProviderWriter", "EventProviderWriter");
            feature.AddKnownType("System.Runtime.InteropServices.TCEAdapterGen.EventSinkHelperWriter", "EventSinkHelperWriter");
            feature.AddKnownType("System.Runtime.InteropServices.TCEAdapterGen.EventItfInfo", "EventItfInfo");
            feature.AddKnownType("System.Runtime.InteropServices.TCEAdapterGen.TCEAdapterGenerator", "TCEAdapterGenerator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute", "DefaultInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeImportAttribute", "WindowsRuntimeImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute", "InterfaceImplementedInVersionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute", "ReadOnlyArrayAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute", "WriteOnlyArrayAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute", "ReturnValueNameAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ConstantSplittableMap`2", "ConstantSplittableMap'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ConstantSplittableMap`2+IKeyValuePairEnumerator", "IKeyValuePairEnumerator'0");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryKeyCollection`2", "DictionaryKeyCollection'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryKeyEnumerator`2", "DictionaryKeyEnumerator'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryValueCollection`2", "DictionaryValueCollection'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryValueEnumerator`2", "DictionaryValueEnumerator'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EnumerableToIterableAdapter", "EnumerableToIterableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EnumerableToBindableIterableAdapter", "EnumerableToBindableIterableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EnumerableToBindableIterableAdapter+NonGenericToGenericEnumerator", "NonGenericToGenericEnumerator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EnumeratorToIteratorAdapter`1", "EnumeratorToIteratorAdapter'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.VectorToListAdapter", "VectorToListAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.VectorToCollectionAdapter", "VectorToCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.VectorViewToReadOnlyCollectionAdapter", "VectorViewToReadOnlyCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.MapToDictionaryAdapter", "MapToDictionaryAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.MapToCollectionAdapter", "MapToCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.MapViewToReadOnlyCollectionAdapter", "MapViewToReadOnlyCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ListToVectorAdapter", "ListToVectorAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryToMapAdapter", "DictionaryToMapAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.BindableVectorToListAdapter", "BindableVectorToListAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.BindableVectorToCollectionAdapter", "BindableVectorToCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ListToBindableVectorAdapter", "ListToBindableVectorAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ListToBindableVectorViewAdapter", "ListToBindableVectorViewAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken", "EventRegistrationToken");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1", "EventRegistrationTokenTable'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IActivationFactory", "IActivationFactory");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IRestrictedErrorInfo", "IRestrictedErrorInfo");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IMapViewToIReadOnlyDictionaryAdapter", "IMapViewToIReadOnlyDictionaryAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyDictionaryKeyCollection`2", "ReadOnlyDictionaryKeyCollection'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyDictionaryKeyEnumerator`2", "ReadOnlyDictionaryKeyEnumerator'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyDictionaryValueCollection`2", "ReadOnlyDictionaryValueCollection'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyDictionaryValueEnumerator`2", "ReadOnlyDictionaryValueEnumerator'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IVectorViewToIReadOnlyListAdapter", "IVectorViewToIReadOnlyListAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IReadOnlyDictionaryToIMapViewAdapter", "IReadOnlyDictionaryToIMapViewAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IReadOnlyListToIVectorViewAdapter", "IReadOnlyListToIVectorViewAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IterableToEnumerableAdapter", "IterableToEnumerableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.BindableIterableToEnumerableAdapter", "BindableIterableToEnumerableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IteratorToEnumeratorAdapter`1", "IteratorToEnumeratorAdapter'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IManagedActivationFactory", "IManagedActivationFactory");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ManagedActivationFactory", "ManagedActivationFactory");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.HSTRING_HEADER", "HSTRING_HEADER");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.PropertyType", "PropertyType");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+EventRegistrationTokenList", "EventRegistrationTokenList");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKey", "EventCacheKey");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKeyEqualityComparer", "EventCacheKeyEqualityComparer");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventRegistrationTokenListWithCount", "EventRegistrationTokenListWithCount");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+TokenListCount", "TokenListCount");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheEntry", "EventCacheEntry");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+ReaderWriterLockTimedOutException", "ReaderWriterLockTimedOutException");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+MyReaderWriterLock", "MyReaderWriterLock");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs", "NamespaceResolveEventArgs");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs", "DesignerNamespaceResolveEventArgs");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IClosable", "IClosable");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IDisposableToIClosableAdapter", "IDisposableToIClosableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IClosableToIDisposableAdapter", "IClosableToIDisposableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IStringable", "IStringable");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IStringableHelper", "IStringableHelper");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.RuntimeClass", "RuntimeClass");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CLRIPropertyValueImpl", "CLRIPropertyValueImpl");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CLRIReferenceImpl`1", "CLRIReferenceImpl'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CLRIReferenceArrayImpl`1", "CLRIReferenceArrayImpl'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IPropertyValue", "IPropertyValue");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.Point", "Point");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.Size", "Size");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.Rect", "Rect");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IReference`1", "IReference'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IReferenceArray`1", "IReferenceArray'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICustomPropertyProvider", "ICustomPropertyProvider");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.InterfaceForwardingSupport", "InterfaceForwardingSupport");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IGetProxyTarget", "IGetProxyTarget");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICustomPropertyProviderProxy`2", "ICustomPropertyProviderProxy'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICustomProperty", "ICustomProperty");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CustomPropertyImpl", "CustomPropertyImpl");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IWinRTClassActivator", "IWinRTClassActivator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WinRTClassActivator", "WinRTClassActivator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IIterable`1", "IIterable'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IBindableIterable", "IBindableIterable");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IIterator`1", "IIterator'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IBindableIterator", "IBindableIterator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IVector`1", "IVector'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IVector_Raw`1", "IVector_Raw'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IVectorView`1", "IVectorView'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IBindableVector", "IBindableVector");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IBindableVectorView", "IBindableVectorView");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IMap`2", "IMap'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IMapView`2", "IMapView'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IKeyValuePair`2", "IKeyValuePair'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CLRIKeyValuePairImpl`2", "CLRIKeyValuePairImpl'2");
            feature.AddKnownType("System.Runtime.Remoting.IObjectHandle", "IObjectHandle");
            feature.AddKnownType("System.Runtime.Remoting.__HResults", "__HResults");
            feature.AddKnownType("System.Runtime.Remoting.WellKnownObjectMode", "WellKnownObjectMode");
            feature.AddKnownType("System.Runtime.Remoting.DomainSpecificRemotingData", "DomainSpecificRemotingData");
            feature.AddKnownType("System.Runtime.Remoting.RemotingConfigHandler+RemotingConfigInfo", "RemotingConfigInfo");
            feature.AddKnownType("System.Runtime.Remoting.DelayLoadClientChannelEntry", "DelayLoadClientChannelEntry");
            feature.AddKnownType("System.Runtime.Remoting.Identity", "Identity");
            feature.AddKnownType("System.Runtime.Remoting.IdOps", "IdOps");
            feature.AddKnownType("System.Runtime.Remoting.DuplicateIdentityOption", "DuplicateIdentityOption");
            feature.AddKnownType("System.Runtime.Remoting.IdentityHolder", "IdentityHolder");
            feature.AddKnownType("System.Runtime.Remoting.IRemotingTypeInfo", "IRemotingTypeInfo");
            feature.AddKnownType("System.Runtime.Remoting.IChannelInfo", "IChannelInfo");
            feature.AddKnownType("System.Runtime.Remoting.IEnvoyInfo", "IEnvoyInfo");
            feature.AddKnownType("System.Runtime.Remoting.TypeInfo", "TypeInfo");
            feature.AddKnownType("System.Runtime.Remoting.DynamicTypeInfo", "DynamicTypeInfo");
            feature.AddKnownType("System.Runtime.Remoting.ChannelInfo", "ChannelInfo");
            feature.AddKnownType("System.Runtime.Remoting.EnvoyInfo", "EnvoyInfo");
            feature.AddKnownType("System.Runtime.Remoting.ObjRef", "ObjRef");
            feature.AddKnownType("System.Runtime.Remoting.RedirectionProxy", "RedirectionProxy");
            feature.AddKnownType("System.Runtime.Remoting.ComRedirectionProxy", "ComRedirectionProxy");
            feature.AddKnownType("System.Runtime.Remoting.TypeEntry", "TypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.ActivatedClientTypeEntry", "ActivatedClientTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.ActivatedServiceTypeEntry", "ActivatedServiceTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.WellKnownClientTypeEntry", "WellKnownClientTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.WellKnownServiceTypeEntry", "WellKnownServiceTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.RemoteAppEntry", "RemoteAppEntry");
            feature.AddKnownType("System.Runtime.Remoting.CustomErrorsModes", "CustomErrorsModes");
            feature.AddKnownType("System.Runtime.Remoting.RemotingException", "RemotingException");
            feature.AddKnownType("System.Runtime.Remoting.ServerException", "ServerException");
            feature.AddKnownType("System.Runtime.Remoting.RemotingTimeoutException", "RemotingTimeoutException");
            feature.AddKnownType("System.Runtime.Remoting.InternalRemotingServices", "InternalRemotingServices");
            feature.AddKnownType("System.Runtime.Remoting.ServerIdentity", "ServerIdentity");
            feature.AddKnownType("System.Runtime.Remoting.SoapServices", "SoapServices");
            feature.AddKnownType("System.Runtime.Remoting.ObjectHandle", "ObjectHandle");
            feature.AddKnownType("System.Runtime.Remoting.Activation.LocalActivator", "LocalActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ActivationListener", "ActivationListener");
            feature.AddKnownType("System.Runtime.Remoting.Activation.AppDomainLevelActivator", "AppDomainLevelActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ContextLevelActivator", "ContextLevelActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ConstructionLevelActivator", "ConstructionLevelActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotePropertyHolderAttribute", "RemotePropertyHolderAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ActivationAttributeStack", "ActivationAttributeStack");
            feature.AddKnownType("System.Runtime.Remoting.Activation.IActivator", "IActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ActivatorLevel", "ActivatorLevel");
            feature.AddKnownType("System.Runtime.Remoting.Activation.IConstructionCallMessage", "IConstructionCallMessage");
            feature.AddKnownType("System.Runtime.Remoting.Activation.IConstructionReturnMessage", "IConstructionReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData", "RemotingXmlConfigFileData");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ChannelEntry", "ChannelEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ClientWellKnownEntry", "ClientWellKnownEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ContextAttributeEntry", "ContextAttributeEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+InteropXmlElementEntry", "InteropXmlElementEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+CustomErrorsEntry", "CustomErrorsEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+InteropXmlTypeEntry", "InteropXmlTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+LifetimeEntry", "LifetimeEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+PreLoadEntry", "PreLoadEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+RemoteAppEntry", "RemoteAppEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ServerWellKnownEntry", "ServerWellKnownEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+SinkProviderEntry", "SinkProviderEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+TypeEntry", "TypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.UrlAttribute", "UrlAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Channels.Perf_Contexts", "Perf_Contexts");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ChannelServices", "ChannelServices");
            feature.AddKnownType("System.Runtime.Remoting.Channels.RemotingProfilerEvent", "RemotingProfilerEvent");
            feature.AddKnownType("System.Runtime.Remoting.Channels.RegisteredChannel", "RegisteredChannel");
            feature.AddKnownType("System.Runtime.Remoting.Channels.RegisteredChannelList", "RegisteredChannelList");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ChannelServicesData", "ChannelServicesData");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ServerAsyncReplyTerminatorSink", "ServerAsyncReplyTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientChannelSinkStack", "IClientChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack", "IClientResponseChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ClientChannelSinkStack", "ClientChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerChannelSinkStack", "IServerChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack", "IServerResponseChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ServerChannelSinkStack", "ServerChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.CrossContextChannel", "CrossContextChannel");
            feature.AddKnownType("System.Runtime.Remoting.Channels.AsyncWorkItem", "AsyncWorkItem");
            feature.AddKnownType("System.Runtime.Remoting.Channels.CrossAppDomainChannel", "CrossAppDomainChannel");
            feature.AddKnownType("System.Runtime.Remoting.Channels.CrossAppDomainData", "CrossAppDomainData");
            feature.AddKnownType("System.Runtime.Remoting.Channels.CrossAppDomainSink", "CrossAppDomainSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ADAsyncWorkItem", "ADAsyncWorkItem");
            feature.AddKnownType("System.Runtime.Remoting.Channels.DispatchChannelSinkProvider", "DispatchChannelSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.DispatchChannelSink", "DispatchChannelSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannel", "IChannel");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelSender", "IChannelSender");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelReceiver", "IChannelReceiver");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelReceiverHook", "IChannelReceiverHook");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientChannelSinkProvider", "IClientChannelSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerChannelSinkProvider", "IServerChannelSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientFormatterSinkProvider", "IClientFormatterSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerFormatterSinkProvider", "IServerFormatterSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientChannelSink", "IClientChannelSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ServerProcessing", "ServerProcessing");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerChannelSink", "IServerChannelSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelSinkBase", "IChannelSinkBase");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientFormatterSink", "IClientFormatterSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelDataStore", "IChannelDataStore");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ChannelDataStore", "ChannelDataStore");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ITransportHeaders", "ITransportHeaders");
            feature.AddKnownType("System.Runtime.Remoting.Channels.TransportHeaders", "TransportHeaders");
            feature.AddKnownType("System.Runtime.Remoting.Channels.SinkProviderData", "SinkProviderData");
            feature.AddKnownType("System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties", "BaseChannelSinkWithProperties");
            feature.AddKnownType("System.Runtime.Remoting.Channels.BaseChannelWithProperties", "BaseChannelWithProperties");
            feature.AddKnownType("System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties", "BaseChannelObjectWithProperties");
            feature.AddKnownType("System.Runtime.Remoting.Channels.DictionaryEnumeratorByKeys", "DictionaryEnumeratorByKeys");
            feature.AddKnownType("System.Runtime.Remoting.Channels.AggregateDictionary", "AggregateDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ISecurableChannel", "ISecurableChannel");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.Context", "Context");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.CallBackHelper", "CallBackHelper");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.ContextProperty", "ContextProperty");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContextAttribute", "IContextAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContextProperty", "IContextProperty");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContextPropertyActivator", "IContextPropertyActivator");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.ContextAttribute", "ContextAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.DynamicPropertyHolder", "DynamicPropertyHolder");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.ArrayWithSize", "ArrayWithSize");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeClientContextSink", "IContributeClientContextSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeDynamicSink", "IContributeDynamicSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeEnvoySink", "IContributeEnvoySink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeObjectSink", "IContributeObjectSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeServerContextSink", "IContributeServerContextSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IDynamicProperty", "IDynamicProperty");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IDynamicMessageSink", "IDynamicMessageSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.SynchronizationAttribute", "SynchronizationAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.SynchronizedServerContextSink", "SynchronizedServerContextSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.WorkItem", "WorkItem");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.SynchronizedClientContextSink", "SynchronizedClientContextSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.SynchronizedClientContextSink+AsyncReplySink", "AsyncReplySink");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.ClientSponsor", "ClientSponsor");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.ILease", "ILease");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.ISponsor", "ISponsor");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.Lease", "Lease");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.Lease+SponsorState", "SponsorState");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.Lease+SponsorStateInfo", "SponsorStateInfo");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseSink", "LeaseSink");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseManager", "LeaseManager");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseManager+SponsorInfo", "SponsorInfo");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseState", "LeaseState");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LifetimeServices", "LifetimeServices");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseLifeTimeServiceProperty", "LeaseLifeTimeServiceProperty");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.AsyncResult", "AsyncResult");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IInternalMessage", "IInternalMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMessage", "IMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMessageCtrl", "IMessageCtrl");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMessageSink", "IMessageSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMethodMessage", "IMethodMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMethodCallMessage", "IMethodCallMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMethodReturnMessage", "IMethodReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IRemotingFormatter", "IRemotingFormatter");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.Message", "Message");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ConstructorReturnMessage", "ConstructorReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ConstructorCallMessage", "ConstructorCallMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CCMDictionary", "CCMDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CRMDictionary", "CRMDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MCMDictionary", "MCMDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MRMDictionary", "MRMDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageDictionary", "MessageDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageDictionaryEnumerator", "MessageDictionaryEnumerator");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.StackBasedReturnMessage", "StackBasedReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ReturnMessage", "ReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MethodCall", "MethodCall");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ConstructionCall", "ConstructionCall");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MethodResponse", "MethodResponse");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ISerializationRootObject", "ISerializationRootObject");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SerializationMonkey", "SerializationMonkey");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ConstructionResponse", "ConstructionResponse");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.TransitionCall", "TransitionCall");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ArgMapper", "ArgMapper");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ErrorMessage", "ErrorMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.InternalMessageWrapper", "InternalMessageWrapper");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MethodCallMessageWrapper", "MethodCallMessageWrapper");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper", "MethodReturnMessageWrapper");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageSmuggler", "MessageSmuggler");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageSmuggler+SerializedArg", "SerializedArg");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SmuggledObjRef", "SmuggledObjRef");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SmuggledMethodCallMessage", "SmuggledMethodCallMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SmuggledMethodReturnMessage", "SmuggledMethodReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.OneWayAttribute", "OneWayAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.RemotingSurrogateSelector", "RemotingSurrogateSelector");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.RemotingSurrogate", "RemotingSurrogate");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ObjRefSurrogate", "ObjRefSurrogate");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SoapMessageSurrogate", "SoapMessageSurrogate");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageSurrogate", "MessageSurrogate");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.StackBuilderSink", "StackBuilderSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.InternalSink", "InternalSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.EnvoyTerminatorSink", "EnvoyTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ClientContextTerminatorSink", "ClientContextTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.AsyncReplySink", "AsyncReplySink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ServerContextTerminatorSink", "ServerContextTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.DisposeSink", "DisposeSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink", "ServerObjectTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ClientAsyncReplyTerminatorSink", "ClientAsyncReplyTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.Header", "Header");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CallContext", "CallContext");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ILogicalThreadAffinative", "ILogicalThreadAffinative");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IllogicalCallContext", "IllogicalCallContext");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IllogicalCallContext+Reader", "Reader");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.LogicalCallContext", "LogicalCallContext");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.LogicalCallContext+Reader", "Reader");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CallContextSecurityData", "CallContextSecurityData");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CallContextRemotingData", "CallContextRemotingData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingCachedData", "RemotingCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingFieldCachedData", "RemotingFieldCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingParameterCachedData", "RemotingParameterCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingTypeCachedData", "RemotingTypeCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingMethodCachedData", "RemotingMethodCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapOption", "SoapOption");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.XmlFieldOrderOption", "XmlFieldOrderOption");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapTypeAttribute", "SoapTypeAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapMethodAttribute", "SoapMethodAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapFieldAttribute", "SoapFieldAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapParameterAttribute", "SoapParameterAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapAttribute", "SoapAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.ISoapXsd", "ISoapXsd");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDateTime", "SoapDateTime");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDuration", "SoapDuration");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime", "SoapTime");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate", "SoapDate");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth", "SoapYearMonth");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear", "SoapYear");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay", "SoapMonthDay");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay", "SoapDay");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth", "SoapMonth");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary", "SoapHexBinary");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary", "SoapBase64Binary");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger", "SoapInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger", "SoapPositiveInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger", "SoapNonPositiveInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger", "SoapNonNegativeInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger", "SoapNegativeInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri", "SoapAnyUri");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName", "SoapQName");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation", "SoapNotation");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString", "SoapNormalizedString");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken", "SoapToken");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage", "SoapLanguage");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName", "SoapName");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs", "SoapIdrefs");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities", "SoapEntities");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken", "SoapNmtoken");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens", "SoapNmtokens");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName", "SoapNcName");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId", "SoapId");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref", "SoapIdref");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity", "SoapEntity");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.ProxyAttribute", "ProxyAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.CallType", "CallType");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.RealProxyFlags", "RealProxyFlags");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.MessageData", "MessageData");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.RealProxy", "RealProxy");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.RemotingProxy", "RemotingProxy");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.AgileAsyncWorkerItem", "AgileAsyncWorkerItem");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.__TransparentProxy", "__TransparentProxy");
            feature.AddKnownType("System.Runtime.Remoting.Services.EnterpriseServicesHelper", "EnterpriseServicesHelper");
            feature.AddKnownType("System.Runtime.Remoting.Services.ITrackingHandler", "ITrackingHandler");
            feature.AddKnownType("System.Runtime.Remoting.Services.TrackingServices", "TrackingServices");
            feature.AddKnownType("System.Runtime.Serialization.FormatterConverter", "FormatterConverter");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateForCyclicalReference", "SurrogateForCyclicalReference");
            feature.AddKnownType("System.Runtime.Serialization.IDeserializationCallback", "IDeserializationCallback");
            feature.AddKnownType("System.Runtime.Serialization.IFormatter", "IFormatter");
            feature.AddKnownType("System.Runtime.Serialization.IFormatterConverter", "IFormatterConverter");
            feature.AddKnownType("System.Runtime.Serialization.IObjectReference", "IObjectReference");
            feature.AddKnownType("System.Runtime.Serialization.ISerializable", "ISerializable");
            feature.AddKnownType("System.Runtime.Serialization.ISerializationSurrogate", "ISerializationSurrogate");
            feature.AddKnownType("System.Runtime.Serialization.ISurrogateSelector", "ISurrogateSelector");
            feature.AddKnownType("System.Runtime.Serialization.MemberHolder", "MemberHolder");
            feature.AddKnownType("System.Runtime.Serialization.OptionalFieldAttribute", "OptionalFieldAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnSerializingAttribute", "OnSerializingAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnSerializedAttribute", "OnSerializedAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnDeserializingAttribute", "OnDeserializingAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnDeserializedAttribute", "OnDeserializedAttribute");
            feature.AddKnownType("System.Runtime.Serialization.SerializationBinder", "SerializationBinder");
            feature.AddKnownType("System.Runtime.Serialization.SerializationException", "SerializationException");
            feature.AddKnownType("System.Runtime.Serialization.SerializationFieldInfo", "SerializationFieldInfo");
            feature.AddKnownType("System.Runtime.Serialization.SerializationInfo", "SerializationInfo");
            feature.AddKnownType("System.Runtime.Serialization.SerializationEntry", "SerializationEntry");
            feature.AddKnownType("System.Runtime.Serialization.SerializationInfoEnumerator", "SerializationInfoEnumerator");
            feature.AddKnownType("System.Runtime.Serialization.StreamingContext", "StreamingContext");
            feature.AddKnownType("System.Runtime.Serialization.StreamingContextStates", "StreamingContextStates");
            feature.AddKnownType("System.Runtime.Serialization.Formatter", "Formatter");
            feature.AddKnownType("System.Runtime.Serialization.ObjectIDGenerator", "ObjectIDGenerator");
            feature.AddKnownType("System.Runtime.Serialization.ObjectManager", "ObjectManager");
            feature.AddKnownType("System.Runtime.Serialization.ObjectHolder", "ObjectHolder");
            feature.AddKnownType("System.Runtime.Serialization.FixupHolder", "FixupHolder");
            feature.AddKnownType("System.Runtime.Serialization.FixupHolderList", "FixupHolderList");
            feature.AddKnownType("System.Runtime.Serialization.LongList", "LongList");
            feature.AddKnownType("System.Runtime.Serialization.ObjectHolderList", "ObjectHolderList");
            feature.AddKnownType("System.Runtime.Serialization.ObjectHolderListEnumerator", "ObjectHolderListEnumerator");
            feature.AddKnownType("System.Runtime.Serialization.TypeLoadExceptionHolder", "TypeLoadExceptionHolder");
            feature.AddKnownType("System.Runtime.Serialization.SafeSerializationEventArgs", "SafeSerializationEventArgs");
            feature.AddKnownType("System.Runtime.Serialization.ISafeSerializationData", "ISafeSerializationData");
            feature.AddKnownType("System.Runtime.Serialization.SafeSerializationManager", "SafeSerializationManager");
            feature.AddKnownType("System.Runtime.Serialization.SerializationObjectManager", "SerializationObjectManager");
            feature.AddKnownType("System.Runtime.Serialization.SerializationEvents", "SerializationEvents");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateSelector", "SurrogateSelector");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateKey", "SurrogateKey");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateHashtable", "SurrogateHashtable");
            feature.AddKnownType("System.Runtime.Serialization.ValueTypeFixupInfo", "ValueTypeFixupInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.FormatterTypeStyle", "FormatterTypeStyle");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.FormatterAssemblyStyle", "FormatterAssemblyStyle");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.TypeFilterLevel", "TypeFilterLevel");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.ISoapMessage", "ISoapMessage");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.IFieldInfo", "IFieldInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.InternalRM", "InternalRM");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.InternalST", "InternalST");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.SoapMessage", "SoapMessage");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.SoapFault", "SoapFault");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.ServerFault", "ServerFault");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum", "BinaryHeaderEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum", "BinaryTypeEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum", "BinaryArrayTypeEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE", "InternalSerializerTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalElementTypeE", "InternalElementTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE", "InternalParseTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalObjectTypeE", "InternalObjectTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalObjectPositionE", "InternalObjectPositionE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalArrayTypeE", "InternalArrayTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalMemberTypeE", "InternalMemberTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalMemberValueE", "InternalMemberValueE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalParseStateE", "InternalParseStateE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE", "InternalPrimitiveTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MessageEnum", "MessageEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ValueFixupEnum", "ValueFixupEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalNameSpaceE", "InternalNameSpaceE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SoapAttributeType", "SoapAttributeType");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter", "BinaryFormatter");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.__BinaryParser", "__BinaryParser");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.__BinaryWriter", "__BinaryWriter");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectMapInfo", "ObjectMapInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.IStreamable", "IStreamable");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo", "BinaryAssemblyInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord", "SerializationHeaderRecord");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryAssembly", "BinaryAssembly");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainAssembly", "BinaryCrossAppDomainAssembly");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryObject", "BinaryObject");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryMethodCall", "BinaryMethodCall");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturn", "BinaryMethodReturn");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryObjectString", "BinaryObjectString");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainString", "BinaryCrossAppDomainString");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap", "BinaryCrossAppDomainMap");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped", "MemberPrimitiveTyped");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap", "BinaryObjectWithMap");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped", "BinaryObjectWithMapTyped");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryArray", "BinaryArray");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped", "MemberPrimitiveUnTyped");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MemberReference", "MemberReference");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectNull", "ObjectNull");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MessageEnd", "MessageEnd");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectMap", "ObjectMap");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectProgress", "ObjectProgress");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ParseRecord", "ParseRecord");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SerStack", "SerStack");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SizedArray", "SizedArray");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.IntSizedArray", "IntSizedArray");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.NameCache", "NameCache");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ValueFixup", "ValueFixup");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalFE", "InternalFE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.NameInfo", "NameInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.PrimitiveArray", "PrimitiveArray");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectReader", "ObjectReader");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectReader+TypeNAssembly", "TypeNAssembly");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectReader+TopLevelAssemblyTypeResolver", "TopLevelAssemblyTypeResolver");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectWriter", "ObjectWriter");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.Converter", "Converter");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo", "WriteObjectInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo", "ReadObjectInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit", "SerObjectInfoInit");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SerObjectInfoCache", "SerObjectInfoCache");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.TypeInformation", "TypeInformation");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryMethodCallMessage", "BinaryMethodCallMessage");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturnMessage", "BinaryMethodReturnMessage");
            feature.AddKnownType("System.Runtime.Versioning.ComponentGuaranteesOptions", "ComponentGuaranteesOptions");
            feature.AddKnownType("System.Runtime.Versioning.ComponentGuaranteesAttribute", "ComponentGuaranteesAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceConsumptionAttribute", "ResourceConsumptionAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceExposureAttribute", "ResourceExposureAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceScope", "ResourceScope");
            feature.AddKnownType("System.Runtime.Versioning.SxSRequirements", "SxSRequirements");
            feature.AddKnownType("System.Runtime.Versioning.TargetFrameworkAttribute", "TargetFrameworkAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetFrameworkId", "TargetFrameworkId");
            feature.AddKnownType("System.Runtime.Versioning.NonVersionableAttribute", "NonVersionableAttribute");
            feature.AddKnownType("System.Security.SecurityElementType", "SecurityElementType");
            feature.AddKnownType("System.Security.ISecurityElementFactory", "ISecurityElementFactory");
            feature.AddKnownType("System.Security.SecurityElement", "SecurityElement");
            feature.AddKnownType("System.Security.SecurityDocumentElement", "SecurityDocumentElement");
            feature.AddKnownType("System.Security.SecurityDocument", "SecurityDocument");
            feature.AddKnownType("System.Security.XmlSyntaxException", "XmlSyntaxException");
            feature.AddKnownType("System.Security.DynamicSecurityMethodAttribute", "DynamicSecurityMethodAttribute");
            feature.AddKnownType("System.Security.SuppressUnmanagedCodeSecurityAttribute", "SuppressUnmanagedCodeSecurityAttribute");
            feature.AddKnownType("System.Security.UnverifiableCodeAttribute", "UnverifiableCodeAttribute");
            feature.AddKnownType("System.Security.AllowPartiallyTrustedCallersAttribute", "AllowPartiallyTrustedCallersAttribute");
            feature.AddKnownType("System.Security.PartialTrustVisibilityLevel", "PartialTrustVisibilityLevel");
            feature.AddKnownType("System.Security.SecurityCriticalScope", "SecurityCriticalScope");
            feature.AddKnownType("System.Security.SecurityCriticalAttribute", "SecurityCriticalAttribute");
            feature.AddKnownType("System.Security.SecurityTreatAsSafeAttribute", "SecurityTreatAsSafeAttribute");
            feature.AddKnownType("System.Security.SecuritySafeCriticalAttribute", "SecuritySafeCriticalAttribute");
            feature.AddKnownType("System.Security.SecurityTransparentAttribute", "SecurityTransparentAttribute");
            feature.AddKnownType("System.Security.SecurityRuleSet", "SecurityRuleSet");
            feature.AddKnownType("System.Security.SecurityRulesAttribute", "SecurityRulesAttribute");
            feature.AddKnownType("System.Security.CodeAccessPermission", "CodeAccessPermission");
            feature.AddKnownType("System.Security.PermissionType", "PermissionType");
            feature.AddKnownType("System.Security.IEvidenceFactory", "IEvidenceFactory");
            feature.AddKnownType("System.Security.IPermission", "IPermission");
            feature.AddKnownType("System.Security.ISecurityEncodable", "ISecurityEncodable");
            feature.AddKnownType("System.Security.ISecurityPolicyEncodable", "ISecurityPolicyEncodable");
            feature.AddKnownType("System.Security.IStackWalk", "IStackWalk");
            feature.AddKnownType("System.Security.FrameSecurityDescriptor", "FrameSecurityDescriptor");
            feature.AddKnownType("System.Security.FrameSecurityDescriptorWithResolver", "FrameSecurityDescriptorWithResolver");
            feature.AddKnownType("System.Security.HostSecurityManagerOptions", "HostSecurityManagerOptions");
            feature.AddKnownType("System.Security.HostSecurityManager", "HostSecurityManager");
            feature.AddKnownType("System.Security.NamedPermissionSet", "NamedPermissionSet");
            feature.AddKnownType("System.Security.PermissionSetEnumerator", "PermissionSetEnumerator");
            feature.AddKnownType("System.Security.PermissionSetEnumeratorInternal", "PermissionSetEnumeratorInternal");
            feature.AddKnownType("System.Security.SpecialPermissionSetFlag", "SpecialPermissionSetFlag");
            feature.AddKnownType("System.Security.PermissionSet", "PermissionSet");
            feature.AddKnownType("System.Security.PermissionSet+IsSubsetOfType", "IsSubsetOfType");
            feature.AddKnownType("System.Security.PermissionTokenType", "PermissionTokenType");
            feature.AddKnownType("System.Security.PermissionTokenKeyComparer", "PermissionTokenKeyComparer");
            feature.AddKnownType("System.Security.PermissionToken", "PermissionToken");
            feature.AddKnownType("System.Security.PermissionTokenFactory", "PermissionTokenFactory");
            feature.AddKnownType("System.Security.PermissionSetTriple", "PermissionSetTriple");
            feature.AddKnownType("System.Security.PermissionListSet", "PermissionListSet");
            feature.AddKnownType("System.Security.PolicyManager", "PolicyManager");
            feature.AddKnownType("System.Security.ReadOnlyPermissionSet", "ReadOnlyPermissionSet");
            feature.AddKnownType("System.Security.ReadOnlyPermissionSetEnumerator", "ReadOnlyPermissionSetEnumerator");
            feature.AddKnownType("System.Security.SecureString", "SecureString");
            feature.AddKnownType("System.Security.SafeBSTRHandle", "SafeBSTRHandle");
            feature.AddKnownType("System.Security.SecurityContextSource", "SecurityContextSource");
            feature.AddKnownType("System.Security.SecurityContextDisableFlow", "SecurityContextDisableFlow");
            feature.AddKnownType("System.Security.WindowsImpersonationFlowMode", "WindowsImpersonationFlowMode");
            feature.AddKnownType("System.Security.SecurityContextSwitcher", "SecurityContextSwitcher");
            feature.AddKnownType("System.Security.SecurityContext", "SecurityContext");
            feature.AddKnownType("System.Security.SecurityContext+Reader", "Reader");
            feature.AddKnownType("System.Security.SecurityContext+SecurityContextRunData", "SecurityContextRunData");
            feature.AddKnownType("System.Security.SecurityException", "SecurityException");
            feature.AddKnownType("System.Security.SecurityState", "SecurityState");
            feature.AddKnownType("System.Security.HostProtectionException", "HostProtectionException");
            feature.AddKnownType("System.Security.PolicyLevelType", "PolicyLevelType");
            feature.AddKnownType("System.Security.SecurityRuntime", "SecurityRuntime");
            feature.AddKnownType("System.Security.SecurityZone", "SecurityZone");
            feature.AddKnownType("System.Security.VerificationException", "VerificationException");
            feature.AddKnownType("System.Security.AccessControl.InheritanceFlags", "InheritanceFlags");
            feature.AddKnownType("System.Security.AccessControl.PropagationFlags", "PropagationFlags");
            feature.AddKnownType("System.Security.AccessControl.AuditFlags", "AuditFlags");
            feature.AddKnownType("System.Security.AccessControl.SecurityInfos", "SecurityInfos");
            feature.AddKnownType("System.Security.AccessControl.ResourceType", "ResourceType");
            feature.AddKnownType("System.Security.AccessControl.AccessControlSections", "AccessControlSections");
            feature.AddKnownType("System.Security.AccessControl.AccessControlActions", "AccessControlActions");
            feature.AddKnownType("System.Security.AccessControl.AceType", "AceType");
            feature.AddKnownType("System.Security.AccessControl.AceFlags", "AceFlags");
            feature.AddKnownType("System.Security.AccessControl.GenericAce", "GenericAce");
            feature.AddKnownType("System.Security.AccessControl.KnownAce", "KnownAce");
            feature.AddKnownType("System.Security.AccessControl.CustomAce", "CustomAce");
            feature.AddKnownType("System.Security.AccessControl.CompoundAceType", "CompoundAceType");
            feature.AddKnownType("System.Security.AccessControl.CompoundAce", "CompoundAce");
            feature.AddKnownType("System.Security.AccessControl.AceQualifier", "AceQualifier");
            feature.AddKnownType("System.Security.AccessControl.QualifiedAce", "QualifiedAce");
            feature.AddKnownType("System.Security.AccessControl.CommonAce", "CommonAce");
            feature.AddKnownType("System.Security.AccessControl.ObjectAceFlags", "ObjectAceFlags");
            feature.AddKnownType("System.Security.AccessControl.ObjectAce", "ObjectAce");
            feature.AddKnownType("System.Security.AccessControl.AceEnumerator", "AceEnumerator");
            feature.AddKnownType("System.Security.AccessControl.GenericAcl", "GenericAcl");
            feature.AddKnownType("System.Security.AccessControl.RawAcl", "RawAcl");
            feature.AddKnownType("System.Security.AccessControl.CommonAcl", "CommonAcl");
            feature.AddKnownType("System.Security.AccessControl.SystemAcl", "SystemAcl");
            feature.AddKnownType("System.Security.AccessControl.DiscretionaryAcl", "DiscretionaryAcl");
            feature.AddKnownType("System.Security.AccessControl.CryptoKeyRights", "CryptoKeyRights");
            feature.AddKnownType("System.Security.AccessControl.CryptoKeyAccessRule", "CryptoKeyAccessRule");
            feature.AddKnownType("System.Security.AccessControl.CryptoKeyAuditRule", "CryptoKeyAuditRule");
            feature.AddKnownType("System.Security.AccessControl.CryptoKeySecurity", "CryptoKeySecurity");
            feature.AddKnownType("System.Security.AccessControl.EventWaitHandleRights", "EventWaitHandleRights");
            feature.AddKnownType("System.Security.AccessControl.EventWaitHandleAccessRule", "EventWaitHandleAccessRule");
            feature.AddKnownType("System.Security.AccessControl.EventWaitHandleAuditRule", "EventWaitHandleAuditRule");
            feature.AddKnownType("System.Security.AccessControl.EventWaitHandleSecurity", "EventWaitHandleSecurity");
            feature.AddKnownType("System.Security.AccessControl.FileSystemRights", "FileSystemRights");
            feature.AddKnownType("System.Security.AccessControl.FileSystemAccessRule", "FileSystemAccessRule");
            feature.AddKnownType("System.Security.AccessControl.FileSystemAuditRule", "FileSystemAuditRule");
            feature.AddKnownType("System.Security.AccessControl.FileSystemSecurity", "FileSystemSecurity");
            feature.AddKnownType("System.Security.AccessControl.FileSecurity", "FileSecurity");
            feature.AddKnownType("System.Security.AccessControl.DirectorySecurity", "DirectorySecurity");
            feature.AddKnownType("System.Security.AccessControl.MutexRights", "MutexRights");
            feature.AddKnownType("System.Security.AccessControl.MutexAccessRule", "MutexAccessRule");
            feature.AddKnownType("System.Security.AccessControl.MutexAuditRule", "MutexAuditRule");
            feature.AddKnownType("System.Security.AccessControl.MutexSecurity", "MutexSecurity");
            feature.AddKnownType("System.Security.AccessControl.NativeObjectSecurity", "NativeObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.AccessControlModification", "AccessControlModification");
            feature.AddKnownType("System.Security.AccessControl.ObjectSecurity", "ObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.ObjectSecurity`1", "ObjectSecurity'1");
            feature.AddKnownType("System.Security.AccessControl.AccessRule`1", "AccessRule'1");
            feature.AddKnownType("System.Security.AccessControl.AccessRule", "AccessRule");
            feature.AddKnownType("System.Security.AccessControl.AuditRule`1", "AuditRule'1");
            feature.AddKnownType("System.Security.AccessControl.AuditRule", "AuditRule");
            feature.AddKnownType("System.Security.AccessControl.CommonObjectSecurity", "CommonObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.DirectoryObjectSecurity", "DirectoryObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.Privilege", "Privilege");
            feature.AddKnownType("System.Security.AccessControl.PrivilegeNotHeldException", "PrivilegeNotHeldException");
            feature.AddKnownType("System.Security.AccessControl.RegistryRights", "RegistryRights");
            feature.AddKnownType("System.Security.AccessControl.RegistryAccessRule", "RegistryAccessRule");
            feature.AddKnownType("System.Security.AccessControl.RegistryAuditRule", "RegistryAuditRule");
            feature.AddKnownType("System.Security.AccessControl.RegistrySecurity", "RegistrySecurity");
            feature.AddKnownType("System.Security.AccessControl.AccessControlType", "AccessControlType");
            feature.AddKnownType("System.Security.AccessControl.AuthorizationRule", "AuthorizationRule");
            feature.AddKnownType("System.Security.AccessControl.ObjectAccessRule", "ObjectAccessRule");
            feature.AddKnownType("System.Security.AccessControl.ObjectAuditRule", "ObjectAuditRule");
            feature.AddKnownType("System.Security.AccessControl.AuthorizationRuleCollection", "AuthorizationRuleCollection");
            feature.AddKnownType("System.Security.AccessControl.ControlFlags", "ControlFlags");
            feature.AddKnownType("System.Security.AccessControl.GenericSecurityDescriptor", "GenericSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.RawSecurityDescriptor", "RawSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.CommonSecurityDescriptor", "CommonSecurityDescriptor");
            feature.AddKnownType("System.Security.Claims.Claim", "Claim");
            feature.AddKnownType("System.Security.Claims.ClaimsIdentity", "ClaimsIdentity");
            feature.AddKnownType("System.Security.Claims.ClaimsPrincipal", "ClaimsPrincipal");
            feature.AddKnownType("System.Security.Claims.RoleClaimProvider", "RoleClaimProvider");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+AlgorithmClass", "AlgorithmClass");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+AlgorithmType", "AlgorithmType");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+AlgorithmSubId", "AlgorithmSubId");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+AlgorithmID", "AlgorithmID");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+CryptAcquireContextFlags", "CryptAcquireContextFlags");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+ErrorCode", "ErrorCode");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+HashProperty", "HashProperty");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+KeyGenerationFlags", "KeyGenerationFlags");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+KeyProperty", "KeyProperty");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+KeySpec", "KeySpec");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+ProviderType", "ProviderType");
            feature.AddKnownType("System.Security.Cryptography.SafeCspHandle", "SafeCspHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCspHashHandle", "SafeCspHashHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCspKeyHandle", "SafeCspKeyHandle");
            feature.AddKnownType("System.Security.Cryptography.CipherMode", "CipherMode");
            feature.AddKnownType("System.Security.Cryptography.PaddingMode", "PaddingMode");
            feature.AddKnownType("System.Security.Cryptography.KeySizes", "KeySizes");
            feature.AddKnownType("System.Security.Cryptography.CryptographicException", "CryptographicException");
            feature.AddKnownType("System.Security.Cryptography.CryptographicUnexpectedOperationException", "CryptographicUnexpectedOperationException");
            feature.AddKnownType("System.Security.Cryptography.ICryptoTransform", "ICryptoTransform");
            feature.AddKnownType("System.Security.Cryptography.RandomNumberGenerator", "RandomNumberGenerator");
            feature.AddKnownType("System.Security.Cryptography.RNGCryptoServiceProvider", "RNGCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.Aes", "Aes");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricAlgorithm", "AsymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricKeyExchangeDeformatter", "AsymmetricKeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricKeyExchangeFormatter", "AsymmetricKeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricSignatureDeformatter", "AsymmetricSignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricSignatureFormatter", "AsymmetricSignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.FromBase64TransformMode", "FromBase64TransformMode");
            feature.AddKnownType("System.Security.Cryptography.ToBase64Transform", "ToBase64Transform");
            feature.AddKnownType("System.Security.Cryptography.FromBase64Transform", "FromBase64Transform");
            feature.AddKnownType("System.Security.Cryptography.CryptoAPITransformMode", "CryptoAPITransformMode");
            feature.AddKnownType("System.Security.Cryptography.CryptoAPITransform", "CryptoAPITransform");
            feature.AddKnownType("System.Security.Cryptography.CspProviderFlags", "CspProviderFlags");
            feature.AddKnownType("System.Security.Cryptography.CspParameters", "CspParameters");
            feature.AddKnownType("System.Security.Cryptography.CryptoConfig", "CryptoConfig");
            feature.AddKnownType("System.Security.Cryptography.CryptoStreamMode", "CryptoStreamMode");
            feature.AddKnownType("System.Security.Cryptography.CryptoStream", "CryptoStream");
            feature.AddKnownType("System.Security.Cryptography.DES", "DES");
            feature.AddKnownType("System.Security.Cryptography.DESCryptoServiceProvider", "DESCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.DeriveBytes", "DeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.DSAParameters", "DSAParameters");
            feature.AddKnownType("System.Security.Cryptography.DSA", "DSA");
            feature.AddKnownType("System.Security.Cryptography.DSACspObject", "DSACspObject");
            feature.AddKnownType("System.Security.Cryptography.DSACryptoServiceProvider", "DSACryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureDeformatter", "DSASignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureFormatter", "DSASignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.HMAC", "HMAC");
            feature.AddKnownType("System.Security.Cryptography.HMACMD5", "HMACMD5");
            feature.AddKnownType("System.Security.Cryptography.HMACRIPEMD160", "HMACRIPEMD160");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA1", "HMACSHA1");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA256", "HMACSHA256");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA384", "HMACSHA384");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA512", "HMACSHA512");
            feature.AddKnownType("System.Security.Cryptography.HashAlgorithm", "HashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.HashAlgorithmName", "HashAlgorithmName");
            feature.AddKnownType("System.Security.Cryptography.KeyNumber", "KeyNumber");
            feature.AddKnownType("System.Security.Cryptography.CspKeyContainerInfo", "CspKeyContainerInfo");
            feature.AddKnownType("System.Security.Cryptography.ICspAsymmetricAlgorithm", "ICspAsymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.KeyedHashAlgorithm", "KeyedHashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.MACTripleDES", "MACTripleDES");
            feature.AddKnownType("System.Security.Cryptography.TailStream", "TailStream");
            feature.AddKnownType("System.Security.Cryptography.MD5", "MD5");
            feature.AddKnownType("System.Security.Cryptography.MD5CryptoServiceProvider", "MD5CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.MaskGenerationMethod", "MaskGenerationMethod");
            feature.AddKnownType("System.Security.Cryptography.PasswordDeriveBytes", "PasswordDeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.PKCS1MaskGenerationMethod", "PKCS1MaskGenerationMethod");
            feature.AddKnownType("System.Security.Cryptography.RC2", "RC2");
            feature.AddKnownType("System.Security.Cryptography.RC2CryptoServiceProvider", "RC2CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.Rfc2898DeriveBytes", "Rfc2898DeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.RIPEMD160", "RIPEMD160");
            feature.AddKnownType("System.Security.Cryptography.RIPEMD160Managed", "RIPEMD160Managed");
            feature.AddKnownType("System.Security.Cryptography.RSAParameters", "RSAParameters");
            feature.AddKnownType("System.Security.Cryptography.RSA", "RSA");
            feature.AddKnownType("System.Security.Cryptography.RSASignaturePadding", "RSASignaturePadding");
            feature.AddKnownType("System.Security.Cryptography.RSASignaturePaddingMode", "RSASignaturePaddingMode");
            feature.AddKnownType("System.Security.Cryptography.RSACspObject", "RSACspObject");
            feature.AddKnownType("System.Security.Cryptography.RSACryptoServiceProvider", "RSACryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.RSAEncryptionPadding", "RSAEncryptionPadding");
            feature.AddKnownType("System.Security.Cryptography.RSAEncryptionPaddingMode", "RSAEncryptionPaddingMode");
            feature.AddKnownType("System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter", "RSAOAEPKeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAOAEPKeyExchangeFormatter", "RSAOAEPKeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter", "RSAPKCS1KeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter", "RSAPKCS1KeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SignatureDeformatter", "RSAPKCS1SignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SignatureFormatter", "RSAPKCS1SignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.Rijndael", "Rijndael");
            feature.AddKnownType("System.Security.Cryptography.RijndaelManaged", "RijndaelManaged");
            feature.AddKnownType("System.Security.Cryptography.RijndaelManagedTransformMode", "RijndaelManagedTransformMode");
            feature.AddKnownType("System.Security.Cryptography.RijndaelManagedTransform", "RijndaelManagedTransform");
            feature.AddKnownType("System.Security.Cryptography.SafeProvHandle", "SafeProvHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeKeyHandle", "SafeKeyHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeHashHandle", "SafeHashHandle");
            feature.AddKnownType("System.Security.Cryptography.SHA1", "SHA1");
            feature.AddKnownType("System.Security.Cryptography.SHA1CryptoServiceProvider", "SHA1CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA1Managed", "SHA1Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA256", "SHA256");
            feature.AddKnownType("System.Security.Cryptography.SHA256Managed", "SHA256Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA384", "SHA384");
            feature.AddKnownType("System.Security.Cryptography.SHA384Managed", "SHA384Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA512", "SHA512");
            feature.AddKnownType("System.Security.Cryptography.SHA512Managed", "SHA512Managed");
            feature.AddKnownType("System.Security.Cryptography.SignatureDescription", "SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SHA1SignatureDescription", "RSAPKCS1SHA1SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureDescription", "DSASignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.SymmetricAlgorithm", "SymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.TripleDES", "TripleDES");
            feature.AddKnownType("System.Security.Cryptography.TripleDESCryptoServiceProvider", "TripleDESCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.CspAlgorithmType", "CspAlgorithmType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.SafeCertContextHandle", "SafeCertContextHandle");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.SafeCertStoreHandle", "SafeCertStoreHandle");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.OidGroup", "OidGroup");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.OidKeyType", "OidKeyType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.CRYPT_OID_INFO", "CRYPT_OID_INFO");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ContentType", "X509ContentType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyStorageFlags", "X509KeyStorageFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate", "X509Certificate");
            feature.AddKnownType("System.Security.Permissions.EnvironmentPermissionAccess", "EnvironmentPermissionAccess");
            feature.AddKnownType("System.Security.Permissions.EnvironmentStringExpressionSet", "EnvironmentStringExpressionSet");
            feature.AddKnownType("System.Security.Permissions.EnvironmentPermission", "EnvironmentPermission");
            feature.AddKnownType("System.Security.Permissions.FileDialogPermissionAccess", "FileDialogPermissionAccess");
            feature.AddKnownType("System.Security.Permissions.FileDialogPermission", "FileDialogPermission");
            feature.AddKnownType("System.Security.Permissions.FileIOPermissionAccess", "FileIOPermissionAccess");
            feature.AddKnownType("System.Security.Permissions.FileIOPermission", "FileIOPermission");
            feature.AddKnownType("System.Security.Permissions.FileIOAccess", "FileIOAccess");
            feature.AddKnownType("System.Security.Permissions.HostProtectionResource", "HostProtectionResource");
            feature.AddKnownType("System.Security.Permissions.HostProtectionAttribute", "HostProtectionAttribute");
            feature.AddKnownType("System.Security.Permissions.HostProtectionPermission", "HostProtectionPermission");
            feature.AddKnownType("System.Security.Permissions.IBuiltInPermission", "IBuiltInPermission");
            feature.AddKnownType("System.Security.Permissions.BuiltInPermissionFlag", "BuiltInPermissionFlag");
            feature.AddKnownType("System.Security.Permissions.IsolatedStorageContainment", "IsolatedStorageContainment");
            feature.AddKnownType("System.Security.Permissions.IsolatedStoragePermission", "IsolatedStoragePermission");
            feature.AddKnownType("System.Security.Permissions.IsolatedStorageFilePermission", "IsolatedStorageFilePermission");
            feature.AddKnownType("System.Security.Permissions.PermissionState", "PermissionState");
            feature.AddKnownType("System.Security.Permissions.SecurityAction", "SecurityAction");
            feature.AddKnownType("System.Security.Permissions.SecurityAttribute", "SecurityAttribute");
            feature.AddKnownType("System.Security.Permissions.CodeAccessSecurityAttribute", "CodeAccessSecurityAttribute");
            feature.AddKnownType("System.Security.Permissions.EnvironmentPermissionAttribute", "EnvironmentPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.FileDialogPermissionAttribute", "FileDialogPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.FileIOPermissionAttribute", "FileIOPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionAttribute", "KeyContainerPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.PrincipalPermissionAttribute", "PrincipalPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.ReflectionPermissionAttribute", "ReflectionPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.RegistryPermissionAttribute", "RegistryPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.SecurityPermissionAttribute", "SecurityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.UIPermissionAttribute", "UIPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.ZoneIdentityPermissionAttribute", "ZoneIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.StrongNameIdentityPermissionAttribute", "StrongNameIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.SiteIdentityPermissionAttribute", "SiteIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.UrlIdentityPermissionAttribute", "UrlIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.PublisherIdentityPermissionAttribute", "PublisherIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.IsolatedStoragePermissionAttribute", "IsolatedStoragePermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.IsolatedStorageFilePermissionAttribute", "IsolatedStorageFilePermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.PermissionSetAttribute", "PermissionSetAttribute");
            feature.AddKnownType("System.Security.Permissions.ReflectionPermissionFlag", "ReflectionPermissionFlag");
            feature.AddKnownType("System.Security.Permissions.ReflectionPermission", "ReflectionPermission");
            feature.AddKnownType("System.Security.Permissions.IDRole", "IDRole");
            feature.AddKnownType("System.Security.Permissions.PrincipalPermission", "PrincipalPermission");
            feature.AddKnownType("System.Security.Permissions.SecurityPermissionFlag", "SecurityPermissionFlag");
            feature.AddKnownType("System.Security.Permissions.SecurityPermission", "SecurityPermission");
            feature.AddKnownType("System.Security.Permissions.SiteIdentityPermission", "SiteIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.StrongName2", "StrongName2");
            feature.AddKnownType("System.Security.Permissions.StrongNameIdentityPermission", "StrongNameIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.StrongNamePublicKeyBlob", "StrongNamePublicKeyBlob");
            feature.AddKnownType("System.Security.Permissions.UIPermissionWindow", "UIPermissionWindow");
            feature.AddKnownType("System.Security.Permissions.UIPermissionClipboard", "UIPermissionClipboard");
            feature.AddKnownType("System.Security.Permissions.UIPermission", "UIPermission");
            feature.AddKnownType("System.Security.Permissions.UrlIdentityPermission", "UrlIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.ZoneIdentityPermission", "ZoneIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.GacIdentityPermissionAttribute", "GacIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.GacIdentityPermission", "GacIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.IUnrestrictedPermission", "IUnrestrictedPermission");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionFlags", "KeyContainerPermissionFlags");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionAccessEntry", "KeyContainerPermissionAccessEntry");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionAccessEntryCollection", "KeyContainerPermissionAccessEntryCollection");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator", "KeyContainerPermissionAccessEntryEnumerator");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermission", "KeyContainerPermission");
            feature.AddKnownType("System.Security.Permissions.PublisherIdentityPermission", "PublisherIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.RegistryPermissionAccess", "RegistryPermissionAccess");
            feature.AddKnownType("System.Security.Permissions.RegistryPermission", "RegistryPermission");
            feature.AddKnownType("System.Security.Policy.AllMembershipCondition", "AllMembershipCondition");
            feature.AddKnownType("System.Security.Policy.AppDomainEvidenceFactory", "AppDomainEvidenceFactory");
            feature.AddKnownType("System.Security.Policy.ApplicationDirectory", "ApplicationDirectory");
            feature.AddKnownType("System.Security.Policy.ApplicationDirectoryMembershipCondition", "ApplicationDirectoryMembershipCondition");
            feature.AddKnownType("System.Security.Policy.ApplicationSecurityInfo", "ApplicationSecurityInfo");
            feature.AddKnownType("System.Security.Policy.ApplicationVersionMatch", "ApplicationVersionMatch");
            feature.AddKnownType("System.Security.Policy.ApplicationTrust", "ApplicationTrust");
            feature.AddKnownType("System.Security.Policy.ApplicationTrustCollection", "ApplicationTrustCollection");
            feature.AddKnownType("System.Security.Policy.ApplicationTrustEnumerator", "ApplicationTrustEnumerator");
            feature.AddKnownType("System.Security.Policy.AssemblyEvidenceFactory", "AssemblyEvidenceFactory");
            feature.AddKnownType("System.Security.Policy.IUnionSemanticCodeGroup", "IUnionSemanticCodeGroup");
            feature.AddKnownType("System.Security.Policy.CodeGroup", "CodeGroup");
            feature.AddKnownType("System.Security.Policy.CodeGroupPositionMarker", "CodeGroupPositionMarker");
            feature.AddKnownType("System.Security.Policy.Evidence", "Evidence");
            feature.AddKnownType("System.Security.Policy.Evidence+RawEvidenceEnumerator", "RawEvidenceEnumerator");
            feature.AddKnownType("System.Security.Policy.EvidenceBase", "EvidenceBase");
            feature.AddKnownType("System.Security.Policy.ILegacyEvidenceAdapter", "ILegacyEvidenceAdapter");
            feature.AddKnownType("System.Security.Policy.LegacyEvidenceWrapper", "LegacyEvidenceWrapper");
            feature.AddKnownType("System.Security.Policy.LegacyEvidenceList", "LegacyEvidenceList");
            feature.AddKnownType("System.Security.Policy.EvidenceTypeDescriptor", "EvidenceTypeDescriptor");
            feature.AddKnownType("System.Security.Policy.FileCodeGroup", "FileCodeGroup");
            feature.AddKnownType("System.Security.Policy.FirstMatchCodeGroup", "FirstMatchCodeGroup");
            feature.AddKnownType("System.Security.Policy.IIdentityPermissionFactory", "IIdentityPermissionFactory");
            feature.AddKnownType("System.Security.Policy.IConstantMembershipCondition", "IConstantMembershipCondition");
            feature.AddKnownType("System.Security.Policy.IDelayEvaluatedEvidence", "IDelayEvaluatedEvidence");
            feature.AddKnownType("System.Security.Policy.IMembershipCondition", "IMembershipCondition");
            feature.AddKnownType("System.Security.Policy.IReportMatchMembershipCondition", "IReportMatchMembershipCondition");
            feature.AddKnownType("System.Security.Policy.IRuntimeEvidenceFactory", "IRuntimeEvidenceFactory");
            feature.AddKnownType("System.Security.Policy.IApplicationTrustManager", "IApplicationTrustManager");
            feature.AddKnownType("System.Security.Policy.TrustManagerUIContext", "TrustManagerUIContext");
            feature.AddKnownType("System.Security.Policy.TrustManagerContext", "TrustManagerContext");
            feature.AddKnownType("System.Security.Policy.CodeConnectAccess", "CodeConnectAccess");
            feature.AddKnownType("System.Security.Policy.NetCodeGroup", "NetCodeGroup");
            feature.AddKnownType("System.Security.Policy.EvidenceTypeGenerated", "EvidenceTypeGenerated");
            feature.AddKnownType("System.Security.Policy.PEFileEvidenceFactory", "PEFileEvidenceFactory");
            feature.AddKnownType("System.Security.Policy.PermissionRequestEvidence", "PermissionRequestEvidence");
            feature.AddKnownType("System.Security.Policy.PolicyException", "PolicyException");
            feature.AddKnownType("System.Security.Policy.ConfigId", "ConfigId");
            feature.AddKnownType("System.Security.Policy.PolicyLevel", "PolicyLevel");
            feature.AddKnownType("System.Security.Policy.CodeGroupStackFrame", "CodeGroupStackFrame");
            feature.AddKnownType("System.Security.Policy.CodeGroupStack", "CodeGroupStack");
            feature.AddKnownType("System.Security.Policy.PolicyStatementAttribute", "PolicyStatementAttribute");
            feature.AddKnownType("System.Security.Policy.PolicyStatement", "PolicyStatement");
            feature.AddKnownType("System.Security.Policy.Site", "Site");
            feature.AddKnownType("System.Security.Policy.SiteMembershipCondition", "SiteMembershipCondition");
            feature.AddKnownType("System.Security.Policy.StrongName", "StrongName");
            feature.AddKnownType("System.Security.Policy.StrongNameMembershipCondition", "StrongNameMembershipCondition");
            feature.AddKnownType("System.Security.Policy.UnionCodeGroup", "UnionCodeGroup");
            feature.AddKnownType("System.Security.Policy.Url", "Url");
            feature.AddKnownType("System.Security.Policy.UrlMembershipCondition", "UrlMembershipCondition");
            feature.AddKnownType("System.Security.Policy.Zone", "Zone");
            feature.AddKnownType("System.Security.Policy.ZoneMembershipCondition", "ZoneMembershipCondition");
            feature.AddKnownType("System.Security.Policy.GacInstalled", "GacInstalled");
            feature.AddKnownType("System.Security.Policy.GacMembershipCondition", "GacMembershipCondition");
            feature.AddKnownType("System.Security.Policy.Hash", "Hash");
            feature.AddKnownType("System.Security.Policy.HashMembershipCondition", "HashMembershipCondition");
            feature.AddKnownType("System.Security.Policy.Publisher", "Publisher");
            feature.AddKnownType("System.Security.Policy.PublisherMembershipCondition", "PublisherMembershipCondition");
            feature.AddKnownType("System.Security.Principal.GenericIdentity", "GenericIdentity");
            feature.AddKnownType("System.Security.Principal.GenericPrincipal", "GenericPrincipal");
            feature.AddKnownType("System.Security.Principal.IIdentity", "IIdentity");
            feature.AddKnownType("System.Security.Principal.IPrincipal", "IPrincipal");
            feature.AddKnownType("System.Security.Principal.PrincipalPolicy", "PrincipalPolicy");
            feature.AddKnownType("System.Security.Principal.TokenAccessLevels", "TokenAccessLevels");
            feature.AddKnownType("System.Security.Principal.TokenImpersonationLevel", "TokenImpersonationLevel");
            feature.AddKnownType("System.Security.Principal.WindowsAccountType", "WindowsAccountType");
            feature.AddKnownType("System.Security.Principal.WinSecurityContext", "WinSecurityContext");
            feature.AddKnownType("System.Security.Principal.ImpersonationQueryResult", "ImpersonationQueryResult");
            feature.AddKnownType("System.Security.Principal.WindowsIdentity", "WindowsIdentity");
            feature.AddKnownType("System.Security.Principal.KerbLogonSubmitType", "KerbLogonSubmitType");
            feature.AddKnownType("System.Security.Principal.SecurityLogonType", "SecurityLogonType");
            feature.AddKnownType("System.Security.Principal.TokenType", "TokenType");
            feature.AddKnownType("System.Security.Principal.TokenInformationClass", "TokenInformationClass");
            feature.AddKnownType("System.Security.Principal.WindowsImpersonationContext", "WindowsImpersonationContext");
            feature.AddKnownType("System.Security.Principal.WindowsBuiltInRole", "WindowsBuiltInRole");
            feature.AddKnownType("System.Security.Principal.WindowsPrincipal", "WindowsPrincipal");
            feature.AddKnownType("System.Security.Principal.IdentityReference", "IdentityReference");
            feature.AddKnownType("System.Security.Principal.IdentityReferenceCollection", "IdentityReferenceCollection");
            feature.AddKnownType("System.Security.Principal.IdentityReferenceEnumerator", "IdentityReferenceEnumerator");
            feature.AddKnownType("System.Security.Principal.NTAccount", "NTAccount");
            feature.AddKnownType("System.Security.Principal.IdentifierAuthority", "IdentifierAuthority");
            feature.AddKnownType("System.Security.Principal.SidNameUse", "SidNameUse");
            feature.AddKnownType("System.Security.Principal.WellKnownSidType", "WellKnownSidType");
            feature.AddKnownType("System.Security.Principal.SecurityIdentifier", "SecurityIdentifier");
            feature.AddKnownType("System.Security.Principal.PolicyRights", "PolicyRights");
            feature.AddKnownType("System.Security.Principal.IdentityNotMappedException", "IdentityNotMappedException");
            feature.AddKnownType("System.Security.Util.QuickCacheEntryType", "QuickCacheEntryType");
            feature.AddKnownType("System.Security.Util.SiteString", "SiteString");
            feature.AddKnownType("System.Security.Util.StringExpressionSet", "StringExpressionSet");
            feature.AddKnownType("System.Security.Util.TokenBasedSet", "TokenBasedSet");
            feature.AddKnownType("System.Security.Util.TokenBasedSetEnumerator", "TokenBasedSetEnumerator");
            feature.AddKnownType("System.Security.Util.URLString", "URLString");
            feature.AddKnownType("System.Security.Util.DirectoryString", "DirectoryString");
            feature.AddKnownType("System.Security.Util.LocalSiteString", "LocalSiteString");
            feature.AddKnownType("System.Security.Util.Parser", "Parser");
            feature.AddKnownType("System.Security.Util.Tokenizer", "Tokenizer");
            feature.AddKnownType("System.Security.Util.Tokenizer+ByteTokenEncoding", "ByteTokenEncoding");
            feature.AddKnownType("System.Security.Util.Tokenizer+StringMaker", "StringMaker");
            feature.AddKnownType("System.Security.Util.Tokenizer+ITokenReader", "ITokenReader");
            feature.AddKnownType("System.Security.Util.Tokenizer+StreamTokenReader", "StreamTokenReader");
            feature.AddKnownType("System.Security.Util.TokenizerShortBlock", "TokenizerShortBlock");
            feature.AddKnownType("System.Security.Util.TokenizerStringBlock", "TokenizerStringBlock");
            feature.AddKnownType("System.Security.Util.TokenizerStream", "TokenizerStream");
            feature.AddKnownType("System.StubHelpers.DateTimeNative", "DateTimeNative");
            feature.AddKnownType("System.StubHelpers.AsAnyMarshaler", "AsAnyMarshaler");
            feature.AddKnownType("System.StubHelpers.AsAnyMarshaler+BackPropAction", "BackPropAction");
            feature.AddKnownType("System.StubHelpers.TypeNameNative", "TypeNameNative");
            feature.AddKnownType("System.StubHelpers.TypeKind", "TypeKind");
            feature.AddKnownType("System.StubHelpers.NativeVariant", "NativeVariant");
            feature.AddKnownType("System.StubHelpers.CopyCtorStubCookie", "CopyCtorStubCookie");
            feature.AddKnownType("System.StubHelpers.CopyCtorStubDesc", "CopyCtorStubDesc");
            feature.AddKnownType("System.StubHelpers.CleanupWorkListElement", "CleanupWorkListElement");
            feature.AddKnownType("System.StubHelpers.CleanupWorkList", "CleanupWorkList");
            feature.AddKnownType("System.Text.StringBuilder", "StringBuilder");
            feature.AddKnownType("System.Text.ASCIIEncoding", "ASCIIEncoding");
            feature.AddKnownType("System.Text.BaseCodePageEncoding", "BaseCodePageEncoding");
            feature.AddKnownType("System.Text.BaseCodePageEncoding+CodePageDataFileHeader", "CodePageDataFileHeader");
            feature.AddKnownType("System.Text.BaseCodePageEncoding+CodePageIndex", "CodePageIndex");
            feature.AddKnownType("System.Text.BaseCodePageEncoding+CodePageHeader", "CodePageHeader");
            feature.AddKnownType("System.Text.CodePageEncoding", "CodePageEncoding");
            feature.AddKnownType("System.Text.CodePageEncoding+Decoder", "Decoder");
            feature.AddKnownType("System.Text.Decoder", "Decoder");
            feature.AddKnownType("System.Text.DecoderNLS", "DecoderNLS");
            feature.AddKnownType("System.Text.InternalDecoderBestFitFallback", "InternalDecoderBestFitFallback");
            feature.AddKnownType("System.Text.InternalDecoderBestFitFallbackBuffer", "InternalDecoderBestFitFallbackBuffer");
            feature.AddKnownType("System.Text.DecoderExceptionFallback", "DecoderExceptionFallback");
            feature.AddKnownType("System.Text.DecoderExceptionFallbackBuffer", "DecoderExceptionFallbackBuffer");
            feature.AddKnownType("System.Text.DecoderFallbackException", "DecoderFallbackException");
            feature.AddKnownType("System.Text.DecoderFallback", "DecoderFallback");
            feature.AddKnownType("System.Text.DecoderFallbackBuffer", "DecoderFallbackBuffer");
            feature.AddKnownType("System.Text.DecoderReplacementFallback", "DecoderReplacementFallback");
            feature.AddKnownType("System.Text.DecoderReplacementFallbackBuffer", "DecoderReplacementFallbackBuffer");
            feature.AddKnownType("System.Text.Encoder", "Encoder");
            feature.AddKnownType("System.Text.EncoderNLS", "EncoderNLS");
            feature.AddKnownType("System.Text.InternalEncoderBestFitFallback", "InternalEncoderBestFitFallback");
            feature.AddKnownType("System.Text.InternalEncoderBestFitFallbackBuffer", "InternalEncoderBestFitFallbackBuffer");
            feature.AddKnownType("System.Text.EncoderExceptionFallback", "EncoderExceptionFallback");
            feature.AddKnownType("System.Text.EncoderExceptionFallbackBuffer", "EncoderExceptionFallbackBuffer");
            feature.AddKnownType("System.Text.EncoderFallbackException", "EncoderFallbackException");
            feature.AddKnownType("System.Text.EncoderFallback", "EncoderFallback");
            feature.AddKnownType("System.Text.EncoderFallbackBuffer", "EncoderFallbackBuffer");
            feature.AddKnownType("System.Text.EncoderReplacementFallback", "EncoderReplacementFallback");
            feature.AddKnownType("System.Text.EncoderReplacementFallbackBuffer", "EncoderReplacementFallbackBuffer");
            feature.AddKnownType("System.Text.Encoding", "Encoding");
            feature.AddKnownType("System.Text.Encoding+DefaultEncoder", "DefaultEncoder");
            feature.AddKnownType("System.Text.Encoding+DefaultDecoder", "DefaultDecoder");
            feature.AddKnownType("System.Text.Encoding+EncodingCharBuffer", "EncodingCharBuffer");
            feature.AddKnownType("System.Text.Encoding+EncodingByteBuffer", "EncodingByteBuffer");
            feature.AddKnownType("System.Text.EncodingInfo", "EncodingInfo");
            feature.AddKnownType("System.Text.EncodingNLS", "EncodingNLS");
            feature.AddKnownType("System.Text.EncodingProvider", "EncodingProvider");
            feature.AddKnownType("System.Text.ISCIIEncoding", "ISCIIEncoding");
            feature.AddKnownType("System.Text.ISCIIEncoding+ISCIIEncoder", "ISCIIEncoder");
            feature.AddKnownType("System.Text.ISCIIEncoding+ISCIIDecoder", "ISCIIDecoder");
            feature.AddKnownType("System.Text.Latin1Encoding", "Latin1Encoding");
            feature.AddKnownType("System.Text.MLangCodePageEncoding", "MLangCodePageEncoding");
            feature.AddKnownType("System.Text.MLangCodePageEncoding+MLangEncoder", "MLangEncoder");
            feature.AddKnownType("System.Text.MLangCodePageEncoding+MLangDecoder", "MLangDecoder");
            feature.AddKnownType("System.Text.NormalizationForm", "NormalizationForm");
            feature.AddKnownType("System.Text.ExtendedNormalizationForms", "ExtendedNormalizationForms");
            feature.AddKnownType("System.Text.Normalization", "Normalization");
            feature.AddKnownType("System.Text.DBCSCodePageEncoding", "DBCSCodePageEncoding");
            feature.AddKnownType("System.Text.DBCSCodePageEncoding+DBCSDecoder", "DBCSDecoder");
            feature.AddKnownType("System.Text.SBCSCodePageEncoding", "SBCSCodePageEncoding");
            feature.AddKnownType("System.Text.SurrogateEncoder", "SurrogateEncoder");
            feature.AddKnownType("System.Text.UnicodeEncoding", "UnicodeEncoding");
            feature.AddKnownType("System.Text.UTF7Encoding", "UTF7Encoding");
            feature.AddKnownType("System.Text.UTF7Encoding+DecoderUTF7Fallback", "DecoderUTF7Fallback");
            feature.AddKnownType("System.Text.UTF7Encoding+DecoderUTF7FallbackBuffer", "DecoderUTF7FallbackBuffer");
            feature.AddKnownType("System.Text.UTF8Encoding", "UTF8Encoding");
            feature.AddKnownType("System.Text.UTF8Encoding+UTF8Encoder", "UTF8Encoder");
            feature.AddKnownType("System.Text.UTF8Encoding+UTF8Decoder", "UTF8Decoder");
            feature.AddKnownType("System.Text.UTF32Encoding", "UTF32Encoding");
            feature.AddKnownType("System.Text.UTF32Encoding+UTF32Decoder", "UTF32Decoder");
            feature.AddKnownType("System.Text.GB18030Encoding", "GB18030Encoding");
            feature.AddKnownType("System.Text.GB18030Encoding+GB18030Decoder", "GB18030Decoder");
            feature.AddKnownType("System.Text.ISO2022Encoding", "ISO2022Encoding");
            feature.AddKnownType("System.Text.ISO2022Encoding+ISO2022Modes", "ISO2022Modes");
            feature.AddKnownType("System.Text.ISO2022Encoding+ISO2022Encoder", "ISO2022Encoder");
            feature.AddKnownType("System.Text.ISO2022Encoding+ISO2022Decoder", "ISO2022Decoder");
            feature.AddKnownType("System.Text.EUCJPEncoding", "EUCJPEncoding");
            feature.AddKnownType("System.Threading.AbandonedMutexException", "AbandonedMutexException");
            feature.AddKnownType("System.Threading.AsyncLocal`1", "AsyncLocal'1");
            feature.AddKnownType("System.Threading.IAsyncLocal", "IAsyncLocal");
            feature.AddKnownType("System.Threading.AsyncLocalValueChangedArgs`1", "AsyncLocalValueChangedArgs'1");
            feature.AddKnownType("System.Threading.AutoResetEvent", "AutoResetEvent");
            feature.AddKnownType("System.Threading.SynchronizationContextProperties", "SynchronizationContextProperties");
            feature.AddKnownType("System.Threading.WinRTSynchronizationContextFactoryBase", "WinRTSynchronizationContextFactoryBase");
            feature.AddKnownType("System.Threading.SynchronizationContext", "SynchronizationContext");
            feature.AddKnownType("System.Threading.CompressedStackSwitcher", "CompressedStackSwitcher");
            feature.AddKnownType("System.Threading.SafeCompressedStackHandle", "SafeCompressedStackHandle");
            feature.AddKnownType("System.Threading.CompressedStack", "CompressedStack");
            feature.AddKnownType("System.Threading.CompressedStack+CompressedStackRunData", "CompressedStackRunData");
            feature.AddKnownType("System.Threading.DomainCompressedStack", "DomainCompressedStack");
            feature.AddKnownType("System.Threading.EventResetMode", "EventResetMode");
            feature.AddKnownType("System.Threading.EventWaitHandle", "EventWaitHandle");
            feature.AddKnownType("System.Threading.ExecutionContextSwitcher", "ExecutionContextSwitcher");
            feature.AddKnownType("System.Threading.AsyncFlowControl", "AsyncFlowControl");
            feature.AddKnownType("System.Threading.ExecutionContext", "ExecutionContext");
            feature.AddKnownType("System.Threading.ExecutionContext+Reader", "Reader");
            feature.AddKnownType("System.Threading.ExecutionContext+CaptureOptions", "CaptureOptions");
            feature.AddKnownType("System.Threading.HostExecutionContextSwitcher", "HostExecutionContextSwitcher");
            feature.AddKnownType("System.Threading.HostExecutionContext", "HostExecutionContext");
            feature.AddKnownType("System.Threading.IUnknownSafeHandle", "IUnknownSafeHandle");
            feature.AddKnownType("System.Threading.HostExecutionContextManager", "HostExecutionContextManager");
            feature.AddKnownType("System.Threading.LockCookie", "LockCookie");
            feature.AddKnownType("System.Threading.LockRecursionException", "LockRecursionException");
            feature.AddKnownType("System.Threading.ManualResetEvent", "ManualResetEvent");
            feature.AddKnownType("System.Threading.Mutex", "Mutex");
            feature.AddKnownType("System.Threading.Mutex+MutexTryCodeHelper", "MutexTryCodeHelper");
            feature.AddKnownType("System.Threading.Mutex+MutexCleanupInfo", "MutexCleanupInfo");
            feature.AddKnownType("System.Threading.NativeOverlapped", "NativeOverlapped");
            feature.AddKnownType("System.Threading._IOCompletionCallback", "_IOCompletionCallback");
            feature.AddKnownType("System.Threading.OverlappedData", "OverlappedData");
            feature.AddKnownType("System.Threading.Overlapped", "Overlapped");
            feature.AddKnownType("System.Threading.PinnableBufferCache", "PinnableBufferCache");
            feature.AddKnownType("System.Threading.Gen2GcCallback", "Gen2GcCallback");
            feature.AddKnownType("System.Threading.PinnableBufferCacheEventSource", "PinnableBufferCacheEventSource");
            feature.AddKnownType("System.Threading.ReaderWriterLock", "ReaderWriterLock");
            feature.AddKnownType("System.Threading.SemaphoreFullException", "SemaphoreFullException");
            feature.AddKnownType("System.Threading.SynchronizationLockException", "SynchronizationLockException");
            feature.AddKnownType("System.Threading.ThreadHelper", "ThreadHelper");
            feature.AddKnownType("System.Threading.ThreadHandle", "ThreadHandle");
            feature.AddKnownType("System.Threading.Thread", "Thread");
            feature.AddKnownType("System.Threading.StackCrawlMark", "StackCrawlMark");
            feature.AddKnownType("System.Threading.ThreadAbortException", "ThreadAbortException");
            feature.AddKnownType("System.Threading.ThreadInterruptedException", "ThreadInterruptedException");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueue", "ThreadPoolWorkQueue");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueue+SparseArray`1", "SparseArray'1");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueue+WorkStealingQueue", "WorkStealingQueue");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueue+QueueSegment", "QueueSegment");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueueThreadLocals", "ThreadPoolWorkQueueThreadLocals");
            feature.AddKnownType("System.Threading.RegisteredWaitHandleSafe", "RegisteredWaitHandleSafe");
            feature.AddKnownType("System.Threading.RegisteredWaitHandle", "RegisteredWaitHandle");
            feature.AddKnownType("System.Threading.IThreadPoolWorkItem", "IThreadPoolWorkItem");
            feature.AddKnownType("System.Threading.QueueUserWorkItemCallback", "QueueUserWorkItemCallback");
            feature.AddKnownType("System.Threading._ThreadPoolWaitOrTimerCallback", "_ThreadPoolWaitOrTimerCallback");
            feature.AddKnownType("System.Threading.ThreadPriority", "ThreadPriority");
            feature.AddKnownType("System.Threading.ThreadState", "ThreadState");
            feature.AddKnownType("System.Threading.ThreadStateException", "ThreadStateException");
            feature.AddKnownType("System.Threading.ThreadStartException", "ThreadStartException");
            feature.AddKnownType("System.Threading.TimerQueue", "TimerQueue");
            feature.AddKnownType("System.Threading.TimerQueueTimer", "TimerQueueTimer");
            feature.AddKnownType("System.Threading.TimerHolder", "TimerHolder");
            feature.AddKnownType("System.Threading.Timer", "Timer");
            feature.AddKnownType("System.Threading.WaitHandle", "WaitHandle");
            feature.AddKnownType("System.Threading.WaitHandle+OpenExistingResult", "OpenExistingResult");
            feature.AddKnownType("System.Threading.WaitHandleCannotBeOpenedException", "WaitHandleCannotBeOpenedException");
            feature.AddKnownType("System.Threading.ApartmentState", "ApartmentState");
            feature.AddKnownType("System.Threading.SpinLock", "SpinLock");
            feature.AddKnownType("System.Threading.SpinLock+SystemThreading_SpinLockDebugView", "SystemThreading_SpinLockDebugView");
            feature.AddKnownType("System.Threading.SpinWait", "SpinWait");
            feature.AddKnownType("System.Threading.CountdownEvent", "CountdownEvent");
            feature.AddKnownType("System.Threading.CdsSyncEtwBCLProvider", "CdsSyncEtwBCLProvider");
            feature.AddKnownType("System.Threading.LazyThreadSafetyMode", "LazyThreadSafetyMode");
            feature.AddKnownType("System.Threading.ThreadLocal`1", "ThreadLocal'1");
            feature.AddKnownType("System.Threading.SystemThreading_ThreadLocalDebugView`1", "SystemThreading_ThreadLocalDebugView'1");
            feature.AddKnownType("System.Threading.SemaphoreSlim", "SemaphoreSlim");
            feature.AddKnownType("System.Threading.ManualResetEventSlim", "ManualResetEventSlim");
            feature.AddKnownType("System.Threading.CancellationTokenRegistration", "CancellationTokenRegistration");
            feature.AddKnownType("System.Threading.CancellationTokenSource", "CancellationTokenSource");
            feature.AddKnownType("System.Threading.CancellationCallbackCoreWorkArguments", "CancellationCallbackCoreWorkArguments");
            feature.AddKnownType("System.Threading.CancellationCallbackInfo", "CancellationCallbackInfo");
            feature.AddKnownType("System.Threading.SparselyPopulatedArray`1", "SparselyPopulatedArray'1");
            feature.AddKnownType("System.Threading.SparselyPopulatedArrayAddInfo`1", "SparselyPopulatedArrayAddInfo'1");
            feature.AddKnownType("System.Threading.SparselyPopulatedArrayFragment`1", "SparselyPopulatedArrayFragment'1");
            feature.AddKnownType("System.Threading.CancellationToken", "CancellationToken");
            feature.AddKnownType("System.Threading.Tasks.Task`1", "Task'1");
            feature.AddKnownType("System.Threading.Tasks.Task", "Task");
            feature.AddKnownType("System.Threading.Tasks.Task+ContingentProperties", "ContingentProperties");
            feature.AddKnownType("System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1", "SystemThreadingTasks_FutureDebugView'1");
            feature.AddKnownType("System.Threading.Tasks.TaskFactory`1", "TaskFactory'1");
            feature.AddKnownType("System.Threading.Tasks.TaskFactory", "TaskFactory");
            feature.AddKnownType("System.Threading.Tasks.TaskFactory+CompleteOnInvokePromise", "CompleteOnInvokePromise");
            feature.AddKnownType("System.Threading.Tasks.ParallelOptions", "ParallelOptions");
            feature.AddKnownType("System.Threading.Tasks.Parallel+LoopTimer", "LoopTimer");
            feature.AddKnownType("System.Threading.Tasks.IndexRange", "IndexRange");
            feature.AddKnownType("System.Threading.Tasks.RangeWorker", "RangeWorker");
            feature.AddKnownType("System.Threading.Tasks.RangeManager", "RangeManager");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopState", "ParallelLoopState");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopState32", "ParallelLoopState32");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopState64", "ParallelLoopState64");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopStateFlags", "ParallelLoopStateFlags");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopStateFlags32", "ParallelLoopStateFlags32");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopStateFlags64", "ParallelLoopStateFlags64");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopResult", "ParallelLoopResult");
            feature.AddKnownType("System.Threading.Tasks.Shared`1", "Shared'1");
            feature.AddKnownType("System.Threading.Tasks.TaskStatus", "TaskStatus");
            feature.AddKnownType("System.Threading.Tasks.SystemThreadingTasks_TaskDebugView", "SystemThreadingTasks_TaskDebugView");
            feature.AddKnownType("System.Threading.Tasks.ParallelForReplicatingTask", "ParallelForReplicatingTask");
            feature.AddKnownType("System.Threading.Tasks.ParallelForReplicaTask", "ParallelForReplicaTask");
            feature.AddKnownType("System.Threading.Tasks.TaskCreationOptions", "TaskCreationOptions");
            feature.AddKnownType("System.Threading.Tasks.InternalTaskOptions", "InternalTaskOptions");
            feature.AddKnownType("System.Threading.Tasks.TaskContinuationOptions", "TaskContinuationOptions");
            feature.AddKnownType("System.Threading.Tasks.StackGuard", "StackGuard");
            feature.AddKnownType("System.Threading.Tasks.VoidTaskResult", "VoidTaskResult");
            feature.AddKnownType("System.Threading.Tasks.ITaskCompletionAction", "ITaskCompletionAction");
            feature.AddKnownType("System.Threading.Tasks.UnwrapPromise`1", "UnwrapPromise'1");
            feature.AddKnownType("System.Threading.Tasks.ContinuationTaskFromTask", "ContinuationTaskFromTask");
            feature.AddKnownType("System.Threading.Tasks.ContinuationResultTaskFromTask`1", "ContinuationResultTaskFromTask'1");
            feature.AddKnownType("System.Threading.Tasks.ContinuationTaskFromResultTask`1", "ContinuationTaskFromResultTask'1");
            feature.AddKnownType("System.Threading.Tasks.ContinuationResultTaskFromResultTask`2", "ContinuationResultTaskFromResultTask'2");
            feature.AddKnownType("System.Threading.Tasks.TaskContinuation", "TaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.StandardTaskContinuation", "StandardTaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation", "SynchronizationContextAwaitTaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation", "TaskSchedulerAwaitTaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.AwaitTaskContinuation", "AwaitTaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.TaskCanceledException", "TaskCanceledException");
            feature.AddKnownType("System.Threading.Tasks.TaskSchedulerException", "TaskSchedulerException");
            feature.AddKnownType("System.Threading.Tasks.TaskExceptionHolder", "TaskExceptionHolder");
            feature.AddKnownType("System.Threading.Tasks.TaskScheduler", "TaskScheduler");
            feature.AddKnownType("System.Threading.Tasks.TaskScheduler+SystemThreadingTasks_TaskSchedulerDebugView", "SystemThreadingTasks_TaskSchedulerDebugView");
            feature.AddKnownType("System.Threading.Tasks.SynchronizationContextTaskScheduler", "SynchronizationContextTaskScheduler");
            feature.AddKnownType("System.Threading.Tasks.UnobservedTaskExceptionEventArgs", "UnobservedTaskExceptionEventArgs");
            feature.AddKnownType("System.Threading.Tasks.ThreadPoolTaskScheduler", "ThreadPoolTaskScheduler");
            feature.AddKnownType("System.Threading.Tasks.TaskCompletionSource`1", "TaskCompletionSource'1");
            feature.AddKnownType("System.Threading.Tasks.CausalityTraceLevel", "CausalityTraceLevel");
            feature.AddKnownType("System.Threading.Tasks.AsyncCausalityStatus", "AsyncCausalityStatus");
            feature.AddKnownType("System.Threading.Tasks.CausalityRelation", "CausalityRelation");
            feature.AddKnownType("System.Threading.Tasks.CausalitySynchronousWork", "CausalitySynchronousWork");
            feature.AddKnownType("System.Threading.Tasks.ConcurrentExclusiveSchedulerPair", "ConcurrentExclusiveSchedulerPair");
            feature.AddKnownType("System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+DebugView", "DebugView");
            feature.AddKnownType("System.Threading.Tasks.IProducerConsumerQueue`1", "IProducerConsumerQueue'1");
            feature.AddKnownType("System.Threading.Tasks.MultiProducerMultiConsumerQueue`1", "MultiProducerMultiConsumerQueue'1");
            feature.AddKnownType("System.Threading.Tasks.SingleProducerSingleConsumerQueue`1", "SingleProducerSingleConsumerQueue'1");
            feature.AddKnownType("System.Threading.Tasks.SingleProducerSingleConsumerQueue`1+SingleProducerSingleConsumerQueue_DebugView", "SingleProducerSingleConsumerQueue_DebugView'0");
            feature.AddKnownType("System.Threading.Tasks.PaddingFor32", "PaddingFor32");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider", "TplEtwProvider");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider+ForkJoinOperationType", "TplEtwProvider.ForkJoinOperationType");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider+TaskWaitBehavior", "TplEtwProvider.TaskWaitBehavior");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider+Tasks", "TplEtwProvider.Tasks");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider+Keywords", "TplEtwProvider.Keywords");
            feature.AddKnownType("System.Threading.Tasks.BeginEndAwaitableAdapter", "BeginEndAwaitableAdapter");
            feature.AddKnownType("Orleans.GrainCancellationToken,Orleans.Core.Abstractions", "Orleans.GrainCancellationToken");
            feature.AddKnownType("Orleans.GrainCancellationTokenSource,Orleans.Core.Abstractions", "Orleans.GrainCancellationTokenSource");
            feature.AddKnownType("Orleans.Grain,Orleans.Core.Abstractions", "Orleans.Grain");
            feature.AddKnownType("Orleans.Grain`1,Orleans.Core.Abstractions", "Orleans.Grain'1");
            feature.AddKnownType("Orleans.IGrain,Orleans.Core.Abstractions", "Orleans.IGrain");
            feature.AddKnownType("Orleans.IGrainWithGuidKey,Orleans.Core.Abstractions", "Orleans.IGrainWithGuidKey");
            feature.AddKnownType("Orleans.IGrainWithIntegerKey,Orleans.Core.Abstractions", "Orleans.IGrainWithIntegerKey");
            feature.AddKnownType("Orleans.IGrainWithStringKey,Orleans.Core.Abstractions", "Orleans.IGrainWithStringKey");
            feature.AddKnownType("Orleans.IGrainWithGuidCompoundKey,Orleans.Core.Abstractions", "Orleans.IGrainWithGuidCompoundKey");
            feature.AddKnownType("Orleans.IGrainWithIntegerCompoundKey,Orleans.Core.Abstractions", "Orleans.IGrainWithIntegerCompoundKey");
            feature.AddKnownType("Orleans.IGrainCallContext,Orleans.Core.Abstractions", "Orleans.IGrainCallContext");
            feature.AddKnownType("Orleans.IIncomingGrainCallContext,Orleans.Core.Abstractions", "Orleans.IIncomingGrainCallContext");
            feature.AddKnownType("Orleans.IOutgoingGrainCallContext,Orleans.Core.Abstractions", "Orleans.IOutgoingGrainCallContext");
            feature.AddKnownType("Orleans.IIncomingGrainCallFilter,Orleans.Core.Abstractions", "Orleans.IIncomingGrainCallFilter");
            feature.AddKnownType("Orleans.IGrainCallFilter,Orleans.Core.Abstractions", "Orleans.IGrainCallFilter");
            feature.AddKnownType("Orleans.IOutgoingGrainCallFilter,Orleans.Core.Abstractions", "Orleans.IOutgoingGrainCallFilter");
            feature.AddKnownType("Orleans.IGrainFactory,Orleans.Core.Abstractions", "Orleans.IGrainFactory");
            feature.AddKnownType("Orleans.IGrainObserver,Orleans.Core.Abstractions", "Orleans.IGrainObserver");
            feature.AddKnownType("Orleans.Interner`2,Orleans.Core.Abstractions", "Orleans.Interner'2");
            feature.AddKnownType("Orleans.ILifecycleObservable,Orleans.Core.Abstractions", "Orleans.ILifecycleObservable");
            feature.AddKnownType("Orleans.ILifecycleObserver,Orleans.Core.Abstractions", "Orleans.ILifecycleObserver");
            feature.AddKnownType("Orleans.ILifecycleParticipant`1,Orleans.Core.Abstractions", "Orleans.ILifecycleParticipant'1");
            feature.AddKnownType("Orleans.ILifecycleSubject,Orleans.Core.Abstractions", "Orleans.ILifecycleSubject");
            feature.AddKnownType("Orleans.LifecycleExtensions+Observer,Orleans.Core.Abstractions", "Orleans.Observer");
            feature.AddKnownType("Orleans.ImplicitStreamSubscriptionAttribute,Orleans.Core.Abstractions", "Orleans.ImplicitStreamSubscriptionAttribute");
            feature.AddKnownType("Orleans.RegexImplicitStreamSubscriptionAttribute,Orleans.Core.Abstractions", "Orleans.RegexImplicitStreamSubscriptionAttribute");
            feature.AddKnownType("Orleans.IReminderService,Orleans.Core.Abstractions", "Orleans.IReminderService");
            feature.AddKnownType("Orleans.ISystemTarget,Orleans.Core.Abstractions", "Orleans.ISystemTarget");
            feature.AddKnownType("Orleans.ISystemTargetBase,Orleans.Core.Abstractions", "Orleans.ISystemTargetBase");
            feature.AddKnownType("Orleans.IVersionManager,Orleans.Core.Abstractions", "Orleans.IVersionManager");
            feature.AddKnownType("Orleans.IRemindable,Orleans.Core.Abstractions", "Orleans.IRemindable");
            feature.AddKnownType("Orleans.TransactionAttribute,Orleans.Core.Abstractions", "Orleans.TransactionAttribute");
            feature.AddKnownType("Orleans.TransactionOption,Orleans.Core.Abstractions", "Orleans.TransactionOption");
            feature.AddKnownType("Orleans.TransactionOptionAlias,Orleans.Core.Abstractions", "Orleans.TransactionOptionAlias");
            feature.AddKnownType("Orleans.CodeGeneration.GrainSupportClassAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.GrainSupportClassAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.MethodInvokerAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.MethodInvokerAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.GrainReferenceAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.GrainReferenceAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.SerializerAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.SerializerAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.TypeCodeOverrideAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.TypeCodeOverrideAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.MethodIdAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.MethodIdAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.VersionAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.VersionAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.CopierMethodAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.CopierMethodAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.SerializerMethodAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.SerializerMethodAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.DeserializerMethodAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.DeserializerMethodAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.ConsiderForCodeGenerationAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.ConsiderForCodeGenerationAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.KnownTypeAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.KnownTypeAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.GenerateSerializerAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.GenerateSerializerAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.KnownBaseTypeAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.KnownBaseTypeAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.IGrainMethodInvoker,Orleans.Core.Abstractions", "Orleans.CodeGeneration.IGrainMethodInvoker");
            feature.AddKnownType("Orleans.CodeGeneration.IGrainExtensionMethodInvoker,Orleans.Core.Abstractions", "Orleans.CodeGeneration.IGrainExtensionMethodInvoker");
            feature.AddKnownType("Orleans.CodeGeneration.IGrainExtensionMap,Orleans.Core.Abstractions", "Orleans.CodeGeneration.IGrainExtensionMap");
            feature.AddKnownType("Orleans.CodeGeneration.InvokeMethodRequest,Orleans.Core.Abstractions", "Orleans.CodeGeneration.InvokeMethodRequest");
            feature.AddKnownType("Orleans.CodeGeneration.InvokeMethodOptions,Orleans.Core.Abstractions", "Orleans.CodeGeneration.InvokeMethodOptions");
            feature.AddKnownType("Orleans.CodeGeneration.KnownAssemblyAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.KnownAssemblyAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.SkipCodeGenerationAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.SkipCodeGenerationAttribute");
            feature.AddKnownType("Orleans.Concurrency.ReadOnlyAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.ReadOnlyAttribute");
            feature.AddKnownType("Orleans.Concurrency.ReentrantAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.ReentrantAttribute");
            feature.AddKnownType("Orleans.Concurrency.UnorderedAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.UnorderedAttribute");
            feature.AddKnownType("Orleans.Concurrency.StatelessWorkerAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.StatelessWorkerAttribute");
            feature.AddKnownType("Orleans.Concurrency.AlwaysInterleaveAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.AlwaysInterleaveAttribute");
            feature.AddKnownType("Orleans.Concurrency.MayInterleaveAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.MayInterleaveAttribute");
            feature.AddKnownType("Orleans.Concurrency.ImmutableAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.ImmutableAttribute");
            feature.AddKnownType("Orleans.Concurrency.OneWayAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.OneWayAttribute");
            feature.AddKnownType("Orleans.Concurrency.Immutable`1,Orleans.Core.Abstractions", "Orleans.Concurrency.Immutable'1");
            feature.AddKnownType("Orleans.Core.IGrainIdentity,Orleans.Core.Abstractions", "Orleans.Core.IGrainIdentity");
            feature.AddKnownType("Orleans.Core.IStorage`1,Orleans.Core.Abstractions", "Orleans.Core.IStorage'1");
            feature.AddKnownType("Orleans.GrainDirectory.ClusterLocalRegistration,Orleans.Core.Abstractions", "Orleans.GrainDirectory.ClusterLocalRegistration");
            feature.AddKnownType("Orleans.GrainDirectory.GlobalSingleInstanceRegistration,Orleans.Core.Abstractions", "Orleans.GrainDirectory.GlobalSingleInstanceRegistration");
            feature.AddKnownType("Orleans.GrainDirectory.IMultiClusterRegistrationStrategy,Orleans.Core.Abstractions", "Orleans.GrainDirectory.IMultiClusterRegistrationStrategy");
            feature.AddKnownType("Orleans.GrainDirectory.MultiClusterRegistrationStrategy,Orleans.Core.Abstractions", "Orleans.GrainDirectory.MultiClusterRegistrationStrategy");
            feature.AddKnownType("Orleans.LogConsistency.ConnectionIssue,Orleans.Core.Abstractions", "Orleans.LogConsistency.ConnectionIssue");
            feature.AddKnownType("Orleans.LogConsistency.NotificationFailed,Orleans.Core.Abstractions", "Orleans.LogConsistency.NotificationFailed");
            feature.AddKnownType("Orleans.Metadata.FeaturePopulatorAttribute,Orleans.Core.Abstractions", "Orleans.Metadata.FeaturePopulatorAttribute");
            feature.AddKnownType("Orleans.Metadata.GrainClassFeature,Orleans.Core.Abstractions", "Orleans.Metadata.GrainClassFeature");
            feature.AddKnownType("Orleans.Metadata.GrainClassMetadata,Orleans.Core.Abstractions", "Orleans.Metadata.GrainClassMetadata");
            feature.AddKnownType("Orleans.Metadata.GrainInterfaceFeature,Orleans.Core.Abstractions", "Orleans.Metadata.GrainInterfaceFeature");
            feature.AddKnownType("Orleans.Metadata.GrainInterfaceMetadata,Orleans.Core.Abstractions", "Orleans.Metadata.GrainInterfaceMetadata");
            feature.AddKnownType("Orleans.Metadata.IFeaturePopulator`1,Orleans.Core.Abstractions", "Orleans.Metadata.IFeaturePopulator'1");
            feature.AddKnownType("Orleans.MultiCluster.RegistrationAttribute,Orleans.Core.Abstractions", "Orleans.MultiCluster.RegistrationAttribute");
            feature.AddKnownType("Orleans.MultiCluster.GlobalSingleInstanceAttribute,Orleans.Core.Abstractions", "Orleans.MultiCluster.GlobalSingleInstanceAttribute");
            feature.AddKnownType("Orleans.MultiCluster.OneInstancePerClusterAttribute,Orleans.Core.Abstractions", "Orleans.MultiCluster.OneInstancePerClusterAttribute");
            feature.AddKnownType("Orleans.Placement.PlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.PlacementAttribute");
            feature.AddKnownType("Orleans.Placement.RandomPlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.RandomPlacementAttribute");
            feature.AddKnownType("Orleans.Placement.HashBasedPlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.HashBasedPlacementAttribute");
            feature.AddKnownType("Orleans.Placement.PreferLocalPlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.PreferLocalPlacementAttribute");
            feature.AddKnownType("Orleans.Placement.ActivationCountBasedPlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.ActivationCountBasedPlacementAttribute");
            feature.AddKnownType("Orleans.Providers.StorageProviderAttribute,Orleans.Core.Abstractions", "Orleans.Providers.StorageProviderAttribute");
            feature.AddKnownType("Orleans.Providers.LogConsistencyProviderAttribute,Orleans.Core.Abstractions", "Orleans.Providers.LogConsistencyProviderAttribute");
            feature.AddKnownType("Orleans.Runtime.ICancellationSourcesExtension,Orleans.Core.Abstractions", "Orleans.Runtime.ICancellationSourcesExtension");
            feature.AddKnownType("Orleans.Runtime.ClientNotAvailableException,Orleans.Core.Abstractions", "Orleans.Runtime.ClientNotAvailableException");
            feature.AddKnownType("Orleans.Runtime.DeadlockException,Orleans.Core.Abstractions", "Orleans.Runtime.DeadlockException");
            feature.AddKnownType("Orleans.Runtime.GatewayTooBusyException,Orleans.Core.Abstractions", "Orleans.Runtime.GatewayTooBusyException");
            feature.AddKnownType("Orleans.Runtime.GrainExtensionNotInstalledException,Orleans.Core.Abstractions", "Orleans.Runtime.GrainExtensionNotInstalledException");
            feature.AddKnownType("Orleans.Runtime.LimitExceededException,Orleans.Core.Abstractions", "Orleans.Runtime.LimitExceededException");
            feature.AddKnownType("Orleans.Runtime.OrleansConfigurationException,Orleans.Core.Abstractions", "Orleans.Runtime.OrleansConfigurationException");
            feature.AddKnownType("Orleans.Runtime.OrleansException,Orleans.Core.Abstractions", "Orleans.Runtime.OrleansException");
            feature.AddKnownType("Orleans.Runtime.OrleansLifecycleCanceledException,Orleans.Core.Abstractions", "Orleans.Runtime.OrleansLifecycleCanceledException");
            feature.AddKnownType("Orleans.Runtime.OrleansMessageRejectionException,Orleans.Core.Abstractions", "Orleans.Runtime.OrleansMessageRejectionException");
            feature.AddKnownType("Orleans.Runtime.SiloUnavailableException,Orleans.Core.Abstractions", "Orleans.Runtime.SiloUnavailableException");
            feature.AddKnownType("Orleans.Runtime.ActivationAddress,Orleans.Core.Abstractions", "Orleans.Runtime.ActivationAddress");
            feature.AddKnownType("Orleans.Runtime.ActivationId,Orleans.Core.Abstractions", "Orleans.Runtime.ActivationId");
            feature.AddKnownType("Orleans.Runtime.GrainId,Orleans.Core.Abstractions", "Orleans.Runtime.GrainId");
            feature.AddKnownType("Orleans.Runtime.GuidId,Orleans.Core.Abstractions", "Orleans.Runtime.GuidId");
            feature.AddKnownType("Orleans.Runtime.SiloAddress,Orleans.Core.Abstractions", "Orleans.Runtime.SiloAddress");
            feature.AddKnownType("Orleans.Runtime.UniqueIdentifier,Orleans.Core.Abstractions", "Orleans.Runtime.UniqueIdentifier");
            feature.AddKnownType("Orleans.Runtime.UniqueKey,Orleans.Core.Abstractions", "Orleans.Runtime.UniqueKey");
            feature.AddKnownType("Orleans.Runtime.UniqueKey+Category,Orleans.Core.Abstractions", "Orleans.Runtime.Orleans.Runtime.UniqueKey.Category");
            feature.AddKnownType("Orleans.Runtime.IGrainLifecycle,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainLifecycle");
            feature.AddKnownType("Orleans.Runtime.Severity,Orleans.Core.Abstractions", "Orleans.Runtime.Severity");
            feature.AddKnownType("Orleans.Runtime.ActivationCountBasedPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.ActivationCountBasedPlacement");
            feature.AddKnownType("Orleans.Runtime.HashBasedPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.HashBasedPlacement");
            feature.AddKnownType("Orleans.Runtime.PlacementStrategy,Orleans.Core.Abstractions", "Orleans.Runtime.PlacementStrategy");
            feature.AddKnownType("Orleans.Runtime.PreferLocalPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.PreferLocalPlacement");
            feature.AddKnownType("Orleans.Runtime.RandomPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.RandomPlacement");
            feature.AddKnownType("Orleans.Runtime.StatelessWorkerPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.StatelessWorkerPlacement");
            feature.AddKnownType("Orleans.Runtime.GrainReferenceNotBoundException,Orleans.Core.Abstractions", "Orleans.Runtime.GrainReferenceNotBoundException");
            feature.AddKnownType("Orleans.Runtime.GrainReference,Orleans.Core.Abstractions", "Orleans.Runtime.GrainReference");
            feature.AddKnownType("Orleans.Runtime.IActivationData,Orleans.Core.Abstractions", "Orleans.Runtime.IActivationData");
            feature.AddKnownType("Orleans.Runtime.IAddressable,Orleans.Core.Abstractions", "Orleans.Runtime.IAddressable");
            feature.AddKnownType("Orleans.Runtime.IGrainCancellationTokenRuntime,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainCancellationTokenRuntime");
            feature.AddKnownType("Orleans.Runtime.IGrainExtension,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainExtension");
            feature.AddKnownType("Orleans.Runtime.IGrainReferenceRuntime,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainReferenceRuntime");
            feature.AddKnownType("Orleans.Runtime.IGrainRuntime,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainRuntime");
            feature.AddKnownType("Orleans.Runtime.IGrainTimer,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainTimer");
            feature.AddKnownType("Orleans.Runtime.IGrainReminder,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainReminder");
            feature.AddKnownType("Orleans.Runtime.TickStatus,Orleans.Core.Abstractions", "Orleans.Runtime.TickStatus");
            feature.AddKnownType("Orleans.Runtime.ReminderException,Orleans.Core.Abstractions", "Orleans.Runtime.ReminderException");
            feature.AddKnownType("Orleans.Runtime.IKeyedService`2,Orleans.Core.Abstractions", "Orleans.Runtime.IKeyedService'2");
            feature.AddKnownType("Orleans.Runtime.IKeyedServiceCollection`2,Orleans.Core.Abstractions", "Orleans.Runtime.IKeyedServiceCollection'2");
            feature.AddKnownType("Orleans.Serialization.IOnDeserialized,Orleans.Core.Abstractions", "Orleans.Serialization.IOnDeserialized");
            feature.AddKnownType("Orleans.Serialization.IBinaryTokenStreamReader,Orleans.Core.Abstractions", "Orleans.Serialization.IBinaryTokenStreamReader");
            feature.AddKnownType("Orleans.Serialization.IBinaryTokenStreamWriter,Orleans.Core.Abstractions", "Orleans.Serialization.IBinaryTokenStreamWriter");
            feature.AddKnownType("Orleans.Serialization.IFieldUtils,Orleans.Core.Abstractions", "Orleans.Serialization.IFieldUtils");
            feature.AddKnownType("Orleans.Serialization.ISerializerContext,Orleans.Core.Abstractions", "Orleans.Serialization.ISerializerContext");
            feature.AddKnownType("Orleans.Serialization.ICopyContext,Orleans.Core.Abstractions", "Orleans.Serialization.ICopyContext");
            feature.AddKnownType("Orleans.Serialization.ISerializationContext,Orleans.Core.Abstractions", "Orleans.Serialization.ISerializationContext");
            feature.AddKnownType("Orleans.Serialization.IDeserializationContext,Orleans.Core.Abstractions", "Orleans.Serialization.IDeserializationContext");
            feature.AddKnownType("Orleans.Serialization.SerializerMethods,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerMethods");
            feature.AddKnownType("Orleans.Serialization.SerializerFeature,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerFeature");
            feature.AddKnownType("Orleans.Serialization.SerializerTypeMetadata,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerTypeMetadata");
            feature.AddKnownType("Orleans.Serialization.SerializerDelegateMetadata,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerDelegateMetadata");
            feature.AddKnownType("Orleans.Serialization.SerializerKnownTypeMetadata,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerKnownTypeMetadata");
            feature.AddKnownType("Orleans.Services.IGrainService,Orleans.Core.Abstractions", "Orleans.Services.IGrainService");
            feature.AddKnownType("Orleans.Services.IGrainServiceClient`1,Orleans.Core.Abstractions", "Orleans.Services.IGrainServiceClient'1");
            feature.AddKnownType("Orleans.Statistics.IAppEnvironmentStatistics,Orleans.Core.Abstractions", "Orleans.Statistics.IAppEnvironmentStatistics");
            feature.AddKnownType("Orleans.Statistics.IHostEnvironmentStatistics,Orleans.Core.Abstractions", "Orleans.Statistics.IHostEnvironmentStatistics");
            feature.AddKnownType("Orleans.Streams.IAsyncBatchObservable`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncBatchObservable'1");
            feature.AddKnownType("Orleans.Streams.SequentialItem`1,Orleans.Core.Abstractions", "Orleans.Streams.SequentialItem'1");
            feature.AddKnownType("Orleans.Streams.IAsyncBatchObserver`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncBatchObserver'1");
            feature.AddKnownType("Orleans.Streams.IAsyncBatchProducer`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncBatchProducer'1");
            feature.AddKnownType("Orleans.Streams.IAsyncObservable`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncObservable'1");
            feature.AddKnownType("Orleans.Streams.IAsyncObserver`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncObserver'1");
            feature.AddKnownType("Orleans.Streams.IAsyncStream`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncStream'1");
            feature.AddKnownType("Orleans.Streams.IStreamIdentity,Orleans.Core.Abstractions", "Orleans.Streams.IStreamIdentity");
            feature.AddKnownType("Orleans.Streams.StreamSequenceToken,Orleans.Core.Abstractions", "Orleans.Streams.StreamSequenceToken");
            feature.AddKnownType("Orleans.Streams.StreamSubscriptionHandle`1,Orleans.Core.Abstractions", "Orleans.Streams.StreamSubscriptionHandle'1");
            feature.AddKnownType("Orleans.Streams.GenericAsyncObserver`1,Orleans.Core.Abstractions", "Orleans.Streams.GenericAsyncObserver'1");
            feature.AddKnownType("Orleans.Streams.GenericAsyncBatchObserver`1,Orleans.Core.Abstractions", "Orleans.Streams.GenericAsyncBatchObserver'1");
            feature.AddKnownType("Orleans.Streams.AllStreamNamespacesPredicate,Orleans.Core.Abstractions", "Orleans.Streams.AllStreamNamespacesPredicate");
            feature.AddKnownType("Orleans.Streams.ExactMatchStreamNamespacePredicate,Orleans.Core.Abstractions", "Orleans.Streams.ExactMatchStreamNamespacePredicate");
            feature.AddKnownType("Orleans.Streams.IStreamNamespacePredicate,Orleans.Core.Abstractions", "Orleans.Streams.IStreamNamespacePredicate");
            feature.AddKnownType("Orleans.Streams.RegexStreamNamespacePredicate,Orleans.Core.Abstractions", "Orleans.Streams.RegexStreamNamespacePredicate");
            feature.AddKnownType("Orleans.Streams.IStreamProvider,Orleans.Core.Abstractions", "Orleans.Streams.IStreamProvider");
            feature.AddKnownType("Orleans.Streams.Core.IStreamSubscriptionHandleFactory,Orleans.Core.Abstractions", "Orleans.Streams.Core.IStreamSubscriptionHandleFactory");
            feature.AddKnownType("Orleans.Streams.Core.IStreamSubscriptionObserver,Orleans.Core.Abstractions", "Orleans.Streams.Core.IStreamSubscriptionObserver");
            feature.AddKnownType("Orleans.Timers.IReminderRegistry,Orleans.Core.Abstractions", "Orleans.Timers.IReminderRegistry");
            feature.AddKnownType("Orleans.Timers.ITimerRegistry,Orleans.Core.Abstractions", "Orleans.Timers.ITimerRegistry");
            feature.AddKnownType("Orleans.Versions.IVersionStore,Orleans.Core.Abstractions", "Orleans.Versions.IVersionStore");
            feature.AddKnownType("Orleans.Versions.Compatibility.AllVersionsCompatible,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.AllVersionsCompatible");
            feature.AddKnownType("Orleans.Versions.Compatibility.BackwardCompatible,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.BackwardCompatible");
            feature.AddKnownType("Orleans.Versions.Compatibility.ICompatibilityDirector,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.ICompatibilityDirector");
            feature.AddKnownType("Orleans.Versions.Compatibility.CompatibilityStrategy,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.CompatibilityStrategy");
            feature.AddKnownType("Orleans.Versions.Compatibility.StrictVersionCompatible,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.StrictVersionCompatible");
            feature.AddKnownType("Orleans.Versions.Selector.AllCompatibleVersions,Orleans.Core.Abstractions", "Orleans.Versions.Selector.AllCompatibleVersions");
            feature.AddKnownType("Orleans.Versions.Selector.IVersionSelector,Orleans.Core.Abstractions", "Orleans.Versions.Selector.IVersionSelector");
            feature.AddKnownType("Orleans.Versions.Selector.VersionSelectorStrategy,Orleans.Core.Abstractions", "Orleans.Versions.Selector.VersionSelectorStrategy");
            feature.AddKnownType("Orleans.Versions.Selector.LatestVersion,Orleans.Core.Abstractions", "Orleans.Versions.Selector.LatestVersion");
            feature.AddKnownType("Orleans.Versions.Selector.MinimumVersion,Orleans.Core.Abstractions", "Orleans.Versions.Selector.MinimumVersion");
            feature.AddKnownType("System.Buffers.ArrayPool`1,System.Buffers", "ArrayPool'1");
            feature.AddKnownType("System.Buffers.ArrayPoolEventSource,System.Buffers", "ArrayPoolEventSource");
            feature.AddKnownType("System.Buffers.ArrayPoolEventSource+BufferAllocatedReason,System.Buffers", "BufferAllocatedReason");
            feature.AddKnownType("System.Buffers.DefaultArrayPool`1,System.Buffers", "DefaultArrayPool'1");
            feature.AddKnownType("System.Buffers.DefaultArrayPool`1+Bucket,System.Buffers", "Bucket'0");
            feature.AddKnownType("System.Runtime.CompilerServices.__BlockReflectionAttribute,System.Buffers", "__BlockReflectionAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeNCryptHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafePipeHandle,System.Core", "Microsoft.Win32.SafeHandles.SafePipeHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle");
            feature.AddKnownType("System.Collections.Generic.HashSet`1,System.Core", "HashSet'1");
            feature.AddKnownType("System.Collections.Generic.HashSet`1+Enumerator,System.Core", "HashSet'1.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.HashSetDebugView`1,System.Core", "HashSetDebugView'1");
            feature.AddKnownType("System.Diagnostics.EventSchemaTraceListener,System.Core", "EventSchemaTraceListener");
            feature.AddKnownType("System.Diagnostics.TraceLogRetentionOption,System.Core", "TraceLogRetentionOption");
            feature.AddKnownType("System.Diagnostics.UnescapedXmlDiagnosticData,System.Core", "UnescapedXmlDiagnosticData");
            feature.AddKnownType("System.Diagnostics.Eventing.EventDescriptor,System.Core", "EventDescriptor");
            feature.AddKnownType("System.Diagnostics.Eventing.EventProvider,System.Core", "EventProvider");
            feature.AddKnownType("System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode,System.Core", "EventProvider.WriteEventErrorCode");
            feature.AddKnownType("System.Diagnostics.Eventing.EventProviderTraceListener,System.Core", "EventProviderTraceListener");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventBookmark,System.Core", "EventBookmark");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogType,System.Core", "EventLogType");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogIsolation,System.Core", "EventLogIsolation");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogMode,System.Core", "EventLogMode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogConfiguration,System.Core", "EventLogConfiguration");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogLink,System.Core", "EventLogLink");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogStatus,System.Core", "EventLogStatus");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventProperty,System.Core", "EventProperty");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogPropertySelector,System.Core", "EventLogPropertySelector");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventRecord,System.Core", "EventRecord");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventKeyword,System.Core", "EventKeyword");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLevel,System.Core", "EventLevel");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogRecord,System.Core", "EventLogRecord");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogReader,System.Core", "EventLogReader");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogWatcher,System.Core", "EventLogWatcher");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs,System.Core", "EventRecordWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogQuery,System.Core", "EventLogQuery");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.SessionAuthentication,System.Core", "SessionAuthentication");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.PathType,System.Core", "PathType");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogSession,System.Core", "EventLogSession");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventMetadata,System.Core", "EventMetadata");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventOpcode,System.Core", "EventOpcode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventTask,System.Core", "EventTask");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogException,System.Core", "EventLogException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogNotFoundException,System.Core", "EventLogNotFoundException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogReadingException,System.Core", "EventLogReadingException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException,System.Core", "EventLogProviderDisabledException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogInvalidDataException,System.Core", "EventLogInvalidDataException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogInformation,System.Core", "EventLogInformation");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.ProviderMetadata,System.Core", "ProviderMetadata");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventLevel,System.Core", "StandardEventLevel");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventTask,System.Core", "StandardEventTask");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventOpcode,System.Core", "StandardEventOpcode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventKeywords,System.Core", "StandardEventKeywords");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterData,System.Core", "CounterData");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet,System.Core", "CounterSetInstanceCounterDataSet");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSet,System.Core", "CounterSet");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstance,System.Core", "CounterSetInstance");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstanceType,System.Core", "CounterSetInstanceType");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterType,System.Core", "CounterType");
            feature.AddKnownType("System.Dynamic.BinaryOperationBinder,System.Core", "BinaryOperationBinder");
            feature.AddKnownType("System.Dynamic.BindingRestrictions,System.Core", "BindingRestrictions");
            feature.AddKnownType("System.Dynamic.BindingRestrictions+BindingRestrictionsProxy,System.Core", "BindingRestrictionsProxy");
            feature.AddKnownType("System.Dynamic.CallInfo,System.Core", "CallInfo");
            feature.AddKnownType("System.Dynamic.ConvertBinder,System.Core", "ConvertBinder");
            feature.AddKnownType("System.Dynamic.CreateInstanceBinder,System.Core", "CreateInstanceBinder");
            feature.AddKnownType("System.Dynamic.DeleteIndexBinder,System.Core", "DeleteIndexBinder");
            feature.AddKnownType("System.Dynamic.DeleteMemberBinder,System.Core", "DeleteMemberBinder");
            feature.AddKnownType("System.Dynamic.DynamicMetaObject,System.Core", "DynamicMetaObject");
            feature.AddKnownType("System.Dynamic.DynamicMetaObjectBinder,System.Core", "DynamicMetaObjectBinder");
            feature.AddKnownType("System.Dynamic.DynamicObject,System.Core", "DynamicObject");
            feature.AddKnownType("System.Dynamic.ExpandoObject,System.Core", "ExpandoObject");
            feature.AddKnownType("System.Dynamic.GetIndexBinder,System.Core", "GetIndexBinder");
            feature.AddKnownType("System.Dynamic.GetMemberBinder,System.Core", "GetMemberBinder");
            feature.AddKnownType("System.Dynamic.IDynamicMetaObjectProvider,System.Core", "IDynamicMetaObjectProvider");
            feature.AddKnownType("System.Dynamic.IInvokeOnGetBinder,System.Core", "IInvokeOnGetBinder");
            feature.AddKnownType("System.Dynamic.InvokeBinder,System.Core", "InvokeBinder");
            feature.AddKnownType("System.Dynamic.InvokeMemberBinder,System.Core", "InvokeMemberBinder");
            feature.AddKnownType("System.Dynamic.SetIndexBinder,System.Core", "SetIndexBinder");
            feature.AddKnownType("System.Dynamic.SetMemberBinder,System.Core", "SetMemberBinder");
            feature.AddKnownType("System.Dynamic.UnaryOperationBinder,System.Core", "UnaryOperationBinder");
            feature.AddKnownType("System.IO.HandleInheritability,System.Core", "HandleInheritability");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.Core", "MemoryMappedFileAccess");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.Core", "MemoryMappedFileOptions");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFile,System.Core", "MemoryMappedFile");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedViewAccessor,System.Core", "MemoryMappedViewAccessor");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedViewStream,System.Core", "MemoryMappedViewStream");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.Core", "MemoryMappedFileRights");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.Core", "MemoryMappedFileSecurity");
            feature.AddKnownType("System.IO.Pipes.PipeDirection,System.Core", "PipeDirection");
            feature.AddKnownType("System.IO.Pipes.PipeTransmissionMode,System.Core", "PipeTransmissionMode");
            feature.AddKnownType("System.IO.Pipes.PipeOptions,System.Core", "PipeOptions");
            feature.AddKnownType("System.IO.Pipes.AnonymousPipeServerStream,System.Core", "AnonymousPipeServerStream");
            feature.AddKnownType("System.IO.Pipes.AnonymousPipeClientStream,System.Core", "AnonymousPipeClientStream");
            feature.AddKnownType("System.IO.Pipes.NamedPipeServerStream,System.Core", "NamedPipeServerStream");
            feature.AddKnownType("System.IO.Pipes.NamedPipeClientStream,System.Core", "NamedPipeClientStream");
            feature.AddKnownType("System.IO.Pipes.PipeStream,System.Core", "PipeStream");
            feature.AddKnownType("System.IO.Pipes.PipeAccessRights,System.Core", "PipeAccessRights");
            feature.AddKnownType("System.IO.Pipes.PipeAccessRule,System.Core", "PipeAccessRule");
            feature.AddKnownType("System.IO.Pipes.PipeAuditRule,System.Core", "PipeAuditRule");
            feature.AddKnownType("System.IO.Pipes.PipeSecurity,System.Core", "PipeSecurity");
            feature.AddKnownType("System.Linq.IQueryable,System.Core", "IQueryable");
            feature.AddKnownType("System.Linq.IQueryable`1,System.Core", "IQueryable'1");
            feature.AddKnownType("System.Linq.IQueryProvider,System.Core", "IQueryProvider");
            feature.AddKnownType("System.Linq.IOrderedQueryable,System.Core", "IOrderedQueryable");
            feature.AddKnownType("System.Linq.IOrderedQueryable`1,System.Core", "IOrderedQueryable'1");
            feature.AddKnownType("System.Linq.IOrderedEnumerable`1,System.Core", "IOrderedEnumerable'1");
            feature.AddKnownType("System.Linq.IGrouping`2,System.Core", "IGrouping'2");
            feature.AddKnownType("System.Linq.ILookup`2,System.Core", "ILookup'2");
            feature.AddKnownType("System.Linq.Lookup`2,System.Core", "Lookup'2");
            feature.AddKnownType("System.Linq.EnumerableQuery,System.Core", "EnumerableQuery");
            feature.AddKnownType("System.Linq.EnumerableQuery`1,System.Core", "EnumerableQuery'1");
            feature.AddKnownType("System.Linq.EnumerableExecutor,System.Core", "EnumerableExecutor");
            feature.AddKnownType("System.Linq.EnumerableExecutor`1,System.Core", "EnumerableExecutor'1");
            feature.AddKnownType("System.Linq.ParallelMergeOptions,System.Core", "ParallelMergeOptions");
            feature.AddKnownType("System.Linq.ParallelExecutionMode,System.Core", "ParallelExecutionMode");
            feature.AddKnownType("System.Linq.OrderedParallelQuery`1,System.Core", "OrderedParallelQuery'1");
            feature.AddKnownType("System.Linq.ParallelQuery,System.Core", "ParallelQuery");
            feature.AddKnownType("System.Linq.ParallelQuery`1,System.Core", "ParallelQuery'1");
            feature.AddKnownType("System.Linq.Expressions.BinaryExpression,System.Core", "BinaryExpression");
            feature.AddKnownType("System.Linq.Expressions.Expression,System.Core", "Expression");
            feature.AddKnownType("System.Linq.Expressions.Expression+BinaryExpressionProxy,System.Core", "BinaryExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+BlockExpressionProxy,System.Core", "BlockExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+CatchBlockProxy,System.Core", "CatchBlockProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+ConditionalExpressionProxy,System.Core", "ConditionalExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+ConstantExpressionProxy,System.Core", "ConstantExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+DebugInfoExpressionProxy,System.Core", "DebugInfoExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+DefaultExpressionProxy,System.Core", "DefaultExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+DynamicExpressionProxy,System.Core", "DynamicExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+GotoExpressionProxy,System.Core", "GotoExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+IndexExpressionProxy,System.Core", "IndexExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+InvocationExpressionProxy,System.Core", "InvocationExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+LabelExpressionProxy,System.Core", "LabelExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+LambdaExpressionProxy,System.Core", "LambdaExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+ListInitExpressionProxy,System.Core", "ListInitExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+LoopExpressionProxy,System.Core", "LoopExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+MemberExpressionProxy,System.Core", "MemberExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+MemberInitExpressionProxy,System.Core", "MemberInitExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+MethodCallExpressionProxy,System.Core", "MethodCallExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+NewArrayExpressionProxy,System.Core", "NewArrayExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+NewExpressionProxy,System.Core", "NewExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+ParameterExpressionProxy,System.Core", "ParameterExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+RuntimeVariablesExpressionProxy,System.Core", "RuntimeVariablesExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+SwitchCaseProxy,System.Core", "SwitchCaseProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+SwitchExpressionProxy,System.Core", "SwitchExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+TryExpressionProxy,System.Core", "TryExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+TypeBinaryExpressionProxy,System.Core", "TypeBinaryExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+UnaryExpressionProxy,System.Core", "UnaryExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression`1,System.Core", "Expression'1");
            feature.AddKnownType("System.Linq.Expressions.BlockExpression,System.Core", "BlockExpression");
            feature.AddKnownType("System.Linq.Expressions.CatchBlock,System.Core", "CatchBlock");
            feature.AddKnownType("System.Linq.Expressions.ConditionalExpression,System.Core", "ConditionalExpression");
            feature.AddKnownType("System.Linq.Expressions.ConstantExpression,System.Core", "ConstantExpression");
            feature.AddKnownType("System.Linq.Expressions.DebugInfoExpression,System.Core", "DebugInfoExpression");
            feature.AddKnownType("System.Linq.Expressions.DefaultExpression,System.Core", "DefaultExpression");
            feature.AddKnownType("System.Linq.Expressions.DynamicExpression,System.Core", "DynamicExpression");
            feature.AddKnownType("System.Linq.Expressions.ElementInit,System.Core", "ElementInit");
            feature.AddKnownType("System.Linq.Expressions.ExpressionType,System.Core", "ExpressionType");
            feature.AddKnownType("System.Linq.Expressions.ExpressionVisitor,System.Core", "ExpressionVisitor");
            feature.AddKnownType("System.Linq.Expressions.DynamicExpressionVisitor,System.Core", "DynamicExpressionVisitor");
            feature.AddKnownType("System.Linq.Expressions.GotoExpressionKind,System.Core", "GotoExpressionKind");
            feature.AddKnownType("System.Linq.Expressions.GotoExpression,System.Core", "GotoExpression");
            feature.AddKnownType("System.Linq.Expressions.IArgumentProvider,System.Core", "IArgumentProvider");
            feature.AddKnownType("System.Linq.Expressions.IDynamicExpression,System.Core", "IDynamicExpression");
            feature.AddKnownType("System.Linq.Expressions.IndexExpression,System.Core", "IndexExpression");
            feature.AddKnownType("System.Linq.Expressions.InvocationExpression,System.Core", "InvocationExpression");
            feature.AddKnownType("System.Linq.Expressions.LabelExpression,System.Core", "LabelExpression");
            feature.AddKnownType("System.Linq.Expressions.LabelTarget,System.Core", "LabelTarget");
            feature.AddKnownType("System.Linq.Expressions.LambdaExpression,System.Core", "LambdaExpression");
            feature.AddKnownType("System.Linq.Expressions.ListInitExpression,System.Core", "ListInitExpression");
            feature.AddKnownType("System.Linq.Expressions.LoopExpression,System.Core", "LoopExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberAssignment,System.Core", "MemberAssignment");
            feature.AddKnownType("System.Linq.Expressions.MemberBindingType,System.Core", "MemberBindingType");
            feature.AddKnownType("System.Linq.Expressions.MemberBinding,System.Core", "MemberBinding");
            feature.AddKnownType("System.Linq.Expressions.MemberExpression,System.Core", "MemberExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberInitExpression,System.Core", "MemberInitExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberListBinding,System.Core", "MemberListBinding");
            feature.AddKnownType("System.Linq.Expressions.MemberMemberBinding,System.Core", "MemberMemberBinding");
            feature.AddKnownType("System.Linq.Expressions.MethodCallExpression,System.Core", "MethodCallExpression");
            feature.AddKnownType("System.Linq.Expressions.NewArrayExpression,System.Core", "NewArrayExpression");
            feature.AddKnownType("System.Linq.Expressions.NewExpression,System.Core", "NewExpression");
            feature.AddKnownType("System.Linq.Expressions.ParameterExpression,System.Core", "ParameterExpression");
            feature.AddKnownType("System.Linq.Expressions.RuntimeVariablesExpression,System.Core", "RuntimeVariablesExpression");
            feature.AddKnownType("System.Linq.Expressions.SwitchCase,System.Core", "SwitchCase");
            feature.AddKnownType("System.Linq.Expressions.SwitchExpression,System.Core", "SwitchExpression");
            feature.AddKnownType("System.Linq.Expressions.SymbolDocumentInfo,System.Core", "SymbolDocumentInfo");
            feature.AddKnownType("System.Linq.Expressions.TryExpression,System.Core", "TryExpression");
            feature.AddKnownType("System.Linq.Expressions.TypeBinaryExpression,System.Core", "TypeBinaryExpression");
            feature.AddKnownType("System.Linq.Expressions.UnaryExpression,System.Core", "UnaryExpression");
            feature.AddKnownType("System.Management.Instrumentation.ManagementEntityAttribute,System.Core", "ManagementEntityAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementHostingModel,System.Core", "ManagementHostingModel");
            feature.AddKnownType("System.Management.Instrumentation.WmiConfigurationAttribute,System.Core", "WmiConfigurationAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementMemberAttribute,System.Core", "ManagementMemberAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementNewInstanceAttribute,System.Core", "ManagementNewInstanceAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementBindAttribute,System.Core", "ManagementBindAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementCreateAttribute,System.Core", "ManagementCreateAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementRemoveAttribute,System.Core", "ManagementRemoveAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementEnumeratorAttribute,System.Core", "ManagementEnumeratorAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementProbeAttribute,System.Core", "ManagementProbeAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementTaskAttribute,System.Core", "ManagementTaskAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementKeyAttribute,System.Core", "ManagementKeyAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementReferenceAttribute,System.Core", "ManagementReferenceAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementConfigurationType,System.Core", "ManagementConfigurationType");
            feature.AddKnownType("System.Management.Instrumentation.ManagementConfigurationAttribute,System.Core", "ManagementConfigurationAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementCommitAttribute,System.Core", "ManagementCommitAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementNameAttribute,System.Core", "ManagementNameAttribute");
            feature.AddKnownType("System.Management.Instrumentation.InstrumentationBaseException,System.Core", "InstrumentationBaseException");
            feature.AddKnownType("System.Management.Instrumentation.InstrumentationException,System.Core", "InstrumentationException");
            feature.AddKnownType("System.Management.Instrumentation.InstanceNotFoundException,System.Core", "InstanceNotFoundException");
            feature.AddKnownType("System.Runtime.CompilerServices.ExecutionScope,System.Core", "ExecutionScope");
            feature.AddKnownType("System.Runtime.CompilerServices.DynamicAttribute,System.Core", "DynamicAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSite,System.Core", "CallSite");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSite`1,System.Core", "CallSite'1");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSiteBinder,System.Core", "CallSiteBinder");
            feature.AddKnownType("System.Runtime.CompilerServices.RuleCache`1,System.Core", "RuleCache'1");
            feature.AddKnownType("System.Runtime.CompilerServices.Closure,System.Core", "Closure");
            feature.AddKnownType("System.Runtime.CompilerServices.DebugInfoGenerator,System.Core", "DebugInfoGenerator");
            feature.AddKnownType("System.Runtime.CompilerServices.IRuntimeVariables,System.Core", "IRuntimeVariables");
            feature.AddKnownType("System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1,System.Core", "ReadOnlyCollectionBuilder'1");
            feature.AddKnownType("System.Runtime.CompilerServices.StrongBox`1,System.Core", "StrongBox'1");
            feature.AddKnownType("System.Runtime.CompilerServices.IStrongBox,System.Core", "IStrongBox");
            feature.AddKnownType("System.Runtime.InteropServices.ComAwareEventInfo,System.Core", "ComAwareEventInfo");
            feature.AddKnownType("System.Security.ManifestKinds,System.Core", "ManifestKinds");
            feature.AddKnownType("System.Security.Cryptography.AesCryptoServiceProvider,System.Core", "AesCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.AesManaged,System.Core", "AesManaged");
            feature.AddKnownType("System.Security.Cryptography.CngAlgorithm,System.Core", "CngAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.CngAlgorithmGroup,System.Core", "CngAlgorithmGroup");
            feature.AddKnownType("System.Security.Cryptography.CngKeyHandleOpenOptions,System.Core", "CngKeyHandleOpenOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKey,System.Core", "CngKey");
            feature.AddKnownType("System.Security.Cryptography.CngKeyBlobFormat,System.Core", "CngKeyBlobFormat");
            feature.AddKnownType("System.Security.Cryptography.CngKeyCreationParameters,System.Core", "CngKeyCreationParameters");
            feature.AddKnownType("System.Security.Cryptography.CngProperty,System.Core", "CngProperty");
            feature.AddKnownType("System.Security.Cryptography.CngPropertyCollection,System.Core", "CngPropertyCollection");
            feature.AddKnownType("System.Security.Cryptography.CngProvider,System.Core", "CngProvider");
            feature.AddKnownType("System.Security.Cryptography.CngUIPolicy,System.Core", "CngUIPolicy");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellman,System.Core", "ECDiffieHellman");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Core", "ECDiffieHellmanPublicKey");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction,System.Core", "ECDiffieHellmanKeyDerivationFunction");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanCng,System.Core", "ECDiffieHellmanCng");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanCngPublicKey,System.Core", "ECDiffieHellmanCngPublicKey");
            feature.AddKnownType("System.Security.Cryptography.ECDsa,System.Core", "ECDsa");
            feature.AddKnownType("System.Security.Cryptography.ECDsaCng,System.Core", "ECDsaCng");
            feature.AddKnownType("System.Security.Cryptography.ECKeyXmlFormat,System.Core", "ECKeyXmlFormat");
            feature.AddKnownType("System.Security.Cryptography.ManifestSignatureInformation,System.Core", "ManifestSignatureInformation");
            feature.AddKnownType("System.Security.Cryptography.ManifestSignatureInformationCollection,System.Core", "ManifestSignatureInformationCollection");
            feature.AddKnownType("System.Security.Cryptography.MD5Cng,System.Core", "MD5Cng");
            feature.AddKnownType("System.Security.Cryptography.CngExportPolicies,System.Core", "CngExportPolicies");
            feature.AddKnownType("System.Security.Cryptography.CngKeyCreationOptions,System.Core", "CngKeyCreationOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKeyOpenOptions,System.Core", "CngKeyOpenOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKeyUsages,System.Core", "CngKeyUsages");
            feature.AddKnownType("System.Security.Cryptography.CngPropertyOptions,System.Core", "CngPropertyOptions");
            feature.AddKnownType("System.Security.Cryptography.CngUIProtectionLevels,System.Core", "CngUIProtectionLevels");
            feature.AddKnownType("System.Security.Cryptography.RSACng,System.Core", "RSACng");
            feature.AddKnownType("System.Security.Cryptography.SHA1Cng,System.Core", "SHA1Cng");
            feature.AddKnownType("System.Security.Cryptography.SHA256Cng,System.Core", "SHA256Cng");
            feature.AddKnownType("System.Security.Cryptography.SHA256CryptoServiceProvider,System.Core", "SHA256CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA384Cng,System.Core", "SHA384Cng");
            feature.AddKnownType("System.Security.Cryptography.SHA384CryptoServiceProvider,System.Core", "SHA384CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA512Cng,System.Core", "SHA512Cng");
            feature.AddKnownType("System.Security.Cryptography.SHA512CryptoServiceProvider,System.Core", "SHA512CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SignatureVerificationResult,System.Core", "SignatureVerificationResult");
            feature.AddKnownType("System.Security.Cryptography.StrongNameSignatureInformation,System.Core", "StrongNameSignatureInformation");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation,System.Core", "AuthenticodeSignatureInformation");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.TimestampInformation,System.Core", "TimestampInformation");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.TrustStatus,System.Core", "TrustStatus");
            feature.AddKnownType("System.Threading.LockRecursionPolicy,System.Core", "LockRecursionPolicy");
            feature.AddKnownType("System.Threading.ReaderWriterLockSlim,System.Core", "ReaderWriterLockSlim");
            feature.AddKnownType("System.Data.Common.DbColumn,System.Data.Common", "DbColumn");
            feature.AddKnownType("System.Data.Common.IDbColumnSchemaGenerator,System.Data.Common", "IDbColumnSchemaGenerator");
            feature.AddKnownType("System.Data.Common.DataRowDbColumn,System.Data.Common", "DataRowDbColumn");
            feature.AddKnownType("System.Data.DataRowComparer`1,System.Data.DataSetExtensions", "DataRowComparer'1");
            feature.AddKnownType("System.Data.EnumerableRowCollection,System.Data.DataSetExtensions", "EnumerableRowCollection");
            feature.AddKnownType("System.Data.EnumerableRowCollection`1,System.Data.DataSetExtensions", "EnumerableRowCollection'1");
            feature.AddKnownType("System.Data.OrderedEnumerableRowCollection`1,System.Data.DataSetExtensions", "OrderedEnumerableRowCollection'1");
            feature.AddKnownType("System.Data.TypedTableBase`1,System.Data.DataSetExtensions", "TypedTableBase'1");
            feature.AddKnownType("SNINativeMethodWrapper,System.Data", "<global namespace>.SNINativeMethodWrapper");
            feature.AddKnownType("SNINativeMethodWrapper+QTypes,System.Data", "<global namespace>.QTypes");
            feature.AddKnownType("SNINativeMethodWrapper+ProviderEnum,System.Data", "<global namespace>.ProviderEnum");
            feature.AddKnownType("SNINativeMethodWrapper+IOType,System.Data", "<global namespace>.IOType");
            feature.AddKnownType("SNINativeMethodWrapper+ConsumerNumber,System.Data", "<global namespace>.ConsumerNumber");
            feature.AddKnownType("SNINativeMethodWrapper+ConsumerInfo,System.Data", "<global namespace>.ConsumerInfo");
            feature.AddKnownType("SNINativeMethodWrapper+SNI_Error,System.Data", "<global namespace>.SNI_Error");
            feature.AddKnownType("Win32NativeMethods,System.Data", "<global namespace>.Win32NativeMethods");
            feature.AddKnownType("NativeOledbWrapper,System.Data", "<global namespace>.NativeOledbWrapper");
            feature.AddKnownType("AdalException,System.Data", "<global namespace>.AdalException");
            feature.AddKnownType("ADALNativeWrapper,System.Data", "<global namespace>.ADALNativeWrapper");
            feature.AddKnownType("Sni_Consumer_Info,System.Data", "<global namespace>.Sni_Consumer_Info");
            feature.AddKnownType("SNI_ConnWrapper,System.Data", "<global namespace>.SNI_ConnWrapper");
            feature.AddKnownType("SNI_Packet_IOType,System.Data", "<global namespace>.SNI_Packet_IOType");
            feature.AddKnownType("ConsumerNum,System.Data", "<global namespace>.ConsumerNum");
            feature.AddKnownType("_GUID,System.Data", "<global namespace>._GUID");
            feature.AddKnownType("SNI_CLIENT_CONSUMER_INFO,System.Data", "<global namespace>.SNI_CLIENT_CONSUMER_INFO");
            feature.AddKnownType("__s_GUID,System.Data", "<global namespace>.__s_GUID");
            feature.AddKnownType("_FILETIME,System.Data", "<global namespace>._FILETIME");
            feature.AddKnownType("ProviderNum,System.Data", "<global namespace>.ProviderNum");
            feature.AddKnownType("SNI_ERROR,System.Data", "<global namespace>.SNI_ERROR");
            feature.AddKnownType("BOID,System.Data", "<global namespace>.BOID");
            feature.AddKnownType("__enative_startup_state,System.Data", "<global namespace>.__enative_startup_state");
            feature.AddKnownType("_EXCEPTION_POINTERS,System.Data", "<global namespace>._EXCEPTION_POINTERS");
            feature.AddKnownType("Bid+ApiGroup,System.Data", "<global namespace>.ApiGroup");
            feature.AddKnownType("SqlDependencyProcessDispatcher,System.Data", "<global namespace>.SqlDependencyProcessDispatcher");
            feature.AddKnownType("BidIdentityAttribute,System.Data", "<global namespace>.BidIdentityAttribute");
            feature.AddKnownType("BidMetaTextAttribute,System.Data", "<global namespace>.BidMetaTextAttribute");
            feature.AddKnownType("BidMethodAttribute,System.Data", "<global namespace>.BidMethodAttribute");
            feature.AddKnownType("BidArgumentTypeAttribute,System.Data", "<global namespace>.BidArgumentTypeAttribute");
            feature.AddKnownType("SNI_Conn,System.Data", "<global namespace>.SNI_Conn");
            feature.AddKnownType("SNI_Packet,System.Data", "<global namespace>.SNI_Packet");
            feature.AddKnownType("<CrtImplementationDetails>.ModuleLoadException,System.Data", "<CrtImplementationDetails>.ModuleLoadException");
            feature.AddKnownType("<CrtImplementationDetails>.ModuleLoadExceptionHandlerException,System.Data", "<CrtImplementationDetails>.ModuleLoadExceptionHandlerException");
            feature.AddKnownType("<CrtImplementationDetails>.ModuleUninitializer,System.Data", "<CrtImplementationDetails>.ModuleUninitializer");
            feature.AddKnownType("<CrtImplementationDetails>.LanguageSupport,System.Data", "<CrtImplementationDetails>.LanguageSupport");
            feature.AddKnownType("<CrtImplementationDetails>.Progress,System.Data", "<CrtImplementationDetails>.Progress");
            feature.AddKnownType("<CrtImplementationDetails>.Progress+State,System.Data", "<CrtImplementationDetails>.<CrtImplementationDetails>.Progress.State");
            feature.AddKnownType("<CrtImplementationDetails>.TriBool,System.Data", "<CrtImplementationDetails>.TriBool");
            feature.AddKnownType("<CrtImplementationDetails>.TriBool+State,System.Data", "<CrtImplementationDetails>.<CrtImplementationDetails>.TriBool.State");
            feature.AddKnownType("<CrtImplementationDetails>.ThisModule,System.Data", "<CrtImplementationDetails>.ThisModule");
            feature.AddKnownType("Microsoft.SqlServer.Server.ExtendedClrTypeCode,System.Data", "Microsoft.SqlServer.Server.ExtendedClrTypeCode");
            feature.AddKnownType("Microsoft.SqlServer.Server.ITypedGetters,System.Data", "Microsoft.SqlServer.Server.ITypedGetters");
            feature.AddKnownType("Microsoft.SqlServer.Server.ITypedGettersV3,System.Data", "Microsoft.SqlServer.Server.ITypedGettersV3");
            feature.AddKnownType("Microsoft.SqlServer.Server.ITypedSetters,System.Data", "Microsoft.SqlServer.Server.ITypedSetters");
            feature.AddKnownType("Microsoft.SqlServer.Server.ITypedSettersV3,System.Data", "Microsoft.SqlServer.Server.ITypedSettersV3");
            feature.AddKnownType("Microsoft.SqlServer.Server.MetaDataUtilsSmi,System.Data", "Microsoft.SqlServer.Server.MetaDataUtilsSmi");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiConnection,System.Data", "Microsoft.SqlServer.Server.SmiConnection");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiContext,System.Data", "Microsoft.SqlServer.Server.SmiContext");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiContextFactory,System.Data", "Microsoft.SqlServer.Server.SmiContextFactory");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventSink,System.Data", "Microsoft.SqlServer.Server.SmiEventSink");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventSink_Default,System.Data", "Microsoft.SqlServer.Server.SmiEventSink_Default");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventSink_Default+UnexpectedEventType,System.Data", "Microsoft.SqlServer.Server.UnexpectedEventType");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventSink_DeferedProcessing,System.Data", "Microsoft.SqlServer.Server.SmiEventSink_DeferedProcessing");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventStream,System.Data", "Microsoft.SqlServer.Server.SmiEventStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiExecuteType,System.Data", "Microsoft.SqlServer.Server.SmiExecuteType");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiGettersStream,System.Data", "Microsoft.SqlServer.Server.SmiGettersStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiLink,System.Data", "Microsoft.SqlServer.Server.SmiLink");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiMetaData,System.Data", "Microsoft.SqlServer.Server.SmiMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiExtendedMetaData,System.Data", "Microsoft.SqlServer.Server.SmiExtendedMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiParameterMetaData,System.Data", "Microsoft.SqlServer.Server.SmiParameterMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiStorageMetaData,System.Data", "Microsoft.SqlServer.Server.SmiStorageMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiQueryMetaData,System.Data", "Microsoft.SqlServer.Server.SmiQueryMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiRecordBuffer,System.Data", "Microsoft.SqlServer.Server.SmiRecordBuffer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiRequestExecutor,System.Data", "Microsoft.SqlServer.Server.SmiRequestExecutor");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiSettersStream,System.Data", "Microsoft.SqlServer.Server.SmiSettersStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiStream,System.Data", "Microsoft.SqlServer.Server.SmiStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiXetterAccessMap,System.Data", "Microsoft.SqlServer.Server.SmiXetterAccessMap");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiXetterTypeCode,System.Data", "Microsoft.SqlServer.Server.SmiXetterTypeCode");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlContext,System.Data", "Microsoft.SqlServer.Server.SqlContext");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlDataRecord,System.Data", "Microsoft.SqlServer.Server.SqlDataRecord");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlPipe,System.Data", "Microsoft.SqlServer.Server.SqlPipe");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlTriggerContext,System.Data", "Microsoft.SqlServer.Server.SqlTriggerContext");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlClientWrapperSmiStream,System.Data", "Microsoft.SqlServer.Server.SqlClientWrapperSmiStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlClientWrapperSmiStreamChars,System.Data", "Microsoft.SqlServer.Server.SqlClientWrapperSmiStreamChars");
            feature.AddKnownType("Microsoft.SqlServer.Server.IBinarySerialize,System.Data", "Microsoft.SqlServer.Server.IBinarySerialize");
            feature.AddKnownType("Microsoft.SqlServer.Server.InvalidUdtException,System.Data", "Microsoft.SqlServer.Server.InvalidUdtException");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlFacetAttribute,System.Data", "Microsoft.SqlServer.Server.SqlFacetAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.DataAccessKind,System.Data", "Microsoft.SqlServer.Server.DataAccessKind");
            feature.AddKnownType("Microsoft.SqlServer.Server.SystemDataAccessKind,System.Data", "Microsoft.SqlServer.Server.SystemDataAccessKind");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlFunctionAttribute,System.Data", "Microsoft.SqlServer.Server.SqlFunctionAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlMetaData,System.Data", "Microsoft.SqlServer.Server.SqlMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlMethodAttribute,System.Data", "Microsoft.SqlServer.Server.SqlMethodAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.FieldInfoEx,System.Data", "Microsoft.SqlServer.Server.FieldInfoEx");
            feature.AddKnownType("Microsoft.SqlServer.Server.BinaryOrderedUdtNormalizer,System.Data", "Microsoft.SqlServer.Server.BinaryOrderedUdtNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.Normalizer,System.Data", "Microsoft.SqlServer.Server.Normalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.BooleanNormalizer,System.Data", "Microsoft.SqlServer.Server.BooleanNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SByteNormalizer,System.Data", "Microsoft.SqlServer.Server.SByteNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.ByteNormalizer,System.Data", "Microsoft.SqlServer.Server.ByteNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.ShortNormalizer,System.Data", "Microsoft.SqlServer.Server.ShortNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.UShortNormalizer,System.Data", "Microsoft.SqlServer.Server.UShortNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.IntNormalizer,System.Data", "Microsoft.SqlServer.Server.IntNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.UIntNormalizer,System.Data", "Microsoft.SqlServer.Server.UIntNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.LongNormalizer,System.Data", "Microsoft.SqlServer.Server.LongNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.ULongNormalizer,System.Data", "Microsoft.SqlServer.Server.ULongNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.FloatNormalizer,System.Data", "Microsoft.SqlServer.Server.FloatNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.DoubleNormalizer,System.Data", "Microsoft.SqlServer.Server.DoubleNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlProcedureAttribute,System.Data", "Microsoft.SqlServer.Server.SqlProcedureAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.SerializationHelperSql9,System.Data", "Microsoft.SqlServer.Server.SerializationHelperSql9");
            feature.AddKnownType("Microsoft.SqlServer.Server.Serializer,System.Data", "Microsoft.SqlServer.Server.Serializer");
            feature.AddKnownType("Microsoft.SqlServer.Server.NormalizedSerializer,System.Data", "Microsoft.SqlServer.Server.NormalizedSerializer");
            feature.AddKnownType("Microsoft.SqlServer.Server.BinarySerializeSerializer,System.Data", "Microsoft.SqlServer.Server.BinarySerializeSerializer");
            feature.AddKnownType("Microsoft.SqlServer.Server.DummyStream,System.Data", "Microsoft.SqlServer.Server.DummyStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlTriggerAttribute,System.Data", "Microsoft.SqlServer.Server.SqlTriggerAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute,System.Data", "Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.Format,System.Data", "Microsoft.SqlServer.Server.Format");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute,System.Data", "Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.TriggerAction,System.Data", "Microsoft.SqlServer.Server.TriggerAction");
            feature.AddKnownType("Microsoft.SqlServer.Server.MemoryRecordBuffer,System.Data", "Microsoft.SqlServer.Server.MemoryRecordBuffer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiPropertySelector,System.Data", "Microsoft.SqlServer.Server.SmiPropertySelector");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiMetaDataPropertyCollection,System.Data", "Microsoft.SqlServer.Server.SmiMetaDataPropertyCollection");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiMetaDataProperty,System.Data", "Microsoft.SqlServer.Server.SmiMetaDataProperty");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiUniqueKeyProperty,System.Data", "Microsoft.SqlServer.Server.SmiUniqueKeyProperty");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiOrderProperty,System.Data", "Microsoft.SqlServer.Server.SmiOrderProperty");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiOrderProperty+SmiColumnOrder,System.Data", "Microsoft.SqlServer.Server.SmiColumnOrder");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiDefaultFieldsProperty,System.Data", "Microsoft.SqlServer.Server.SmiDefaultFieldsProperty");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiTypedGetterSetter,System.Data", "Microsoft.SqlServer.Server.SmiTypedGetterSetter");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlRecordBuffer,System.Data", "Microsoft.SqlServer.Server.SqlRecordBuffer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlRecordBuffer+StorageType,System.Data", "Microsoft.SqlServer.Server.StorageType");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlRecordBuffer+Storage,System.Data", "Microsoft.SqlServer.Server.Storage");
            feature.AddKnownType("System.Data.AcceptRejectRule,System.Data", "AcceptRejectRule");
            feature.AddKnownType("System.Data.AggregateType,System.Data", "AggregateType");
            feature.AddKnownType("System.Data.InternalDataCollectionBase,System.Data", "InternalDataCollectionBase");
            feature.AddKnownType("System.Data.TypedDataSetGenerator,System.Data", "TypedDataSetGenerator");
            feature.AddKnownType("System.Data.StrongTypingException,System.Data", "StrongTypingException");
            feature.AddKnownType("System.Data.TypedDataSetGeneratorException,System.Data", "TypedDataSetGeneratorException");
            feature.AddKnownType("System.Data.ColumnTypeConverter,System.Data", "ColumnTypeConverter");
            feature.AddKnownType("System.Data.CommandBehavior,System.Data", "CommandBehavior");
            feature.AddKnownType("System.Data.CommandType,System.Data", "CommandType");
            feature.AddKnownType("System.Data.KeyRestrictionBehavior,System.Data", "KeyRestrictionBehavior");
            feature.AddKnownType("System.Data.ConflictOption,System.Data", "ConflictOption");
            feature.AddKnownType("System.Data.ConnectionState,System.Data", "ConnectionState");
            feature.AddKnownType("System.Data.Constraint,System.Data", "Constraint");
            feature.AddKnownType("System.Data.ConstraintCollection,System.Data", "ConstraintCollection");
            feature.AddKnownType("System.Data.ConstraintConverter,System.Data", "ConstraintConverter");
            feature.AddKnownType("System.Data.ConstraintEnumerator,System.Data", "ConstraintEnumerator");
            feature.AddKnownType("System.Data.ForeignKeyConstraintEnumerator,System.Data", "ForeignKeyConstraintEnumerator");
            feature.AddKnownType("System.Data.ChildForeignKeyConstraintEnumerator,System.Data", "ChildForeignKeyConstraintEnumerator");
            feature.AddKnownType("System.Data.ParentForeignKeyConstraintEnumerator,System.Data", "ParentForeignKeyConstraintEnumerator");
            feature.AddKnownType("System.Data.DataColumn,System.Data", "DataColumn");
            feature.AddKnownType("System.Data.AutoIncrementValue,System.Data", "AutoIncrementValue");
            feature.AddKnownType("System.Data.AutoIncrementInt64,System.Data", "AutoIncrementInt64");
            feature.AddKnownType("System.Data.AutoIncrementBigInteger,System.Data", "AutoIncrementBigInteger");
            feature.AddKnownType("System.Data.DataColumnChangeEventArgs,System.Data", "DataColumnChangeEventArgs");
            feature.AddKnownType("System.Data.DataColumnCollection,System.Data", "DataColumnCollection");
            feature.AddKnownType("System.Data.DataColumnPropertyDescriptor,System.Data", "DataColumnPropertyDescriptor");
            feature.AddKnownType("System.Data.DataError,System.Data", "DataError");
            feature.AddKnownType("System.Data.DataError+ColumnError,System.Data", "ColumnError");
            feature.AddKnownType("System.Data.DataException,System.Data", "DataException");
            feature.AddKnownType("System.Data.ConstraintException,System.Data", "ConstraintException");
            feature.AddKnownType("System.Data.DeletedRowInaccessibleException,System.Data", "DeletedRowInaccessibleException");
            feature.AddKnownType("System.Data.DuplicateNameException,System.Data", "DuplicateNameException");
            feature.AddKnownType("System.Data.InRowChangingEventException,System.Data", "InRowChangingEventException");
            feature.AddKnownType("System.Data.InvalidConstraintException,System.Data", "InvalidConstraintException");
            feature.AddKnownType("System.Data.MissingPrimaryKeyException,System.Data", "MissingPrimaryKeyException");
            feature.AddKnownType("System.Data.NoNullAllowedException,System.Data", "NoNullAllowedException");
            feature.AddKnownType("System.Data.ReadOnlyException,System.Data", "ReadOnlyException");
            feature.AddKnownType("System.Data.RowNotInTableException,System.Data", "RowNotInTableException");
            feature.AddKnownType("System.Data.VersionNotFoundException,System.Data", "VersionNotFoundException");
            feature.AddKnownType("System.Data.DataKey,System.Data", "DataKey");
            feature.AddKnownType("System.Data.DataRelation,System.Data", "DataRelation");
            feature.AddKnownType("System.Data.DataRelationCollection,System.Data", "DataRelationCollection");
            feature.AddKnownType("System.Data.DataRelationCollection+DataTableRelationCollection,System.Data", "DataTableRelationCollection");
            feature.AddKnownType("System.Data.DataRelationCollection+DataSetRelationCollection,System.Data", "DataSetRelationCollection");
            feature.AddKnownType("System.Data.DataRelationPropertyDescriptor,System.Data", "DataRelationPropertyDescriptor");
            feature.AddKnownType("System.Data.DataRow,System.Data", "DataRow");
            feature.AddKnownType("System.Data.DataRowBuilder,System.Data", "DataRowBuilder");
            feature.AddKnownType("System.Data.DataRowAction,System.Data", "DataRowAction");
            feature.AddKnownType("System.Data.DataRowChangeEventArgs,System.Data", "DataRowChangeEventArgs");
            feature.AddKnownType("System.Data.DataRowCollection,System.Data", "DataRowCollection");
            feature.AddKnownType("System.Data.DataRowState,System.Data", "DataRowState");
            feature.AddKnownType("System.Data.DataRowVersion,System.Data", "DataRowVersion");
            feature.AddKnownType("System.Data.DataRowView,System.Data", "DataRowView");
            feature.AddKnownType("System.Data.SerializationFormat,System.Data", "SerializationFormat");
            feature.AddKnownType("System.Data.DataSet,System.Data", "DataSet");
            feature.AddKnownType("System.Data.DataSetSchemaImporterExtension,System.Data", "DataSetSchemaImporterExtension");
            feature.AddKnownType("System.Data.DataSetDateTime,System.Data", "DataSetDateTime");
            feature.AddKnownType("System.Data.DataSysDescriptionAttribute,System.Data", "DataSysDescriptionAttribute");
            feature.AddKnownType("System.Data.DataTable,System.Data", "DataTable");
            feature.AddKnownType("System.Data.DataTable+RowDiffIdUsageSection,System.Data", "RowDiffIdUsageSection");
            feature.AddKnownType("System.Data.DataTable+DSRowDiffIdUsageSection,System.Data", "DSRowDiffIdUsageSection");
            feature.AddKnownType("System.Data.DataTableClearEventArgs,System.Data", "DataTableClearEventArgs");
            feature.AddKnownType("System.Data.DataTableCollection,System.Data", "DataTableCollection");
            feature.AddKnownType("System.Data.DataTableNewRowEventArgs,System.Data", "DataTableNewRowEventArgs");
            feature.AddKnownType("System.Data.DataTablePropertyDescriptor,System.Data", "DataTablePropertyDescriptor");
            feature.AddKnownType("System.Data.DataTableReader,System.Data", "DataTableReader");
            feature.AddKnownType("System.Data.DataTableReaderListener,System.Data", "DataTableReaderListener");
            feature.AddKnownType("System.Data.DataTableTypeConverter,System.Data", "DataTableTypeConverter");
            feature.AddKnownType("System.Data.DataView,System.Data", "DataView");
            feature.AddKnownType("System.Data.DataViewListener,System.Data", "DataViewListener");
            feature.AddKnownType("System.Data.DataViewManager,System.Data", "DataViewManager");
            feature.AddKnownType("System.Data.DataViewManagerListItemTypeDescriptor,System.Data", "DataViewManagerListItemTypeDescriptor");
            feature.AddKnownType("System.Data.DataViewRowState,System.Data", "DataViewRowState");
            feature.AddKnownType("System.Data.DataViewSetting,System.Data", "DataViewSetting");
            feature.AddKnownType("System.Data.DataViewSettingCollection,System.Data", "DataViewSettingCollection");
            feature.AddKnownType("System.Data.DBConcurrencyException,System.Data", "DBConcurrencyException");
            feature.AddKnownType("System.Data.DbType,System.Data", "DbType");
            feature.AddKnownType("System.Data.DefaultValueTypeConverter,System.Data", "DefaultValueTypeConverter");
            feature.AddKnownType("System.Data.FillErrorEventArgs,System.Data", "FillErrorEventArgs");
            feature.AddKnownType("System.Data.Aggregate,System.Data", "Aggregate");
            feature.AddKnownType("System.Data.AggregateNode,System.Data", "AggregateNode");
            feature.AddKnownType("System.Data.BinaryNode,System.Data", "BinaryNode");
            feature.AddKnownType("System.Data.LikeNode,System.Data", "LikeNode");
            feature.AddKnownType("System.Data.ConstNode,System.Data", "ConstNode");
            feature.AddKnownType("System.Data.DataExpression,System.Data", "DataExpression");
            feature.AddKnownType("System.Data.ExpressionNode,System.Data", "ExpressionNode");
            feature.AddKnownType("System.Data.ValueType,System.Data", "ValueType");
            feature.AddKnownType("System.Data.Nodes,System.Data", "Nodes");
            feature.AddKnownType("System.Data.ExpressionParser,System.Data", "ExpressionParser");
            feature.AddKnownType("System.Data.Tokens,System.Data", "Tokens");
            feature.AddKnownType("System.Data.OperatorInfo,System.Data", "OperatorInfo");
            feature.AddKnownType("System.Data.InvalidExpressionException,System.Data", "InvalidExpressionException");
            feature.AddKnownType("System.Data.EvaluateException,System.Data", "EvaluateException");
            feature.AddKnownType("System.Data.SyntaxErrorException,System.Data", "SyntaxErrorException");
            feature.AddKnownType("System.Data.ExprException,System.Data", "ExprException");
            feature.AddKnownType("System.Data.FunctionNode,System.Data", "FunctionNode");
            feature.AddKnownType("System.Data.FunctionId,System.Data", "FunctionId");
            feature.AddKnownType("System.Data.Function,System.Data", "Function");
            feature.AddKnownType("System.Data.IFilter,System.Data", "IFilter");
            feature.AddKnownType("System.Data.LookupNode,System.Data", "LookupNode");
            feature.AddKnownType("System.Data.NameNode,System.Data", "NameNode");
            feature.AddKnownType("System.Data.Operators,System.Data", "Operators");
            feature.AddKnownType("System.Data.UnaryNode,System.Data", "UnaryNode");
            feature.AddKnownType("System.Data.ZeroOpNode,System.Data", "ZeroOpNode");
            feature.AddKnownType("System.Data.ForeignKeyConstraint,System.Data", "ForeignKeyConstraint");
            feature.AddKnownType("System.Data.IColumnMapping,System.Data", "IColumnMapping");
            feature.AddKnownType("System.Data.IColumnMappingCollection,System.Data", "IColumnMappingCollection");
            feature.AddKnownType("System.Data.IDataAdapter,System.Data", "IDataAdapter");
            feature.AddKnownType("System.Data.IDataParameter,System.Data", "IDataParameter");
            feature.AddKnownType("System.Data.IDataParameterCollection,System.Data", "IDataParameterCollection");
            feature.AddKnownType("System.Data.IDataReader,System.Data", "IDataReader");
            feature.AddKnownType("System.Data.IDataRecord,System.Data", "IDataRecord");
            feature.AddKnownType("System.Data.IDbCommand,System.Data", "IDbCommand");
            feature.AddKnownType("System.Data.IDbConnection,System.Data", "IDbConnection");
            feature.AddKnownType("System.Data.IDbDataAdapter,System.Data", "IDbDataAdapter");
            feature.AddKnownType("System.Data.IDbDataParameter,System.Data", "IDbDataParameter");
            feature.AddKnownType("System.Data.IDbTransaction,System.Data", "IDbTransaction");
            feature.AddKnownType("System.Data.IsolationLevel,System.Data", "IsolationLevel");
            feature.AddKnownType("System.Data.ITableMapping,System.Data", "ITableMapping");
            feature.AddKnownType("System.Data.ITableMappingCollection,System.Data", "ITableMappingCollection");
            feature.AddKnownType("System.Data.LoadOption,System.Data", "LoadOption");
            feature.AddKnownType("System.Data.MappingType,System.Data", "MappingType");
            feature.AddKnownType("System.Data.MergeFailedEventArgs,System.Data", "MergeFailedEventArgs");
            feature.AddKnownType("System.Data.Merger,System.Data", "Merger");
            feature.AddKnownType("System.Data.MissingMappingAction,System.Data", "MissingMappingAction");
            feature.AddKnownType("System.Data.MissingSchemaAction,System.Data", "MissingSchemaAction");
            feature.AddKnownType("System.Data.PropertyAttributes,System.Data", "PropertyAttributes");
            feature.AddKnownType("System.Data.OperationAbortedException,System.Data", "OperationAbortedException");
            feature.AddKnownType("System.Data.ParameterDirection,System.Data", "ParameterDirection");
            feature.AddKnownType("System.Data.PrimaryKeyTypeConverter,System.Data", "PrimaryKeyTypeConverter");
            feature.AddKnownType("System.Data.PropertyCollection,System.Data", "PropertyCollection");
            feature.AddKnownType("System.Data.Range,System.Data", "Range");
            feature.AddKnownType("System.Data.RBTreeError,System.Data", "RBTreeError");
            feature.AddKnownType("System.Data.TreeAccessMethod,System.Data", "TreeAccessMethod");
            feature.AddKnownType("System.Data.RBTree`1,System.Data", "RBTree'1");
            feature.AddKnownType("System.Data.RBTree`1+RBTreeEnumerator,System.Data", "RBTreeEnumerator'0");
            feature.AddKnownType("System.Data.RecordManager,System.Data", "RecordManager");
            feature.AddKnownType("System.Data.StatementCompletedEventArgs,System.Data", "StatementCompletedEventArgs");
            feature.AddKnownType("System.Data.RelatedView,System.Data", "RelatedView");
            feature.AddKnownType("System.Data.RelationshipConverter,System.Data", "RelationshipConverter");
            feature.AddKnownType("System.Data.Rule,System.Data", "Rule");
            feature.AddKnownType("System.Data.SchemaSerializationMode,System.Data", "SchemaSerializationMode");
            feature.AddKnownType("System.Data.SchemaType,System.Data", "SchemaType");
            feature.AddKnownType("System.Data.Select,System.Data", "Select");
            feature.AddKnownType("System.Data.IndexField,System.Data", "IndexField");
            feature.AddKnownType("System.Data.Index,System.Data", "Index");
            feature.AddKnownType("System.Data.Listeners`1,System.Data", "Listeners'1");
            feature.AddKnownType("System.Data.SimpleType,System.Data", "SimpleType");
            feature.AddKnownType("System.Data.LocalDBInstanceElement,System.Data", "LocalDBInstanceElement");
            feature.AddKnownType("System.Data.LocalDBInstancesCollection,System.Data", "LocalDBInstancesCollection");
            feature.AddKnownType("System.Data.LocalDBConfigurationSection,System.Data", "LocalDBConfigurationSection");
            feature.AddKnownType("System.Data.SqlDbType,System.Data", "SqlDbType");
            feature.AddKnownType("System.Data.StateChangeEventArgs,System.Data", "StateChangeEventArgs");
            feature.AddKnownType("System.Data.StatementType,System.Data", "StatementType");
            feature.AddKnownType("System.Data.UniqueConstraint,System.Data", "UniqueConstraint");
            feature.AddKnownType("System.Data.UpdateRowSource,System.Data", "UpdateRowSource");
            feature.AddKnownType("System.Data.UpdateStatus,System.Data", "UpdateStatus");
            feature.AddKnownType("System.Data.XDRSchema,System.Data", "XDRSchema");
            feature.AddKnownType("System.Data.XmlDataLoader,System.Data", "XmlDataLoader");
            feature.AddKnownType("System.Data.XMLDiffLoader,System.Data", "XMLDiffLoader");
            feature.AddKnownType("System.Data.Keywords,System.Data", "Keywords");
            feature.AddKnownType("System.Data.XmlReadMode,System.Data", "XmlReadMode");
            feature.AddKnownType("System.Data.SchemaFormat,System.Data", "SchemaFormat");
            feature.AddKnownType("System.Data.XmlTreeGen,System.Data", "XmlTreeGen");
            feature.AddKnownType("System.Data.NewDiffgramGen,System.Data", "NewDiffgramGen");
            feature.AddKnownType("System.Data.XmlDataTreeWriter,System.Data", "XmlDataTreeWriter");
            feature.AddKnownType("System.Data.DataTextWriter,System.Data", "DataTextWriter");
            feature.AddKnownType("System.Data.DataTextReader,System.Data", "DataTextReader");
            feature.AddKnownType("System.Data.XMLSchema,System.Data", "XMLSchema");
            feature.AddKnownType("System.Data.ConstraintTable,System.Data", "ConstraintTable");
            feature.AddKnownType("System.Data.XSDSchema,System.Data", "XSDSchema");
            feature.AddKnownType("System.Data.XmlIgnoreNamespaceReader,System.Data", "XmlIgnoreNamespaceReader");
            feature.AddKnownType("System.Data.XmlToDatasetMap,System.Data", "XmlToDatasetMap");
            feature.AddKnownType("System.Data.XmlToDatasetMap+XmlNodeIdHashtable,System.Data", "XmlNodeIdHashtable");
            feature.AddKnownType("System.Data.XmlWriteMode,System.Data", "XmlWriteMode");
            feature.AddKnownType("System.Data.SqlEventSource,System.Data", "SqlEventSource");
            feature.AddKnownType("System.Data.ResDescriptionAttribute,System.Data", "ResDescriptionAttribute");
            feature.AddKnownType("System.Data.ResCategoryAttribute,System.Data", "ResCategoryAttribute");
            feature.AddKnownType("System.Data.Res,System.Data", "Res");
            feature.AddKnownType("System.Data.Common.CatalogLocation,System.Data", "CatalogLocation");
            feature.AddKnownType("System.Data.Common.ADP+ConnectionError,System.Data", "ConnectionError");
            feature.AddKnownType("System.Data.Common.ADP+InternalErrorCode,System.Data", "InternalErrorCode");
            feature.AddKnownType("System.Data.Common.BooleanStorage,System.Data", "BooleanStorage");
            feature.AddKnownType("System.Data.Common.ByteStorage,System.Data", "ByteStorage");
            feature.AddKnownType("System.Data.Common.CharStorage,System.Data", "CharStorage");
            feature.AddKnownType("System.Data.Common.DataAdapter,System.Data", "DataAdapter");
            feature.AddKnownType("System.Data.Common.LoadAdapter,System.Data", "LoadAdapter");
            feature.AddKnownType("System.Data.Common.DataColumnMapping,System.Data", "DataColumnMapping");
            feature.AddKnownType("System.Data.Common.DataColumnMapping+DataColumnMappingConverter,System.Data", "DataColumnMappingConverter");
            feature.AddKnownType("System.Data.Common.DataColumnMappingCollection,System.Data", "DataColumnMappingCollection");
            feature.AddKnownType("System.Data.Common.StorageType,System.Data", "StorageType");
            feature.AddKnownType("System.Data.Common.DataStorage,System.Data", "DataStorage");
            feature.AddKnownType("System.Data.Common.DataTableMapping,System.Data", "DataTableMapping");
            feature.AddKnownType("System.Data.Common.DataTableMapping+DataTableMappingConverter,System.Data", "DataTableMappingConverter");
            feature.AddKnownType("System.Data.Common.DataTableMappingCollection,System.Data", "DataTableMappingCollection");
            feature.AddKnownType("System.Data.Common.DateTimeStorage,System.Data", "DateTimeStorage");
            feature.AddKnownType("System.Data.Common.DbCommand,System.Data", "DbCommand");
            feature.AddKnownType("System.Data.Common.DbCommandBuilder,System.Data", "DbCommandBuilder");
            feature.AddKnownType("System.Data.Common.DbConnection,System.Data", "DbConnection");
            feature.AddKnownType("System.Data.Common.DbConnectionOptions,System.Data", "DbConnectionOptions");
            feature.AddKnownType("System.Data.Common.DBConnectionString,System.Data", "DBConnectionString");
            feature.AddKnownType("System.Data.Common.DbConnectionPoolKey,System.Data", "DbConnectionPoolKey");
            feature.AddKnownType("System.Data.Common.DbConnectionStringBuilder,System.Data", "DbConnectionStringBuilder");
            feature.AddKnownType("System.Data.Common.DbConnectionStringBuilderDescriptor,System.Data", "DbConnectionStringBuilderDescriptor");
            feature.AddKnownType("System.Data.Common.ReadOnlyCollection`1,System.Data", "ReadOnlyCollection'1");
            feature.AddKnownType("System.Data.Common.ReadOnlyCollection`1+Enumerator`1,System.Data", "Enumerator'1");
            feature.AddKnownType("System.Data.Common.DbDataAdapter,System.Data", "DbDataAdapter");
            feature.AddKnownType("System.Data.Common.DBDataPermission,System.Data", "DBDataPermission");
            feature.AddKnownType("System.Data.Common.DBDataPermissionAttribute,System.Data", "DBDataPermissionAttribute");
            feature.AddKnownType("System.Data.Common.DbDataReader,System.Data", "DbDataReader");
            feature.AddKnownType("System.Data.Common.DbDataRecord,System.Data", "DbDataRecord");
            feature.AddKnownType("System.Data.Common.DbDataSourceEnumerator,System.Data", "DbDataSourceEnumerator");
            feature.AddKnownType("System.Data.Common.DbEnumerator,System.Data", "DbEnumerator");
            feature.AddKnownType("System.Data.Common.DbException,System.Data", "DbException");
            feature.AddKnownType("System.Data.Common.DbParameter,System.Data", "DbParameter");
            feature.AddKnownType("System.Data.Common.DbParameterCollection,System.Data", "DbParameterCollection");
            feature.AddKnownType("System.Data.Common.DbProviderConfigurationHandler,System.Data", "DbProviderConfigurationHandler");
            feature.AddKnownType("System.Data.Common.DbProviderFactoryConfigSection,System.Data", "DbProviderFactoryConfigSection");
            feature.AddKnownType("System.Data.Common.DbProviderFactoriesConfigurationHandler,System.Data", "DbProviderFactoriesConfigurationHandler");
            feature.AddKnownType("System.Data.Common.DbProviderFactory,System.Data", "DbProviderFactory");
            feature.AddKnownType("System.Data.Common.DbProviderSpecificTypePropertyAttribute,System.Data", "DbProviderSpecificTypePropertyAttribute");
            feature.AddKnownType("System.Data.Common.DbSchemaRow,System.Data", "DbSchemaRow");
            feature.AddKnownType("System.Data.Common.DbSchemaTable,System.Data", "DbSchemaTable");
            feature.AddKnownType("System.Data.Common.DbTransaction,System.Data", "DbTransaction");
            feature.AddKnownType("System.Data.Common.DecimalStorage,System.Data", "DecimalStorage");
            feature.AddKnownType("System.Data.Common.DoubleStorage,System.Data", "DoubleStorage");
            feature.AddKnownType("System.Data.Common.GroupByBehavior,System.Data", "GroupByBehavior");
            feature.AddKnownType("System.Data.Common.IdentifierCase,System.Data", "IdentifierCase");
            feature.AddKnownType("System.Data.Common.Int16Storage,System.Data", "Int16Storage");
            feature.AddKnownType("System.Data.Common.Int32Storage,System.Data", "Int32Storage");
            feature.AddKnownType("System.Data.Common.Int64Storage,System.Data", "Int64Storage");
            feature.AddKnownType("System.Data.Common.MultipartIdentifier,System.Data", "MultipartIdentifier");
            feature.AddKnownType("System.Data.Common.NameValuePair,System.Data", "NameValuePair");
            feature.AddKnownType("System.Data.Common.NameValuePermission,System.Data", "NameValuePermission");
            feature.AddKnownType("System.Data.Common.NativeMethods+ISourcesRowset,System.Data", "ISourcesRowset");
            feature.AddKnownType("System.Data.Common.NativeMethods+ITransactionJoin,System.Data", "ITransactionJoin");
            feature.AddKnownType("System.Data.Common.ObjectStorage,System.Data", "ObjectStorage");
            feature.AddKnownType("System.Data.Common.RowUpdatedEventArgs,System.Data", "RowUpdatedEventArgs");
            feature.AddKnownType("System.Data.Common.RowUpdatingEventArgs,System.Data", "RowUpdatingEventArgs");
            feature.AddKnownType("System.Data.Common.SafeNativeMethods+Wrapper,System.Data", "Wrapper");
            feature.AddKnownType("System.Data.Common.SByteStorage,System.Data", "SByteStorage");
            feature.AddKnownType("System.Data.Common.SingleStorage,System.Data", "SingleStorage");
            feature.AddKnownType("System.Data.Common.SqlBinaryStorage,System.Data", "SqlBinaryStorage");
            feature.AddKnownType("System.Data.Common.SqlBooleanStorage,System.Data", "SqlBooleanStorage");
            feature.AddKnownType("System.Data.Common.SqlBytesStorage,System.Data", "SqlBytesStorage");
            feature.AddKnownType("System.Data.Common.SqlByteStorage,System.Data", "SqlByteStorage");
            feature.AddKnownType("System.Data.Common.SqlCharsStorage,System.Data", "SqlCharsStorage");
            feature.AddKnownType("System.Data.Common.SqlDateTimeStorage,System.Data", "SqlDateTimeStorage");
            feature.AddKnownType("System.Data.Common.SqlDecimalStorage,System.Data", "SqlDecimalStorage");
            feature.AddKnownType("System.Data.Common.SqlDoubleStorage,System.Data", "SqlDoubleStorage");
            feature.AddKnownType("System.Data.Common.SqlGuidStorage,System.Data", "SqlGuidStorage");
            feature.AddKnownType("System.Data.Common.SqlInt16Storage,System.Data", "SqlInt16Storage");
            feature.AddKnownType("System.Data.Common.SqlInt32Storage,System.Data", "SqlInt32Storage");
            feature.AddKnownType("System.Data.Common.SqlInt64Storage,System.Data", "SqlInt64Storage");
            feature.AddKnownType("System.Data.Common.SqlMoneyStorage,System.Data", "SqlMoneyStorage");
            feature.AddKnownType("System.Data.Common.SqlSingleStorage,System.Data", "SqlSingleStorage");
            feature.AddKnownType("System.Data.Common.SqlStringStorage,System.Data", "SqlStringStorage");
            feature.AddKnownType("System.Data.Common.SqlUdtStorage,System.Data", "SqlUdtStorage");
            feature.AddKnownType("System.Data.Common.SqlXmlStorage,System.Data", "SqlXmlStorage");
            feature.AddKnownType("System.Data.Common.StringStorage,System.Data", "StringStorage");
            feature.AddKnownType("System.Data.Common.SupportedJoinOperators,System.Data", "SupportedJoinOperators");
            feature.AddKnownType("System.Data.Common.TimeSpanStorage,System.Data", "TimeSpanStorage");
            feature.AddKnownType("System.Data.Common.UInt16Storage,System.Data", "UInt16Storage");
            feature.AddKnownType("System.Data.Common.UInt32Storage,System.Data", "UInt32Storage");
            feature.AddKnownType("System.Data.Common.UInt64Storage,System.Data", "UInt64Storage");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ADORecordConstruction,System.Data", "ADORecordConstruction");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ADORecordsetConstruction,System.Data", "ADORecordsetConstruction");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+Recordset15,System.Data", "Recordset15");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+_ADORecord,System.Data", "_ADORecord");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IAccessor,System.Data", "IAccessor");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IChapteredRowset,System.Data", "IChapteredRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IColumnsInfo,System.Data", "IColumnsInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IColumnsRowset,System.Data", "IColumnsRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ICommandPrepare,System.Data", "ICommandPrepare");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ICommandProperties,System.Data", "ICommandProperties");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ICommandText,System.Data", "ICommandText");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ICommandWithParameters,System.Data", "ICommandWithParameters");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IDataInitialize,System.Data", "IDataInitialize");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IDBInfo,System.Data", "IDBInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IDBProperties,System.Data", "IDBProperties");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IDBSchemaRowset,System.Data", "IDBSchemaRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IErrorInfo,System.Data", "IErrorInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IErrorRecords,System.Data", "IErrorRecords");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IMultipleResults,System.Data", "IMultipleResults");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IOpenRowset,System.Data", "IOpenRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IRow,System.Data", "IRow");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IRowset,System.Data", "IRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IRowsetInfo,System.Data", "IRowsetInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ISQLErrorInfo,System.Data", "ISQLErrorInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ITransactionLocal,System.Data", "ITransactionLocal");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+Trustee,System.Data", "Trustee");
            feature.AddKnownType("System.Data.Common.DataRecordInternal,System.Data", "DataRecordInternal");
            feature.AddKnownType("System.Data.Common.SchemaInfo,System.Data", "SchemaInfo");
            feature.AddKnownType("System.Data.Common.BigIntegerStorage,System.Data", "BigIntegerStorage");
            feature.AddKnownType("System.Data.Common.DateTimeOffsetStorage,System.Data", "DateTimeOffsetStorage");
            feature.AddKnownType("System.Data.Common.ActivityCorrelator+ActivityId,System.Data", "ActivityId");
            feature.AddKnownType("System.Data.Odbc.DbSchemaInfo,System.Data", "DbSchemaInfo");
            feature.AddKnownType("System.Data.Odbc.DbCache,System.Data", "DbCache");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_HANDLE,System.Data", "SQL_HANDLE");
            feature.AddKnownType("System.Data.Odbc.ODBC32+RETCODE,System.Data", "ODBC32.RETCODE");
            feature.AddKnownType("System.Data.Odbc.ODBC32+RetCode,System.Data", "RetCode");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_CONVERT,System.Data", "SQL_CONVERT");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_CVT,System.Data", "SQL_CVT");
            feature.AddKnownType("System.Data.Odbc.ODBC32+STMT,System.Data", "STMT");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_IS,System.Data", "SQL_IS");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_TRANSACTION,System.Data", "SQL_TRANSACTION");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_PARAM,System.Data", "SQL_PARAM");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_API,System.Data", "SQL_API");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_DESC,System.Data", "SQL_DESC");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_COLUMN,System.Data", "SQL_COLUMN");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_SPECIALCOLS,System.Data", "SQL_SPECIALCOLS");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_SCOPE,System.Data", "SQL_SCOPE");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_NULLABILITY,System.Data", "SQL_NULLABILITY");
            feature.AddKnownType("System.Data.Odbc.ODBC32+HANDLER,System.Data", "HANDLER");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_C,System.Data", "SQL_C");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_TYPE,System.Data", "SQL_TYPE");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_ATTR,System.Data", "SQL_ATTR");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_INFO,System.Data", "SQL_INFO");
            feature.AddKnownType("System.Data.Odbc.TypeMap,System.Data", "TypeMap");
            feature.AddKnownType("System.Data.Odbc.OdbcCommand,System.Data", "OdbcCommand");
            feature.AddKnownType("System.Data.Odbc.CMDWrapper,System.Data", "CMDWrapper");
            feature.AddKnownType("System.Data.Odbc.OdbcCommandBuilder,System.Data", "OdbcCommandBuilder");
            feature.AddKnownType("System.Data.Odbc.OdbcConnection,System.Data", "OdbcConnection");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionFactory,System.Data", "OdbcConnectionFactory");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionHandle,System.Data", "OdbcConnectionHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionOpen,System.Data", "OdbcConnectionOpen");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionPoolGroupProviderInfo,System.Data", "OdbcConnectionPoolGroupProviderInfo");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionString,System.Data", "OdbcConnectionString");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionStringBuilder,System.Data", "OdbcConnectionStringBuilder");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionStringBuilder+OdbcConnectionStringBuilderConverter,System.Data", "OdbcConnectionStringBuilderConverter");
            feature.AddKnownType("System.Data.Odbc.OdbcDataAdapter,System.Data", "OdbcDataAdapter");
            feature.AddKnownType("System.Data.Odbc.OdbcDataReader,System.Data", "OdbcDataReader");
            feature.AddKnownType("System.Data.Odbc.OdbcDataReader+QualifiedTableName,System.Data", "QualifiedTableName");
            feature.AddKnownType("System.Data.Odbc.OdbcEnvironment,System.Data", "OdbcEnvironment");
            feature.AddKnownType("System.Data.Odbc.OdbcEnvironmentHandle,System.Data", "OdbcEnvironmentHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcError,System.Data", "OdbcError");
            feature.AddKnownType("System.Data.Odbc.OdbcErrorCollection,System.Data", "OdbcErrorCollection");
            feature.AddKnownType("System.Data.Odbc.OdbcException,System.Data", "OdbcException");
            feature.AddKnownType("System.Data.Odbc.OdbcFactory,System.Data", "OdbcFactory");
            feature.AddKnownType("System.Data.Odbc.OdbcHandle,System.Data", "OdbcHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcDescriptorHandle,System.Data", "OdbcDescriptorHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcInfoMessageEventArgs,System.Data", "OdbcInfoMessageEventArgs");
            feature.AddKnownType("System.Data.Odbc.OdbcMetaDataFactory,System.Data", "OdbcMetaDataFactory");
            feature.AddKnownType("System.Data.Odbc.OdbcParameter,System.Data", "OdbcParameter");
            feature.AddKnownType("System.Data.Odbc.OdbcParameter+OdbcParameterConverter,System.Data", "OdbcParameterConverter");
            feature.AddKnownType("System.Data.Odbc.OdbcParameterCollection,System.Data", "OdbcParameterCollection");
            feature.AddKnownType("System.Data.Odbc.OdbcPermission,System.Data", "OdbcPermission");
            feature.AddKnownType("System.Data.Odbc.OdbcPermissionAttribute,System.Data", "OdbcPermissionAttribute");
            feature.AddKnownType("System.Data.Odbc.OdbcReferenceCollection,System.Data", "OdbcReferenceCollection");
            feature.AddKnownType("System.Data.Odbc.OdbcRowUpdatingEventArgs,System.Data", "OdbcRowUpdatingEventArgs");
            feature.AddKnownType("System.Data.Odbc.OdbcRowUpdatedEventArgs,System.Data", "OdbcRowUpdatedEventArgs");
            feature.AddKnownType("System.Data.Odbc.SQLLEN,System.Data", "SQLLEN");
            feature.AddKnownType("System.Data.Odbc.OdbcStatementHandle,System.Data", "OdbcStatementHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcTransaction,System.Data", "OdbcTransaction");
            feature.AddKnownType("System.Data.Odbc.OdbcType,System.Data", "OdbcType");
            feature.AddKnownType("System.Data.Odbc.CNativeBuffer,System.Data", "CNativeBuffer");
            feature.AddKnownType("System.Data.Odbc.CStringTokenizer,System.Data", "CStringTokenizer");
            feature.AddKnownType("System.Data.OleDb.ColumnBinding,System.Data", "ColumnBinding");
            feature.AddKnownType("System.Data.OleDb.Bindings,System.Data", "Bindings");
            feature.AddKnownType("System.Data.OleDb.DBPropSet,System.Data", "DBPropSet");
            feature.AddKnownType("System.Data.OleDb.OleDbCommand,System.Data", "OleDbCommand");
            feature.AddKnownType("System.Data.OleDb.OleDbCommandBuilder,System.Data", "OleDbCommandBuilder");
            feature.AddKnownType("System.Data.OleDb.OleDbConnection,System.Data", "OleDbConnection");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionFactory,System.Data", "OleDbConnectionFactory");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionInternal,System.Data", "OleDbConnectionInternal");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionPoolGroupProviderInfo,System.Data", "OleDbConnectionPoolGroupProviderInfo");
            feature.AddKnownType("System.Data.OleDb.SchemaSupport,System.Data", "SchemaSupport");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionString,System.Data", "OleDbConnectionString");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder,System.Data", "OleDbConnectionStringBuilder");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder+OleDbProviderConverter,System.Data", "OleDbProviderConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder+OleDbServiceValues,System.Data", "OleDbServiceValues");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder+OleDbServicesConverter,System.Data", "OleDbServicesConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder+OleDbConnectionStringBuilderConverter,System.Data", "OleDbConnectionStringBuilderConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbDataAdapter,System.Data", "OleDbDataAdapter");
            feature.AddKnownType("System.Data.OleDb.OleDbDataReader,System.Data", "OleDbDataReader");
            feature.AddKnownType("System.Data.OleDb.MetaData,System.Data", "MetaData");
            feature.AddKnownType("System.Data.OleDb.OleDbEnumerator,System.Data", "OleDbEnumerator");
            feature.AddKnownType("System.Data.OleDb.OleDbError,System.Data", "OleDbError");
            feature.AddKnownType("System.Data.OleDb.OleDbErrorCollection,System.Data", "OleDbErrorCollection");
            feature.AddKnownType("System.Data.OleDb.OleDbException,System.Data", "OleDbException");
            feature.AddKnownType("System.Data.OleDb.OleDbException+ErrorCodeConverter,System.Data", "ErrorCodeConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbFactory,System.Data", "OleDbFactory");
            feature.AddKnownType("System.Data.OleDb.OleDbHResult,System.Data", "OleDbHResult");
            feature.AddKnownType("System.Data.OleDb.OleDbInfoMessageEventArgs,System.Data", "OleDbInfoMessageEventArgs");
            feature.AddKnownType("System.Data.OleDb.OleDbLiteral,System.Data", "OleDbLiteral");
            feature.AddKnownType("System.Data.OleDb.OleDbMetaDataFactory,System.Data", "OleDbMetaDataFactory");
            feature.AddKnownType("System.Data.OleDb.OleDbParameter,System.Data", "OleDbParameter");
            feature.AddKnownType("System.Data.OleDb.OleDbParameter+OleDbParameterConverter,System.Data", "OleDbParameterConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbParameterCollection,System.Data", "OleDbParameterCollection");
            feature.AddKnownType("System.Data.OleDb.OleDbPermission,System.Data", "OleDbPermission");
            feature.AddKnownType("System.Data.OleDb.OleDbPermissionAttribute,System.Data", "OleDbPermissionAttribute");
            feature.AddKnownType("System.Data.OleDb.OleDbPropertySetGuid,System.Data", "OleDbPropertySetGuid");
            feature.AddKnownType("System.Data.OleDb.OleDbPropertyStatus,System.Data", "OleDbPropertyStatus");
            feature.AddKnownType("System.Data.OleDb.OleDbReferenceCollection,System.Data", "OleDbReferenceCollection");
            feature.AddKnownType("System.Data.OleDb.OleDbRowUpdatedEventArgs,System.Data", "OleDbRowUpdatedEventArgs");
            feature.AddKnownType("System.Data.OleDb.OleDbRowUpdatingEventArgs,System.Data", "OleDbRowUpdatingEventArgs");
            feature.AddKnownType("System.Data.OleDb.OleDbSchemaGuid,System.Data", "OleDbSchemaGuid");
            feature.AddKnownType("System.Data.OleDb.DBBindStatus,System.Data", "DBBindStatus");
            feature.AddKnownType("System.Data.OleDb.tagDBPARAMBINDINFO,System.Data", "tagDBPARAMBINDINFO");
            feature.AddKnownType("System.Data.OleDb.tagDBBINDING,System.Data", "tagDBBINDING");
            feature.AddKnownType("System.Data.OleDb.tagDBCOLUMNACCESS,System.Data", "tagDBCOLUMNACCESS");
            feature.AddKnownType("System.Data.OleDb.tagDBIDX,System.Data", "tagDBIDX");
            feature.AddKnownType("System.Data.OleDb.tagDBID,System.Data", "tagDBID");
            feature.AddKnownType("System.Data.OleDb.tagDBLITERALINFO,System.Data", "tagDBLITERALINFO");
            feature.AddKnownType("System.Data.OleDb.tagDBPROPSET,System.Data", "tagDBPROPSET");
            feature.AddKnownType("System.Data.OleDb.tagDBPROP,System.Data", "tagDBPROP");
            feature.AddKnownType("System.Data.OleDb.tagDBPARAMS,System.Data", "tagDBPARAMS");
            feature.AddKnownType("System.Data.OleDb.tagDBCOLUMNINFO,System.Data", "tagDBCOLUMNINFO");
            feature.AddKnownType("System.Data.OleDb.tagDBPROPINFOSET,System.Data", "tagDBPROPINFOSET");
            feature.AddKnownType("System.Data.OleDb.tagDBPROPINFO,System.Data", "tagDBPROPINFO");
            feature.AddKnownType("System.Data.OleDb.tagDBPROPIDSET,System.Data", "tagDBPROPIDSET");
            feature.AddKnownType("System.Data.OleDb.OleDbTransaction,System.Data", "OleDbTransaction");
            feature.AddKnownType("System.Data.OleDb.OleDbType,System.Data", "OleDbType");
            feature.AddKnownType("System.Data.OleDb.OleDbServicesWrapper,System.Data", "OleDbServicesWrapper");
            feature.AddKnownType("System.Data.OleDb.DataSourceWrapper,System.Data", "DataSourceWrapper");
            feature.AddKnownType("System.Data.OleDb.SessionWrapper,System.Data", "SessionWrapper");
            feature.AddKnownType("System.Data.OleDb.IDBInfoWrapper,System.Data", "IDBInfoWrapper");
            feature.AddKnownType("System.Data.OleDb.IDBPropertiesWrapper,System.Data", "IDBPropertiesWrapper");
            feature.AddKnownType("System.Data.OleDb.IDBSchemaRowsetWrapper,System.Data", "IDBSchemaRowsetWrapper");
            feature.AddKnownType("System.Data.OleDb.IOpenRowsetWrapper,System.Data", "IOpenRowsetWrapper");
            feature.AddKnownType("System.Data.OleDb.ITransactionJoinWrapper,System.Data", "ITransactionJoinWrapper");
            feature.AddKnownType("System.Data.OleDb.DBStatus,System.Data", "DBStatus");
            feature.AddKnownType("System.Data.OleDb.NativeDBType,System.Data", "NativeDBType");
            feature.AddKnownType("System.Data.OleDb.PropertyIDSet,System.Data", "PropertyIDSet");
            feature.AddKnownType("System.Data.OleDb.OleDbPropertyInfo,System.Data", "OleDbPropertyInfo");
            feature.AddKnownType("System.Data.OleDb.PropertyInfoSet,System.Data", "PropertyInfoSet");
            feature.AddKnownType("System.Data.OleDb.RowBinding,System.Data", "RowBinding");
            feature.AddKnownType("System.Data.OleDb.DualCoTaskMem,System.Data", "DualCoTaskMem");
            feature.AddKnownType("System.Data.OleDb.RowHandleBuffer,System.Data", "RowHandleBuffer");
            feature.AddKnownType("System.Data.OleDb.StringMemHandle,System.Data", "StringMemHandle");
            feature.AddKnownType("System.Data.OleDb.ChapterHandle,System.Data", "ChapterHandle");
            feature.AddKnownType("System.Data.ProviderBase.FieldNameLookup,System.Data", "FieldNameLookup");
            feature.AddKnownType("System.Data.ProviderBase.DataReaderContainer,System.Data", "DataReaderContainer");
            feature.AddKnownType("System.Data.ProviderBase.DbBuffer,System.Data", "DbBuffer");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosed,System.Data", "DbConnectionClosed");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionBusy,System.Data", "DbConnectionBusy");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosedBusy,System.Data", "DbConnectionClosedBusy");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionOpenBusy,System.Data", "DbConnectionOpenBusy");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosedConnecting,System.Data", "DbConnectionClosedConnecting");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosedNeverOpened,System.Data", "DbConnectionClosedNeverOpened");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosedPreviouslyOpened,System.Data", "DbConnectionClosedPreviouslyOpened");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionFactory,System.Data", "DbConnectionFactory");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionInternal,System.Data", "DbConnectionInternal");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPool,System.Data", "DbConnectionPool");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolAuthenticationContext,System.Data", "DbConnectionPoolAuthenticationContext");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolAuthenticationContextKey,System.Data", "DbConnectionPoolAuthenticationContextKey");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolCounters,System.Data", "DbConnectionPoolCounters");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolCounters+Counter,System.Data", "Counter");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolCountersNoCounters,System.Data", "DbConnectionPoolCountersNoCounters");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolGroup,System.Data", "DbConnectionPoolGroup");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolGroupProviderInfo,System.Data", "DbConnectionPoolGroupProviderInfo");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolIdentity,System.Data", "DbConnectionPoolIdentity");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolGroupOptions,System.Data", "DbConnectionPoolGroupOptions");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolProviderInfo,System.Data", "DbConnectionPoolProviderInfo");
            feature.AddKnownType("System.Data.ProviderBase.DbMetaDataFactory,System.Data", "DbMetaDataFactory");
            feature.AddKnownType("System.Data.ProviderBase.DbReferenceCollection,System.Data", "DbReferenceCollection");
            feature.AddKnownType("System.Data.ProviderBase.SchemaMapping,System.Data", "SchemaMapping");
            feature.AddKnownType("System.Data.ProviderBase.WrappedIUnknown,System.Data", "WrappedIUnknown");
            feature.AddKnownType("System.Data.ProviderBase.TimeoutTimer,System.Data", "TimeoutTimer");
            feature.AddKnownType("System.Data.Sql.SqlDataSourceEnumerator,System.Data", "SqlDataSourceEnumerator");
            feature.AddKnownType("System.Data.Sql.SqlGenericUtil,System.Data", "SqlGenericUtil");
            feature.AddKnownType("System.Data.Sql.SqlNotificationRequest,System.Data", "SqlNotificationRequest");
            feature.AddKnownType("System.Data.SqlClient.SqlClientEncryptionAlgorithmFactoryList,System.Data", "SqlClientEncryptionAlgorithmFactoryList");
            feature.AddKnownType("System.Data.SqlClient.SqlSymmetricKeyCache,System.Data", "SqlSymmetricKeyCache");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider,System.Data", "SqlColumnEncryptionKeyStoreProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider,System.Data", "SqlColumnEncryptionCertificateStoreProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionCngProvider,System.Data", "SqlColumnEncryptionCngProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionCspProvider,System.Data", "SqlColumnEncryptionCspProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlAeadAes256CbcHmac256Algorithm,System.Data", "SqlAeadAes256CbcHmac256Algorithm");
            feature.AddKnownType("System.Data.SqlClient.SqlAeadAes256CbcHmac256Factory,System.Data", "SqlAeadAes256CbcHmac256Factory");
            feature.AddKnownType("System.Data.SqlClient.SqlAeadAes256CbcHmac256EncryptionKey,System.Data", "SqlAeadAes256CbcHmac256EncryptionKey");
            feature.AddKnownType("System.Data.SqlClient.SqlAes256CbcAlgorithm,System.Data", "SqlAes256CbcAlgorithm");
            feature.AddKnownType("System.Data.SqlClient.SqlAes256CbcFactory,System.Data", "SqlAes256CbcFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlClientEncryptionAlgorithm,System.Data", "SqlClientEncryptionAlgorithm");
            feature.AddKnownType("System.Data.SqlClient.SqlClientEncryptionAlgorithmFactory,System.Data", "SqlClientEncryptionAlgorithmFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlClientEncryptionType,System.Data", "SqlClientEncryptionType");
            feature.AddKnownType("System.Data.SqlClient.SqlClientSymmetricKey,System.Data", "SqlClientSymmetricKey");
            feature.AddKnownType("System.Data.SqlClient.ApplicationIntent,System.Data", "ApplicationIntent");
            feature.AddKnownType("System.Data.SqlClient.SqlCredential,System.Data", "SqlCredential");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionPoolKey,System.Data", "SqlConnectionPoolKey");
            feature.AddKnownType("System.Data.SqlClient.AssemblyCache,System.Data", "AssemblyCache");
            feature.AddKnownType("System.Data.SqlClient.SqlRowsCopiedEventArgs,System.Data", "SqlRowsCopiedEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer,System.Data", "SqlBuffer");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+StorageType,System.Data", "StorageType");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+DateTimeInfo,System.Data", "DateTimeInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+NumericInfo,System.Data", "NumericInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+TimeInfo,System.Data", "TimeInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+DateTime2Info,System.Data", "DateTime2Info");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+DateTimeOffsetInfo,System.Data", "DateTimeOffsetInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+Storage,System.Data", "Storage");
            feature.AddKnownType("System.Data.SqlClient._ColumnMapping,System.Data", "_ColumnMapping");
            feature.AddKnownType("System.Data.SqlClient.Row,System.Data", "Row");
            feature.AddKnownType("System.Data.SqlClient.Result,System.Data", "Result");
            feature.AddKnownType("System.Data.SqlClient.BulkCopySimpleResultSet,System.Data", "BulkCopySimpleResultSet");
            feature.AddKnownType("System.Data.SqlClient.SqlBulkCopy,System.Data", "SqlBulkCopy");
            feature.AddKnownType("System.Data.SqlClient.SqlBulkCopyColumnMapping,System.Data", "SqlBulkCopyColumnMapping");
            feature.AddKnownType("System.Data.SqlClient.SqlBulkCopyColumnMappingCollection,System.Data", "SqlBulkCopyColumnMappingCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlBulkCopyOptions,System.Data", "SqlBulkCopyOptions");
            feature.AddKnownType("System.Data.SqlClient.SqlCachedBuffer,System.Data", "SqlCachedBuffer");
            feature.AddKnownType("System.Data.SqlClient.SqlClientFactory,System.Data", "SqlClientFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlClientPermission,System.Data", "SqlClientPermission");
            feature.AddKnownType("System.Data.SqlClient.SqlClientPermissionAttribute,System.Data", "SqlClientPermissionAttribute");
            feature.AddKnownType("System.Data.SqlClient.SqlCommand,System.Data", "SqlCommand");
            feature.AddKnownType("System.Data.SqlClient.SqlCommandBuilder,System.Data", "SqlCommandBuilder");
            feature.AddKnownType("System.Data.SqlClient.SqlCommandSet,System.Data", "SqlCommandSet");
            feature.AddKnownType("System.Data.SqlClient.SqlConnection,System.Data", "SqlConnection");
            feature.AddKnownType("System.Data.SqlClient.SQLDebugging,System.Data", "SQLDebugging");
            feature.AddKnownType("System.Data.SqlClient.ISQLDebug,System.Data", "ISQLDebug");
            feature.AddKnownType("System.Data.SqlClient.SqlDebugContext,System.Data", "SqlDebugContext");
            feature.AddKnownType("System.Data.SqlClient.MEMMAP,System.Data", "MEMMAP");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionFactory,System.Data", "SqlConnectionFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlPerformanceCounters,System.Data", "SqlPerformanceCounters");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionPoolGroupProviderInfo,System.Data", "SqlConnectionPoolGroupProviderInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionPoolProviderInfo,System.Data", "SqlConnectionPoolProviderInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionString,System.Data", "SqlConnectionString");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionString+TypeSystem,System.Data", "TypeSystem");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionString+TransactionBindingEnum,System.Data", "TransactionBindingEnum");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder,System.Data", "SqlConnectionStringBuilder");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder+NetworkLibraryConverter,System.Data", "NetworkLibraryConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder+SqlDataSourceConverter,System.Data", "SqlDataSourceConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder+SqlInitialCatalogConverter,System.Data", "SqlInitialCatalogConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder+SqlConnectionStringBuilderConverter,System.Data", "SqlConnectionStringBuilderConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionTimeoutErrorPhase,System.Data", "SqlConnectionTimeoutErrorPhase");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionInternalSourceType,System.Data", "SqlConnectionInternalSourceType");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionTimeoutPhaseDuration,System.Data", "SqlConnectionTimeoutPhaseDuration");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionTimeoutErrorInternal,System.Data", "SqlConnectionTimeoutErrorInternal");
            feature.AddKnownType("System.Data.SqlClient.SqlDataAdapter,System.Data", "SqlDataAdapter");
            feature.AddKnownType("System.Data.SqlClient.SqlDataReader,System.Data", "SqlDataReader");
            feature.AddKnownType("System.Data.SqlClient.SqlDataReader+SharedState,System.Data", "SharedState");
            feature.AddKnownType("System.Data.SqlClient.SqlDataReaderSmi,System.Data", "SqlDataReaderSmi");
            feature.AddKnownType("System.Data.SqlClient.SqlDataReaderSmi+PositionState,System.Data", "PositionState");
            feature.AddKnownType("System.Data.SqlClient.SqlDelegatedTransaction,System.Data", "SqlDelegatedTransaction");
            feature.AddKnownType("System.Data.SqlClient.SqlDependency,System.Data", "SqlDependency");
            feature.AddKnownType("System.Data.SqlClient.SqlDependency+IdentityUserNamePair,System.Data", "IdentityUserNamePair");
            feature.AddKnownType("System.Data.SqlClient.SqlDependency+EventContextPair,System.Data", "EventContextPair");
            feature.AddKnownType("System.Data.SqlClient.SqlDependencyPerAppDomainDispatcher,System.Data", "SqlDependencyPerAppDomainDispatcher");
            feature.AddKnownType("System.Data.SqlClient.SqlNotification,System.Data", "SqlNotification");
            feature.AddKnownType("System.Data.SqlClient.MetaType,System.Data", "MetaType");
            feature.AddKnownType("System.Data.SqlClient.TdsDateTime,System.Data", "TdsDateTime");
            feature.AddKnownType("System.Data.SqlClient.SqlError,System.Data", "SqlError");
            feature.AddKnownType("System.Data.SqlClient.SqlErrorCollection,System.Data", "SqlErrorCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlException,System.Data", "SqlException");
            feature.AddKnownType("System.Data.SqlClient.SqlInfoMessageEventArgs,System.Data", "SqlInfoMessageEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnection,System.Data", "SqlInternalConnection");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnection+TransactionRequest,System.Data", "TransactionRequest");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnectionSmi,System.Data", "SqlInternalConnectionSmi");
            feature.AddKnownType("System.Data.SqlClient.SessionStateRecord,System.Data", "SessionStateRecord");
            feature.AddKnownType("System.Data.SqlClient.SessionData,System.Data", "SessionData");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnectionTds,System.Data", "SqlInternalConnectionTds");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnectionTds+SyncAsyncLock,System.Data", "SyncAsyncLock");
            feature.AddKnownType("System.Data.SqlClient.ServerInfo,System.Data", "ServerInfo");
            feature.AddKnownType("System.Data.SqlClient.TransactionState,System.Data", "TransactionState");
            feature.AddKnownType("System.Data.SqlClient.TransactionType,System.Data", "TransactionType");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalTransaction,System.Data", "SqlInternalTransaction");
            feature.AddKnownType("System.Data.SqlClient.SqlMetaDataFactory,System.Data", "SqlMetaDataFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlNotificationEventArgs,System.Data", "SqlNotificationEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlNotificationInfo,System.Data", "SqlNotificationInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlNotificationSource,System.Data", "SqlNotificationSource");
            feature.AddKnownType("System.Data.SqlClient.SqlNotificationType,System.Data", "SqlNotificationType");
            feature.AddKnownType("System.Data.SqlClient.DataFeed,System.Data", "DataFeed");
            feature.AddKnownType("System.Data.SqlClient.StreamDataFeed,System.Data", "StreamDataFeed");
            feature.AddKnownType("System.Data.SqlClient.TextDataFeed,System.Data", "TextDataFeed");
            feature.AddKnownType("System.Data.SqlClient.XmlDataFeed,System.Data", "XmlDataFeed");
            feature.AddKnownType("System.Data.SqlClient.SqlParameter,System.Data", "SqlParameter");
            feature.AddKnownType("System.Data.SqlClient.SqlParameter+SqlParameterConverter,System.Data", "SqlParameterConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlParameterCollection,System.Data", "SqlParameterCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlReferenceCollection,System.Data", "SqlReferenceCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlRowUpdatedEventArgs,System.Data", "SqlRowUpdatedEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlRowUpdatingEventArgs,System.Data", "SqlRowUpdatingEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlSequentialStream,System.Data", "SqlSequentialStream");
            feature.AddKnownType("System.Data.SqlClient.SqlSequentialStreamSmi,System.Data", "SqlSequentialStreamSmi");
            feature.AddKnownType("System.Data.SqlClient.SqlSequentialTextReader,System.Data", "SqlSequentialTextReader");
            feature.AddKnownType("System.Data.SqlClient.SqlUnicodeEncoding,System.Data", "SqlUnicodeEncoding");
            feature.AddKnownType("System.Data.SqlClient.SqlSequentialTextReaderSmi,System.Data", "SqlSequentialTextReaderSmi");
            feature.AddKnownType("System.Data.SqlClient.SqlStatistics,System.Data", "SqlStatistics");
            feature.AddKnownType("System.Data.SqlClient.SqlStream,System.Data", "SqlStream");
            feature.AddKnownType("System.Data.SqlClient.SqlCachedStream,System.Data", "SqlCachedStream");
            feature.AddKnownType("System.Data.SqlClient.SqlStreamingXml,System.Data", "SqlStreamingXml");
            feature.AddKnownType("System.Data.SqlClient.SqlTransaction,System.Data", "SqlTransaction");
            feature.AddKnownType("System.Data.SqlClient.SqlUdtInfo,System.Data", "SqlUdtInfo");
            feature.AddKnownType("System.Data.SqlClient.InOutOfProcHelper,System.Data", "InOutOfProcHelper");
            feature.AddKnownType("System.Data.SqlClient.SQLMessage,System.Data", "SQLMessage");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+FeatureExtension,System.Data", "TdsEnums.FeatureExtension");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+FedAuthLibrary,System.Data", "TdsEnums.FedAuthLibrary");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+ActiveDirectoryWorkflow,System.Data", "TdsEnums.ActiveDirectoryWorkflow");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+TransactionManagerRequestType,System.Data", "TransactionManagerRequestType");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+TransactionManagerIsolationLevel,System.Data", "TransactionManagerIsolationLevel");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+FedAuthInfoId,System.Data", "FedAuthInfoId");
            feature.AddKnownType("System.Data.SqlClient.ParsingErrorState,System.Data", "ParsingErrorState");
            feature.AddKnownType("System.Data.SqlClient.SniContext,System.Data", "SniContext");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionColumnEncryptionSetting,System.Data", "SqlConnectionColumnEncryptionSetting");
            feature.AddKnownType("System.Data.SqlClient.SqlCommandColumnEncryptionSetting,System.Data", "SqlCommandColumnEncryptionSetting");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationMethod,System.Data", "SqlAuthenticationMethod");
            feature.AddKnownType("System.Data.SqlClient.TransparentNetworkResolutionState,System.Data", "TransparentNetworkResolutionState");
            feature.AddKnownType("System.Data.SqlClient.ActiveDirectoryAuthentication,System.Data", "ActiveDirectoryAuthentication");
            feature.AddKnownType("System.Data.SqlClient.TdsParser,System.Data", "TdsParser");
            feature.AddKnownType("System.Data.SqlClient.TdsParser+ReliabilitySection,System.Data", "ReliabilitySection");
            feature.AddKnownType("System.Data.SqlClient.CallbackType,System.Data", "CallbackType");
            feature.AddKnownType("System.Data.SqlClient.EncryptionOptions,System.Data", "EncryptionOptions");
            feature.AddKnownType("System.Data.SqlClient.PreLoginHandshakeStatus,System.Data", "PreLoginHandshakeStatus");
            feature.AddKnownType("System.Data.SqlClient.RunBehavior,System.Data", "RunBehavior");
            feature.AddKnownType("System.Data.SqlClient.TdsParserState,System.Data", "TdsParserState");
            feature.AddKnownType("System.Data.SqlClient.FederatedAuthenticationFeatureExtensionData,System.Data", "FederatedAuthenticationFeatureExtensionData");
            feature.AddKnownType("System.Data.SqlClient.SqlEncryptionKeyInfo,System.Data", "SqlEncryptionKeyInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlTceCipherInfoEntry,System.Data", "SqlTceCipherInfoEntry");
            feature.AddKnownType("System.Data.SqlClient.SqlTceCipherInfoTable,System.Data", "SqlTceCipherInfoTable");
            feature.AddKnownType("System.Data.SqlClient.SqlCollation,System.Data", "SqlCollation");
            feature.AddKnownType("System.Data.SqlClient.RoutingInfo,System.Data", "RoutingInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlEnvChange,System.Data", "SqlEnvChange");
            feature.AddKnownType("System.Data.SqlClient.SqlLogin,System.Data", "SqlLogin");
            feature.AddKnownType("System.Data.SqlClient.SqlLoginAck,System.Data", "SqlLoginAck");
            feature.AddKnownType("System.Data.SqlClient.SqlFedAuthInfo,System.Data", "SqlFedAuthInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlFedAuthToken,System.Data", "SqlFedAuthToken");
            feature.AddKnownType("System.Data.SqlClient._SqlMetaData,System.Data", "_SqlMetaData");
            feature.AddKnownType("System.Data.SqlClient._SqlMetaDataSet,System.Data", "_SqlMetaDataSet");
            feature.AddKnownType("System.Data.SqlClient._SqlMetaDataSetCollection,System.Data", "_SqlMetaDataSetCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlCipherMetadata,System.Data", "SqlCipherMetadata");
            feature.AddKnownType("System.Data.SqlClient.SqlMetaDataPriv,System.Data", "SqlMetaDataPriv");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionInputParameterInfo,System.Data", "SqlColumnEncryptionInputParameterInfo");
            feature.AddKnownType("System.Data.SqlClient._SqlRPC,System.Data", "_SqlRPC");
            feature.AddKnownType("System.Data.SqlClient.SqlReturnValue,System.Data", "SqlReturnValue");
            feature.AddKnownType("System.Data.SqlClient.MultiPartTableName,System.Data", "MultiPartTableName");
            feature.AddKnownType("System.Data.SqlClient.SNILoadHandle,System.Data", "SNILoadHandle");
            feature.AddKnownType("System.Data.SqlClient.SNIHandle,System.Data", "SNIHandle");
            feature.AddKnownType("System.Data.SqlClient.SNIPacket,System.Data", "SNIPacket");
            feature.AddKnownType("System.Data.SqlClient.WritePacketCache,System.Data", "WritePacketCache");
            feature.AddKnownType("System.Data.SqlClient.TdsParserSessionPool,System.Data", "TdsParserSessionPool");
            feature.AddKnownType("System.Data.SqlClient.LastIOTimer,System.Data", "LastIOTimer");
            feature.AddKnownType("System.Data.SqlClient.TdsParserStateObject,System.Data", "TdsParserStateObject");
            feature.AddKnownType("System.Data.SqlClient.TdsParserStaticMethods,System.Data", "TdsParserStaticMethods");
            feature.AddKnownType("System.Data.SqlClient.ParameterPeekAheadValue,System.Data", "ParameterPeekAheadValue");
            feature.AddKnownType("System.Data.SqlClient.SortOrder,System.Data", "SortOrder");
            feature.AddKnownType("System.Data.SqlClient.TdsParameterSetter,System.Data", "TdsParameterSetter");
            feature.AddKnownType("System.Data.SqlClient.TdsRecordBufferSetter,System.Data", "TdsRecordBufferSetter");
            feature.AddKnownType("System.Data.SqlClient.TdsValueSetter,System.Data", "TdsValueSetter");
            feature.AddKnownType("System.Data.SqlTypes.INullable,System.Data", "INullable");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+FileType,System.Data", "FileType");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+OBJECT_ATTRIBUTES,System.Data", "OBJECT_ATTRIBUTES");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+UNICODE_STRING,System.Data", "UNICODE_STRING");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+SecurityImpersonationLevel,System.Data", "SecurityImpersonationLevel");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+SECURITY_QUALITY_OF_SERVICE,System.Data", "SECURITY_QUALITY_OF_SERVICE");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+IO_STATUS_BLOCK,System.Data", "IO_STATUS_BLOCK");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+FILE_FULL_EA_INFORMATION,System.Data", "FILE_FULL_EA_INFORMATION");
            feature.AddKnownType("System.Data.SqlTypes.SqlBinary,System.Data", "SqlBinary");
            feature.AddKnownType("System.Data.SqlTypes.SqlBoolean,System.Data", "SqlBoolean");
            feature.AddKnownType("System.Data.SqlTypes.SqlByte,System.Data", "SqlByte");
            feature.AddKnownType("System.Data.SqlTypes.SqlBytesCharsState,System.Data", "SqlBytesCharsState");
            feature.AddKnownType("System.Data.SqlTypes.SqlBytes,System.Data", "SqlBytes");
            feature.AddKnownType("System.Data.SqlTypes.StreamOnSqlBytes,System.Data", "StreamOnSqlBytes");
            feature.AddKnownType("System.Data.SqlTypes.SqlChars,System.Data", "SqlChars");
            feature.AddKnownType("System.Data.SqlTypes.StreamOnSqlChars,System.Data", "StreamOnSqlChars");
            feature.AddKnownType("System.Data.SqlTypes.SqlStreamChars,System.Data", "SqlStreamChars");
            feature.AddKnownType("System.Data.SqlTypes.SqlDateTime,System.Data", "SqlDateTime");
            feature.AddKnownType("System.Data.SqlTypes.SqlDecimal,System.Data", "SqlDecimal");
            feature.AddKnownType("System.Data.SqlTypes.SqlDouble,System.Data", "SqlDouble");
            feature.AddKnownType("System.Data.SqlTypes.SqlFileStream,System.Data", "SqlFileStream");
            feature.AddKnownType("System.Data.SqlTypes.UnicodeString,System.Data", "UnicodeString");
            feature.AddKnownType("System.Data.SqlTypes.SecurityQualityOfService,System.Data", "SecurityQualityOfService");
            feature.AddKnownType("System.Data.SqlTypes.FileFullEaInformation,System.Data", "FileFullEaInformation");
            feature.AddKnownType("System.Data.SqlTypes.SqlGuid,System.Data", "SqlGuid");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt16,System.Data", "SqlInt16");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt32,System.Data", "SqlInt32");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt64,System.Data", "SqlInt64");
            feature.AddKnownType("System.Data.SqlTypes.SqlMoney,System.Data", "SqlMoney");
            feature.AddKnownType("System.Data.SqlTypes.SQLResource,System.Data", "SQLResource");
            feature.AddKnownType("System.Data.SqlTypes.SqlSingle,System.Data", "SqlSingle");
            feature.AddKnownType("System.Data.SqlTypes.SqlCompareOptions,System.Data", "SqlCompareOptions");
            feature.AddKnownType("System.Data.SqlTypes.SqlString,System.Data", "SqlString");
            feature.AddKnownType("System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper,System.Data", "SqlTypesSchemaImporterExtensionHelper");
            feature.AddKnownType("System.Data.SqlTypes.TypeCharSchemaImporterExtension,System.Data", "TypeCharSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeNCharSchemaImporterExtension,System.Data", "TypeNCharSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeVarCharSchemaImporterExtension,System.Data", "TypeVarCharSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeNVarCharSchemaImporterExtension,System.Data", "TypeNVarCharSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeTextSchemaImporterExtension,System.Data", "TypeTextSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeNTextSchemaImporterExtension,System.Data", "TypeNTextSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeVarBinarySchemaImporterExtension,System.Data", "TypeVarBinarySchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeBinarySchemaImporterExtension,System.Data", "TypeBinarySchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeVarImageSchemaImporterExtension,System.Data", "TypeVarImageSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeDecimalSchemaImporterExtension,System.Data", "TypeDecimalSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeNumericSchemaImporterExtension,System.Data", "TypeNumericSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeBigIntSchemaImporterExtension,System.Data", "TypeBigIntSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeIntSchemaImporterExtension,System.Data", "TypeIntSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeSmallIntSchemaImporterExtension,System.Data", "TypeSmallIntSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeTinyIntSchemaImporterExtension,System.Data", "TypeTinyIntSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeBitSchemaImporterExtension,System.Data", "TypeBitSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeFloatSchemaImporterExtension,System.Data", "TypeFloatSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeRealSchemaImporterExtension,System.Data", "TypeRealSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeDateTimeSchemaImporterExtension,System.Data", "TypeDateTimeSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeSmallDateTimeSchemaImporterExtension,System.Data", "TypeSmallDateTimeSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeMoneySchemaImporterExtension,System.Data", "TypeMoneySchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeSmallMoneySchemaImporterExtension,System.Data", "TypeSmallMoneySchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeUniqueIdentifierSchemaImporterExtension,System.Data", "TypeUniqueIdentifierSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.EComparison,System.Data", "EComparison");
            feature.AddKnownType("System.Data.SqlTypes.StorageState,System.Data", "StorageState");
            feature.AddKnownType("System.Data.SqlTypes.SqlTypeException,System.Data", "SqlTypeException");
            feature.AddKnownType("System.Data.SqlTypes.SqlNullValueException,System.Data", "SqlNullValueException");
            feature.AddKnownType("System.Data.SqlTypes.SqlTruncateException,System.Data", "SqlTruncateException");
            feature.AddKnownType("System.Data.SqlTypes.SqlNotFilledException,System.Data", "SqlNotFilledException");
            feature.AddKnownType("System.Data.SqlTypes.SqlAlreadyFilledException,System.Data", "SqlAlreadyFilledException");
            feature.AddKnownType("System.Data.SqlTypes.SQLDebug,System.Data", "SQLDebug");
            feature.AddKnownType("System.Data.SqlTypes.SqlXml,System.Data", "SqlXml");
            feature.AddKnownType("System.Data.SqlTypes.SqlXmlStreamWrapper,System.Data", "SqlXmlStreamWrapper");
            feature.AddKnownType("System.Xml.BaseTreeIterator,System.Data", "BaseTreeIterator");
            feature.AddKnownType("System.Xml.DataDocumentXPathNavigator,System.Data", "DataDocumentXPathNavigator");
            feature.AddKnownType("System.Xml.DataPointer,System.Data", "DataPointer");
            feature.AddKnownType("System.Xml.DataSetMapper,System.Data", "DataSetMapper");
            feature.AddKnownType("System.Xml.IXmlDataVirtualNode,System.Data", "IXmlDataVirtualNode");
            feature.AddKnownType("System.Xml.BaseRegionIterator,System.Data", "BaseRegionIterator");
            feature.AddKnownType("System.Xml.RegionIterator,System.Data", "RegionIterator");
            feature.AddKnownType("System.Xml.TreeIterator,System.Data", "TreeIterator");
            feature.AddKnownType("System.Xml.ElementState,System.Data", "ElementState");
            feature.AddKnownType("System.Xml.XmlBoundElement,System.Data", "XmlBoundElement");
            feature.AddKnownType("System.Xml.XmlDataDocument,System.Data", "XmlDataDocument");
            feature.AddKnownType("System.Xml.XmlDataImplementation,System.Data", "XmlDataImplementation");
            feature.AddKnownType("System.Xml.XPathNodePointer,System.Data", "XPathNodePointer");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCounter,System.Diagnostics.Tracing", "EventCounter");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCounterPayload,System.Diagnostics.Tracing", "EventCounterPayload");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCounterGroup,System.Diagnostics.Tracing", "EventCounterGroup");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCounterGroup+PayloadType,System.Diagnostics.Tracing", "PayloadType");
            feature.AddKnownType("System.Diagnostics.Tracing.EventListenerHelper,System.Diagnostics.Tracing", "EventListenerHelper");
            feature.AddKnownType("MatchState,System", "<global namespace>.MatchState");
            feature.AddKnownType("Microsoft.CSharp.CSharpCodeProvider,System", "Microsoft.CSharp.CSharpCodeProvider");
            feature.AddKnownType("Microsoft.CSharp.CSharpCodeGenerator,System", "Microsoft.CSharp.CSharpCodeGenerator");
            feature.AddKnownType("Microsoft.CSharp.CSharpTypeAttributeConverter,System", "Microsoft.CSharp.CSharpTypeAttributeConverter");
            feature.AddKnownType("Microsoft.CSharp.CSharpMemberAttributeConverter,System", "Microsoft.CSharp.CSharpMemberAttributeConverter");
            feature.AddKnownType("Microsoft.CSharp.CSharpModifierAttributeConverter,System", "Microsoft.CSharp.CSharpModifierAttributeConverter");
            feature.AddKnownType("Microsoft.VisualBasic.VBCodeProvider,System", "Microsoft.VisualBasic.VBCodeProvider");
            feature.AddKnownType("Microsoft.VisualBasic.VBCodeGenerator,System", "Microsoft.VisualBasic.VBCodeGenerator");
            feature.AddKnownType("Microsoft.VisualBasic.VBMemberAttributeConverter,System", "Microsoft.VisualBasic.VBMemberAttributeConverter");
            feature.AddKnownType("Microsoft.VisualBasic.VBTypeAttributeConverter,System", "Microsoft.VisualBasic.VBTypeAttributeConverter");
            feature.AddKnownType("Microsoft.VisualBasic.VBModifierAttributeConverter,System", "Microsoft.VisualBasic.VBModifierAttributeConverter");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+TEXTMETRIC,System", "Microsoft.Win32.TEXTMETRIC");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+STARTUPINFO,System", "Microsoft.Win32.STARTUPINFO");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES,System", "Microsoft.Win32.SECURITY_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+LogonFlags,System", "Microsoft.Win32.LogonFlags");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WNDCLASS_I,System", "Microsoft.Win32.WNDCLASS_I");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WNDCLASS,System", "Microsoft.Win32.WNDCLASS");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+MSG,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.MSG");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+StructFormatEnum,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.StructFormatEnum");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+StructFormat,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.StructFormat");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.PDH_RAW_COUNTER");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PDH_FMT_COUNTERVALUE,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.PDH_FMT_COUNTERVALUE");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_COUNTER_BLOCK,System", "Microsoft.Win32.PERF_COUNTER_BLOCK");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_COUNTER_DEFINITION,System", "Microsoft.Win32.PERF_COUNTER_DEFINITION");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_DATA_BLOCK,System", "Microsoft.Win32.PERF_DATA_BLOCK");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_INSTANCE_DEFINITION,System", "Microsoft.Win32.PERF_INSTANCE_DEFINITION");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_OBJECT_TYPE,System", "Microsoft.Win32.PERF_OBJECT_TYPE");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+NtModuleInfo,System", "Microsoft.Win32.NtModuleInfo");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WinProcessEntry,System", "Microsoft.Win32.WinProcessEntry");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WinThreadEntry,System", "Microsoft.Win32.WinThreadEntry");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WinModuleEntry,System", "Microsoft.Win32.WinModuleEntry");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+ShellExecuteInfo,System", "Microsoft.Win32.ShellExecuteInfo");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+NtProcessBasicInfo,System", "Microsoft.Win32.NtProcessBasicInfo");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+LUID,System", "Microsoft.Win32.LUID");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+TokenPrivileges,System", "Microsoft.Win32.TokenPrivileges");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+SYSTEMTIME,System", "Microsoft.Win32.SYSTEMTIME");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+VS_FIXEDFILEINFO,System", "Microsoft.Win32.VS_FIXEDFILEINFO");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+USEROBJECTFLAGS,System", "Microsoft.Win32.USEROBJECTFLAGS");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+MEMORY_BASIC_INFORMATION,System", "Microsoft.Win32.MEMORY_BASIC_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.PowerModeChangedEventArgs,System", "Microsoft.Win32.PowerModeChangedEventArgs");
            feature.AddKnownType("Microsoft.Win32.PowerModes,System", "Microsoft.Win32.PowerModes");
            feature.AddKnownType("Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION,System", "Microsoft.Win32.PROCESS_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.SessionEndedEventArgs,System", "Microsoft.Win32.SessionEndedEventArgs");
            feature.AddKnownType("Microsoft.Win32.SessionEndingEventArgs,System", "Microsoft.Win32.SessionEndingEventArgs");
            feature.AddKnownType("Microsoft.Win32.SessionEndReasons,System", "Microsoft.Win32.SessionEndReasons");
            feature.AddKnownType("Microsoft.Win32.SessionSwitchEventArgs,System", "Microsoft.Win32.SessionSwitchEventArgs");
            feature.AddKnownType("Microsoft.Win32.SessionSwitchReason,System", "Microsoft.Win32.SessionSwitchReason");
            feature.AddKnownType("Microsoft.Win32.SystemEvents,System", "Microsoft.Win32.SystemEvents");
            feature.AddKnownType("Microsoft.Win32.TimerElapsedEventArgs,System", "Microsoft.Win32.TimerElapsedEventArgs");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+WIN32_FILE_ATTRIBUTE_DATA,System", "Microsoft.Win32.Microsoft.Win32.UnsafeNativeMethods.WIN32_FILE_ATTRIBUTE_DATA");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+DCB,System", "Microsoft.Win32.DCB");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+COMSTAT,System", "Microsoft.Win32.COMSTAT");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+COMMTIMEOUTS,System", "Microsoft.Win32.COMMTIMEOUTS");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+COMMPROP,System", "Microsoft.Win32.COMMPROP");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+IMarshal,System", "Microsoft.Win32.IMarshal");
            feature.AddKnownType("Microsoft.Win32.UserPreferenceCategory,System", "Microsoft.Win32.UserPreferenceCategory");
            feature.AddKnownType("Microsoft.Win32.UserPreferenceChangedEventArgs,System", "Microsoft.Win32.UserPreferenceChangedEventArgs");
            feature.AddKnownType("Microsoft.Win32.UserPreferenceChangingEventArgs,System", "Microsoft.Win32.UserPreferenceChangingEventArgs");
            feature.AddKnownType("Microsoft.Win32.InternetSecurityManager,System", "Microsoft.Win32.InternetSecurityManager");
            feature.AddKnownType("Microsoft.Win32.IInternetSecurityManager,System", "Microsoft.Win32.IInternetSecurityManager");
            feature.AddKnownType("Microsoft.Win32.IntranetZoneCredentialPolicy,System", "Microsoft.Win32.IntranetZoneCredentialPolicy");
            feature.AddKnownType("Microsoft.Win32.WinInetCache,System", "Microsoft.Win32.WinInetCache");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeEventLogReadHandle,System", "Microsoft.Win32.SafeHandles.SafeEventLogReadHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeEventLogWriteHandle,System", "Microsoft.Win32.SafeHandles.SafeEventLogWriteHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileMappingHandle,System", "Microsoft.Win32.SafeHandles.SafeFileMappingHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileMapViewHandle,System", "Microsoft.Win32.SafeHandles.SafeFileMapViewHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLibraryHandle,System", "Microsoft.Win32.SafeHandles.SafeLibraryHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLocalMemHandle,System", "Microsoft.Win32.SafeHandles.SafeLocalMemHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeProcessHandle,System", "Microsoft.Win32.SafeHandles.SafeProcessHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeTimerHandle,System", "Microsoft.Win32.SafeHandles.SafeTimerHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeThreadHandle,System", "Microsoft.Win32.SafeHandles.SafeThreadHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeUserTokenHandle,System", "Microsoft.Win32.SafeHandles.SafeUserTokenHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeX509ChainHandle,System", "Microsoft.Win32.SafeHandles.SafeX509ChainHandle");
            feature.AddKnownType("System.ExceptionArgument,System", "ExceptionArgument");
            feature.AddKnownType("System.ExceptionResource,System", "ExceptionResource");
            feature.AddKnownType("System.UriParser,System", "UriParser");
            feature.AddKnownType("System.Uri,System", "Uri");
            feature.AddKnownType("System.UriBuilder,System", "UriBuilder");
            feature.AddKnownType("System.UriFormatException,System", "UriFormatException");
            feature.AddKnownType("System.UriHostNameType,System", "UriHostNameType");
            feature.AddKnownType("System.UriPartial,System", "UriPartial");
            feature.AddKnownType("System.DomainNameHelper,System", "DomainNameHelper");
            feature.AddKnownType("System.UncNameHelper,System", "UncNameHelper");
            feature.AddKnownType("System.UriSyntaxFlags,System", "UriSyntaxFlags");
            feature.AddKnownType("System.UriTypeConverter,System", "UriTypeConverter");
            feature.AddKnownType("System.UriKind,System", "UriKind");
            feature.AddKnownType("System.UriComponents,System", "UriComponents");
            feature.AddKnownType("System.UriFormat,System", "UriFormat");
            feature.AddKnownType("System.UriIdnScope,System", "UriIdnScope");
            feature.AddKnownType("System.ParsingError,System", "ParsingError");
            feature.AddKnownType("System.UnescapeMode,System", "UnescapeMode");
            feature.AddKnownType("System.GenericUriParserOptions,System", "GenericUriParserOptions");
            feature.AddKnownType("System.GenericUriParser,System", "GenericUriParser");
            feature.AddKnownType("System.HttpStyleUriParser,System", "HttpStyleUriParser");
            feature.AddKnownType("System.FtpStyleUriParser,System", "FtpStyleUriParser");
            feature.AddKnownType("System.FileStyleUriParser,System", "FileStyleUriParser");
            feature.AddKnownType("System.NewsStyleUriParser,System", "NewsStyleUriParser");
            feature.AddKnownType("System.GopherStyleUriParser,System", "GopherStyleUriParser");
            feature.AddKnownType("System.LdapStyleUriParser,System", "LdapStyleUriParser");
            feature.AddKnownType("System.NetPipeStyleUriParser,System", "NetPipeStyleUriParser");
            feature.AddKnownType("System.NetTcpStyleUriParser,System", "NetTcpStyleUriParser");
            feature.AddKnownType("System.InvariantComparer,System", "InvariantComparer");
            feature.AddKnownType("System.PinnableBufferCache,System", "PinnableBufferCache");
            feature.AddKnownType("System.Gen2GcCallback,System", "Gen2GcCallback");
            feature.AddKnownType("System.PinnableBufferCacheEventSource,System", "PinnableBufferCacheEventSource");
            feature.AddKnownType("System.SRDescriptionAttribute,System", "SRDescriptionAttribute");
            feature.AddKnownType("System.SRCategoryAttribute,System", "SRCategoryAttribute");
            feature.AddKnownType("System.SR,System", "SR");
            feature.AddKnownType("System.CodeDom.CodeArgumentReferenceExpression,System", "CodeArgumentReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeArrayCreateExpression,System", "CodeArrayCreateExpression");
            feature.AddKnownType("System.CodeDom.CodeArrayIndexerExpression,System", "CodeArrayIndexerExpression");
            feature.AddKnownType("System.CodeDom.CodeAssignStatement,System", "CodeAssignStatement");
            feature.AddKnownType("System.CodeDom.CodeAttachEventStatement,System", "CodeAttachEventStatement");
            feature.AddKnownType("System.CodeDom.CodeAttributeArgument,System", "CodeAttributeArgument");
            feature.AddKnownType("System.CodeDom.CodeAttributeArgumentCollection,System", "CodeAttributeArgumentCollection");
            feature.AddKnownType("System.CodeDom.CodeAttributeDeclaration,System", "CodeAttributeDeclaration");
            feature.AddKnownType("System.CodeDom.CodeAttributeDeclarationCollection,System", "CodeAttributeDeclarationCollection");
            feature.AddKnownType("System.CodeDom.CodeBaseReferenceExpression,System", "CodeBaseReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeBinaryOperatorExpression,System", "CodeBinaryOperatorExpression");
            feature.AddKnownType("System.CodeDom.CodeBinaryOperatorType,System", "CodeBinaryOperatorType");
            feature.AddKnownType("System.CodeDom.CodeCastExpression,System", "CodeCastExpression");
            feature.AddKnownType("System.CodeDom.CodeCatchClause,System", "CodeCatchClause");
            feature.AddKnownType("System.CodeDom.CodeCatchClauseCollection,System", "CodeCatchClauseCollection");
            feature.AddKnownType("System.CodeDom.CodeChecksumPragma,System", "CodeChecksumPragma");
            feature.AddKnownType("System.CodeDom.CodeComment,System", "CodeComment");
            feature.AddKnownType("System.CodeDom.CodeCommentStatement,System", "CodeCommentStatement");
            feature.AddKnownType("System.CodeDom.CodeCommentStatementCollection,System", "CodeCommentStatementCollection");
            feature.AddKnownType("System.CodeDom.CodeCompileUnit,System", "CodeCompileUnit");
            feature.AddKnownType("System.CodeDom.CodeConditionStatement,System", "CodeConditionStatement");
            feature.AddKnownType("System.CodeDom.CodeConstructor,System", "CodeConstructor");
            feature.AddKnownType("System.CodeDom.CodeDefaultValueExpression,System", "CodeDefaultValueExpression");
            feature.AddKnownType("System.CodeDom.CodeDelegateCreateExpression,System", "CodeDelegateCreateExpression");
            feature.AddKnownType("System.CodeDom.CodeDelegateInvokeExpression,System", "CodeDelegateInvokeExpression");
            feature.AddKnownType("System.CodeDom.CodeDirectionExpression,System", "CodeDirectionExpression");
            feature.AddKnownType("System.CodeDom.CodeDirective,System", "CodeDirective");
            feature.AddKnownType("System.CodeDom.CodeDirectiveCollection,System", "CodeDirectiveCollection");
            feature.AddKnownType("System.CodeDom.CodeEntryPointMethod,System", "CodeEntryPointMethod");
            feature.AddKnownType("System.CodeDom.CodeEventReferenceExpression,System", "CodeEventReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeExpression,System", "CodeExpression");
            feature.AddKnownType("System.CodeDom.CodeExpressionCollection,System", "CodeExpressionCollection");
            feature.AddKnownType("System.CodeDom.CodeExpressionStatement,System", "CodeExpressionStatement");
            feature.AddKnownType("System.CodeDom.CodeFieldReferenceExpression,System", "CodeFieldReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeGotoStatement,System", "CodeGotoStatement");
            feature.AddKnownType("System.CodeDom.CodeIndexerExpression,System", "CodeIndexerExpression");
            feature.AddKnownType("System.CodeDom.CodeIterationStatement,System", "CodeIterationStatement");
            feature.AddKnownType("System.CodeDom.CodeLabeledStatement,System", "CodeLabeledStatement");
            feature.AddKnownType("System.CodeDom.CodeLinePragma,System", "CodeLinePragma");
            feature.AddKnownType("System.CodeDom.CodeMemberEvent,System", "CodeMemberEvent");
            feature.AddKnownType("System.CodeDom.CodeMemberField,System", "CodeMemberField");
            feature.AddKnownType("System.CodeDom.CodeMemberMethod,System", "CodeMemberMethod");
            feature.AddKnownType("System.CodeDom.CodeMemberProperty,System", "CodeMemberProperty");
            feature.AddKnownType("System.CodeDom.CodeMethodInvokeExpression,System", "CodeMethodInvokeExpression");
            feature.AddKnownType("System.CodeDom.CodeMethodReferenceExpression,System", "CodeMethodReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeMethodReturnStatement,System", "CodeMethodReturnStatement");
            feature.AddKnownType("System.CodeDom.CodeNamespace,System", "CodeNamespace");
            feature.AddKnownType("System.CodeDom.CodeNamespaceCollection,System", "CodeNamespaceCollection");
            feature.AddKnownType("System.CodeDom.CodeNamespaceImport,System", "CodeNamespaceImport");
            feature.AddKnownType("System.CodeDom.CodeNamespaceImportCollection,System", "CodeNamespaceImportCollection");
            feature.AddKnownType("System.CodeDom.CodeObject,System", "CodeObject");
            feature.AddKnownType("System.CodeDom.CodeObjectCreateExpression,System", "CodeObjectCreateExpression");
            feature.AddKnownType("System.CodeDom.CodeParameterDeclarationExpression,System", "CodeParameterDeclarationExpression");
            feature.AddKnownType("System.CodeDom.CodeParameterDeclarationExpressionCollection,System", "CodeParameterDeclarationExpressionCollection");
            feature.AddKnownType("System.CodeDom.CodePrimitiveExpression,System", "CodePrimitiveExpression");
            feature.AddKnownType("System.CodeDom.CodePropertyReferenceExpression,System", "CodePropertyReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodePropertySetValueReferenceExpression,System", "CodePropertySetValueReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeRegionDirective,System", "CodeRegionDirective");
            feature.AddKnownType("System.CodeDom.CodeRegionMode,System", "CodeRegionMode");
            feature.AddKnownType("System.CodeDom.CodeRemoveEventStatement,System", "CodeRemoveEventStatement");
            feature.AddKnownType("System.CodeDom.CodeSnippetCompileUnit,System", "CodeSnippetCompileUnit");
            feature.AddKnownType("System.CodeDom.CodeSnippetExpression,System", "CodeSnippetExpression");
            feature.AddKnownType("System.CodeDom.CodeSnippetStatement,System", "CodeSnippetStatement");
            feature.AddKnownType("System.CodeDom.CodeSnippetTypeMember,System", "CodeSnippetTypeMember");
            feature.AddKnownType("System.CodeDom.CodeStatement,System", "CodeStatement");
            feature.AddKnownType("System.CodeDom.CodeStatementCollection,System", "CodeStatementCollection");
            feature.AddKnownType("System.CodeDom.CodeThisReferenceExpression,System", "CodeThisReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeThrowExceptionStatement,System", "CodeThrowExceptionStatement");
            feature.AddKnownType("System.CodeDom.CodeTryCatchFinallyStatement,System", "CodeTryCatchFinallyStatement");
            feature.AddKnownType("System.CodeDom.CodeTypeConstructor,System", "CodeTypeConstructor");
            feature.AddKnownType("System.CodeDom.CodeTypeDeclaration,System", "CodeTypeDeclaration");
            feature.AddKnownType("System.CodeDom.CodeTypeDeclarationCollection,System", "CodeTypeDeclarationCollection");
            feature.AddKnownType("System.CodeDom.CodeTypeDelegate,System", "CodeTypeDelegate");
            feature.AddKnownType("System.CodeDom.CodeTypeMember,System", "CodeTypeMember");
            feature.AddKnownType("System.CodeDom.CodeTypeMemberCollection,System", "CodeTypeMemberCollection");
            feature.AddKnownType("System.CodeDom.CodeTypeOfExpression,System", "CodeTypeOfExpression");
            feature.AddKnownType("System.CodeDom.CodeTypeParameter,System", "CodeTypeParameter");
            feature.AddKnownType("System.CodeDom.CodeTypeParameterCollection,System", "CodeTypeParameterCollection");
            feature.AddKnownType("System.CodeDom.CodeTypeReferenceOptions,System", "CodeTypeReferenceOptions");
            feature.AddKnownType("System.CodeDom.CodeTypeReference,System", "CodeTypeReference");
            feature.AddKnownType("System.CodeDom.CodeTypeReferenceCollection,System", "CodeTypeReferenceCollection");
            feature.AddKnownType("System.CodeDom.CodeTypeReferenceExpression,System", "CodeTypeReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeVariableDeclarationStatement,System", "CodeVariableDeclarationStatement");
            feature.AddKnownType("System.CodeDom.CodeVariableReferenceExpression,System", "CodeVariableReferenceExpression");
            feature.AddKnownType("System.CodeDom.FieldDirection,System", "FieldDirection");
            feature.AddKnownType("System.CodeDom.MemberAttributes,System", "MemberAttributes");
            feature.AddKnownType("System.CodeDom.Compiler.CodeCompiler,System", "CodeCompiler");
            feature.AddKnownType("System.CodeDom.Compiler.CodeDomCompilationConfiguration,System", "CodeDomCompilationConfiguration");
            feature.AddKnownType("System.CodeDom.Compiler.CodeDomCompilationConfiguration+SectionHandler,System", "SectionHandler");
            feature.AddKnownType("System.CodeDom.Compiler.CodeDomConfigurationHandler,System", "CodeDomConfigurationHandler");
            feature.AddKnownType("System.CodeDom.Compiler.CodeDomProvider,System", "CodeDomProvider");
            feature.AddKnownType("System.CodeDom.Compiler.CodeGenerator,System", "CodeGenerator");
            feature.AddKnownType("System.CodeDom.Compiler.CodeGeneratorOptions,System", "CodeGeneratorOptions");
            feature.AddKnownType("System.CodeDom.Compiler.CodeParser,System", "CodeParser");
            feature.AddKnownType("System.CodeDom.Compiler.CodeValidator,System", "CodeValidator");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerError,System", "CompilerError");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerErrorCollection,System", "CompilerErrorCollection");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerInfo,System", "CompilerInfo");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerParameters,System", "CompilerParameters");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerResults,System", "CompilerResults");
            feature.AddKnownType("System.CodeDom.Compiler.GeneratedCodeAttribute,System", "GeneratedCodeAttribute");
            feature.AddKnownType("System.CodeDom.Compiler.GeneratorSupport,System", "GeneratorSupport");
            feature.AddKnownType("System.CodeDom.Compiler.ICodeCompiler,System", "ICodeCompiler");
            feature.AddKnownType("System.CodeDom.Compiler.ICodeGenerator,System", "ICodeGenerator");
            feature.AddKnownType("System.CodeDom.Compiler.ICodeParser,System", "ICodeParser");
            feature.AddKnownType("System.CodeDom.Compiler.IndentedTextWriter,System", "IndentedTextWriter");
            feature.AddKnownType("System.CodeDom.Compiler.Indentation,System", "Indentation");
            feature.AddKnownType("System.CodeDom.Compiler.LanguageOptions,System", "LanguageOptions");
            feature.AddKnownType("System.CodeDom.Compiler.TempFileCollection,System", "TempFileCollection");
            feature.AddKnownType("System.Collections.Concurrent.BlockingCollection`1,System", "BlockingCollection'1");
            feature.AddKnownType("System.Collections.Concurrent.SystemThreadingCollections_BlockingCollectionDebugView`1,System", "SystemThreadingCollections_BlockingCollectionDebugView'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1,System", "ConcurrentBag'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1+Node,System", "Node'0");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1+ThreadLocalList,System", "ThreadLocalList'0");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1+ListOperation,System", "ListOperation'0");
            feature.AddKnownType("System.Collections.Concurrent.SystemThreadingCollection_IProducerConsumerCollectionDebugView`1,System", "SystemThreadingCollection_IProducerConsumerCollectionDebugView'1");
            feature.AddKnownType("System.Collections.Generic.System_CollectionDebugView`1,System", "System_CollectionDebugView'1");
            feature.AddKnownType("System.Collections.Generic.System_QueueDebugView`1,System", "System_QueueDebugView'1");
            feature.AddKnownType("System.Collections.Generic.System_StackDebugView`1,System", "System_StackDebugView'1");
            feature.AddKnownType("System.Collections.Generic.System_DictionaryDebugView`2,System", "System_DictionaryDebugView'2");
            feature.AddKnownType("System.Collections.Generic.System_DictionaryKeyCollectionDebugView`2,System", "System_DictionaryKeyCollectionDebugView'2");
            feature.AddKnownType("System.Collections.Generic.System_DictionaryValueCollectionDebugView`2,System", "System_DictionaryValueCollectionDebugView'2");
            feature.AddKnownType("System.Collections.Generic.LinkedList`1,System", "LinkedList'1");
            feature.AddKnownType("System.Collections.Generic.LinkedList`1+Enumerator,System", "LinkedList'1.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.LinkedListNode`1,System", "LinkedListNode'1");
            feature.AddKnownType("System.Collections.Generic.Queue`1,System", "Queue'1");
            feature.AddKnownType("System.Collections.Generic.Queue`1+Enumerator,System", "Queue'1.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.SortedList`2,System", "SortedList'2");
            feature.AddKnownType("System.Collections.Generic.Stack`1,System", "Stack'1");
            feature.AddKnownType("System.Collections.Generic.Stack`1+Enumerator,System", "Stack'1.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2,System", "SortedDictionary'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+Enumerator,System", "SortedDictionary'2.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+KeyCollection,System", "SortedDictionary'2.KeyCollection'0");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator,System", "SortedDictionary'2.KeyCollection'0.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+ValueCollection,System", "SortedDictionary'2.ValueCollection'0");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator,System", "SortedDictionary'2.ValueCollection'0.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+KeyValuePairComparer,System", "KeyValuePairComparer'0");
            feature.AddKnownType("System.Collections.Generic.TreeSet`1,System", "TreeSet'1");
            feature.AddKnownType("System.Collections.Generic.TreeRotation,System", "TreeRotation");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1,System", "SortedSet'1");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+TreeSubSet,System", "TreeSubSet'0");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+Node,System", "Node'0");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+Enumerator,System", "SortedSet'1.Enumerator'0");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+ElementCount,System", "ElementCount'0");
            feature.AddKnownType("System.Collections.Generic.SortedSetEqualityComparer`1,System", "SortedSetEqualityComparer'1");
            feature.AddKnownType("System.Collections.Generic.SortedSetDebugView`1,System", "SortedSetDebugView'1");
            feature.AddKnownType("System.Collections.Generic.ISet`1,System", "ISet'1");
            feature.AddKnownType("System.Collections.Generic.BitHelper,System", "BitHelper");
            feature.AddKnownType("System.Collections.ObjectModel.ObservableCollection`1,System", "ObservableCollection'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyObservableCollection`1,System", "ReadOnlyObservableCollection'1");
            feature.AddKnownType("System.Collections.Specialized.BitVector32,System", "BitVector32");
            feature.AddKnownType("System.Collections.Specialized.BitVector32+Section,System", "BitVector32.Section");
            feature.AddKnownType("System.Collections.Specialized.CollectionsUtil,System", "CollectionsUtil");
            feature.AddKnownType("System.Collections.Specialized.HybridDictionary,System", "HybridDictionary");
            feature.AddKnownType("System.Collections.Specialized.INotifyCollectionChanged,System", "INotifyCollectionChanged");
            feature.AddKnownType("System.Collections.Specialized.IOrderedDictionary,System", "IOrderedDictionary");
            feature.AddKnownType("System.Collections.Specialized.ListDictionary,System", "ListDictionary");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase,System", "NameObjectCollectionBase");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry,System", "NameObjectEntry");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase+NameObjectKeysEnumerator,System", "NameObjectKeysEnumerator");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase+KeysCollection,System", "NameObjectCollectionBase.KeysCollection");
            feature.AddKnownType("System.Collections.Specialized.CompatibleComparer,System", "CompatibleComparer");
            feature.AddKnownType("System.Collections.Specialized.NameValueCollection,System", "NameValueCollection");
            feature.AddKnownType("System.Collections.Specialized.NotifyCollectionChangedAction,System", "NotifyCollectionChangedAction");
            feature.AddKnownType("System.Collections.Specialized.NotifyCollectionChangedEventArgs,System", "NotifyCollectionChangedEventArgs");
            feature.AddKnownType("System.Collections.Specialized.OrderedDictionary,System", "OrderedDictionary");
            feature.AddKnownType("System.Collections.Specialized.StringCollection,System", "StringCollection");
            feature.AddKnownType("System.Collections.Specialized.StringEnumerator,System", "StringEnumerator");
            feature.AddKnownType("System.Collections.Specialized.StringDictionary,System", "StringDictionary");
            feature.AddKnownType("System.Collections.Specialized.StringDictionaryWithComparer,System", "StringDictionaryWithComparer");
            feature.AddKnownType("System.Collections.Specialized.BackCompatibleStringComparer,System", "BackCompatibleStringComparer");
            feature.AddKnownType("System.ComponentModel.AddingNewEventArgs,System", "AddingNewEventArgs");
            feature.AddKnownType("System.ComponentModel.AmbientValueAttribute,System", "AmbientValueAttribute");
            feature.AddKnownType("System.ComponentModel.ArrayConverter,System", "ArrayConverter");
            feature.AddKnownType("System.ComponentModel.ArraySubsetEnumerator,System", "ArraySubsetEnumerator");
            feature.AddKnownType("System.ComponentModel.AsyncCompletedEventArgs,System", "AsyncCompletedEventArgs");
            feature.AddKnownType("System.ComponentModel.AsyncOperation,System", "AsyncOperation");
            feature.AddKnownType("System.ComponentModel.AttributeCollection,System", "AttributeCollection");
            feature.AddKnownType("System.ComponentModel.AttributeProviderAttribute,System", "AttributeProviderAttribute");
            feature.AddKnownType("System.ComponentModel.BackgroundWorker,System", "BackgroundWorker");
            feature.AddKnownType("System.ComponentModel.ComponentEditor,System", "ComponentEditor");
            feature.AddKnownType("System.ComponentModel.BaseNumberConverter,System", "BaseNumberConverter");
            feature.AddKnownType("System.ComponentModel.BindableAttribute,System", "BindableAttribute");
            feature.AddKnownType("System.ComponentModel.BindableSupport,System", "BindableSupport");
            feature.AddKnownType("System.ComponentModel.BindingDirection,System", "BindingDirection");
            feature.AddKnownType("System.ComponentModel.BindingList`1,System", "BindingList'1");
            feature.AddKnownType("System.ComponentModel.BooleanConverter,System", "BooleanConverter");
            feature.AddKnownType("System.ComponentModel.BrowsableAttribute,System", "BrowsableAttribute");
            feature.AddKnownType("System.ComponentModel.ByteConverter,System", "ByteConverter");
            feature.AddKnownType("System.ComponentModel.CancelEventArgs,System", "CancelEventArgs");
            feature.AddKnownType("System.ComponentModel.CategoryAttribute,System", "CategoryAttribute");
            feature.AddKnownType("System.ComponentModel.CharConverter,System", "CharConverter");
            feature.AddKnownType("System.ComponentModel.CollectionChangeAction,System", "CollectionChangeAction");
            feature.AddKnownType("System.ComponentModel.CollectionChangeEventArgs,System", "CollectionChangeEventArgs");
            feature.AddKnownType("System.ComponentModel.CollectionConverter,System", "CollectionConverter");
            feature.AddKnownType("System.ComponentModel.ComplexBindingPropertiesAttribute,System", "ComplexBindingPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.Component,System", "Component");
            feature.AddKnownType("System.ComponentModel.ComponentCollection,System", "ComponentCollection");
            feature.AddKnownType("System.ComponentModel.ComponentConverter,System", "ComponentConverter");
            feature.AddKnownType("System.ComponentModel.ComponentResourceManager,System", "ComponentResourceManager");
            feature.AddKnownType("System.ComponentModel.Container,System", "Container");
            feature.AddKnownType("System.ComponentModel.ContainerFilterService,System", "ContainerFilterService");
            feature.AddKnownType("System.ComponentModel.CultureInfoConverter,System", "CultureInfoConverter");
            feature.AddKnownType("System.ComponentModel.CustomTypeDescriptor,System", "CustomTypeDescriptor");
            feature.AddKnownType("System.ComponentModel.DataErrorsChangedEventArgs,System", "DataErrorsChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.DataObjectAttribute,System", "DataObjectAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectFieldAttribute,System", "DataObjectFieldAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectMethodAttribute,System", "DataObjectMethodAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectMethodType,System", "DataObjectMethodType");
            feature.AddKnownType("System.ComponentModel.DateTimeConverter,System", "DateTimeConverter");
            feature.AddKnownType("System.ComponentModel.DateTimeOffsetConverter,System", "DateTimeOffsetConverter");
            feature.AddKnownType("System.ComponentModel.DecimalConverter,System", "DecimalConverter");
            feature.AddKnownType("System.ComponentModel.DefaultBindingPropertyAttribute,System", "DefaultBindingPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.DefaultEventAttribute,System", "DefaultEventAttribute");
            feature.AddKnownType("System.ComponentModel.DefaultPropertyAttribute,System", "DefaultPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.DefaultValueAttribute,System", "DefaultValueAttribute");
            feature.AddKnownType("System.ComponentModel.DelegatingTypeDescriptionProvider,System", "DelegatingTypeDescriptionProvider");
            feature.AddKnownType("System.ComponentModel.DescriptionAttribute,System", "DescriptionAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerAttribute,System", "DesignerAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerCategoryAttribute,System", "DesignerCategoryAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerSerializationVisibility,System", "DesignerSerializationVisibility");
            feature.AddKnownType("System.ComponentModel.DesignerSerializationVisibilityAttribute,System", "DesignerSerializationVisibilityAttribute");
            feature.AddKnownType("System.ComponentModel.DesignOnlyAttribute,System", "DesignOnlyAttribute");
            feature.AddKnownType("System.ComponentModel.DesignTimeVisibleAttribute,System", "DesignTimeVisibleAttribute");
            feature.AddKnownType("System.ComponentModel.DisplayNameAttribute,System", "DisplayNameAttribute");
            feature.AddKnownType("System.ComponentModel.DoubleConverter,System", "DoubleConverter");
            feature.AddKnownType("System.ComponentModel.DoWorkEventArgs,System", "DoWorkEventArgs");
            feature.AddKnownType("System.ComponentModel.EditorAttribute,System", "EditorAttribute");
            feature.AddKnownType("System.ComponentModel.EditorBrowsableAttribute,System", "EditorBrowsableAttribute");
            feature.AddKnownType("System.ComponentModel.EditorBrowsableState,System", "EditorBrowsableState");
            feature.AddKnownType("System.ComponentModel.EnumConverter,System", "EnumConverter");
            feature.AddKnownType("System.ComponentModel.EventDescriptor,System", "EventDescriptor");
            feature.AddKnownType("System.ComponentModel.EventDescriptorCollection,System", "EventDescriptorCollection");
            feature.AddKnownType("System.ComponentModel.EventHandlerList,System", "EventHandlerList");
            feature.AddKnownType("System.ComponentModel.ExpandableObjectConverter,System", "ExpandableObjectConverter");
            feature.AddKnownType("System.ComponentModel.ExtendedPropertyDescriptor,System", "ExtendedPropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.ExtenderProvidedPropertyAttribute,System", "ExtenderProvidedPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.GuidConverter,System", "GuidConverter");
            feature.AddKnownType("System.ComponentModel.HandledEventArgs,System", "HandledEventArgs");
            feature.AddKnownType("System.ComponentModel.IBindingList,System", "IBindingList");
            feature.AddKnownType("System.ComponentModel.IBindingListView,System", "IBindingListView");
            feature.AddKnownType("System.ComponentModel.ICancelAddNew,System", "ICancelAddNew");
            feature.AddKnownType("System.ComponentModel.IChangeTracking,System", "IChangeTracking");
            feature.AddKnownType("System.ComponentModel.IComNativeDescriptorHandler,System", "IComNativeDescriptorHandler");
            feature.AddKnownType("System.ComponentModel.IComponent,System", "IComponent");
            feature.AddKnownType("System.ComponentModel.IContainer,System", "IContainer");
            feature.AddKnownType("System.ComponentModel.ICustomTypeDescriptor,System", "ICustomTypeDescriptor");
            feature.AddKnownType("System.ComponentModel.IDataErrorInfo,System", "IDataErrorInfo");
            feature.AddKnownType("System.ComponentModel.IEditableObject,System", "IEditableObject");
            feature.AddKnownType("System.ComponentModel.IExtenderProvider,System", "IExtenderProvider");
            feature.AddKnownType("System.ComponentModel.IIntellisenseBuilder,System", "IIntellisenseBuilder");
            feature.AddKnownType("System.ComponentModel.IListSource,System", "IListSource");
            feature.AddKnownType("System.ComponentModel.ImmutableObjectAttribute,System", "ImmutableObjectAttribute");
            feature.AddKnownType("System.ComponentModel.INestedContainer,System", "INestedContainer");
            feature.AddKnownType("System.ComponentModel.INestedSite,System", "INestedSite");
            feature.AddKnownType("System.ComponentModel.InitializationEventAttribute,System", "InitializationEventAttribute");
            feature.AddKnownType("System.ComponentModel.INotifyDataErrorInfo,System", "INotifyDataErrorInfo");
            feature.AddKnownType("System.ComponentModel.INotifyPropertyChanged,System", "INotifyPropertyChanged");
            feature.AddKnownType("System.ComponentModel.INotifyPropertyChanging,System", "INotifyPropertyChanging");
            feature.AddKnownType("System.ComponentModel.InstallerTypeAttribute,System", "InstallerTypeAttribute");
            feature.AddKnownType("System.ComponentModel.InstanceCreationEditor,System", "InstanceCreationEditor");
            feature.AddKnownType("System.ComponentModel.Int16Converter,System", "Int16Converter");
            feature.AddKnownType("System.ComponentModel.Int32Converter,System", "Int32Converter");
            feature.AddKnownType("System.ComponentModel.Int64Converter,System", "Int64Converter");
            feature.AddKnownType("System.ComponentModel.InvalidAsynchronousStateException,System", "InvalidAsynchronousStateException");
            feature.AddKnownType("System.ComponentModel.InvalidEnumArgumentException,System", "InvalidEnumArgumentException");
            feature.AddKnownType("System.ComponentModel.IRaiseItemChangedEvents,System", "IRaiseItemChangedEvents");
            feature.AddKnownType("System.ComponentModel.IRevertibleChangeTracking,System", "IRevertibleChangeTracking");
            feature.AddKnownType("System.ComponentModel.ISite,System", "ISite");
            feature.AddKnownType("System.ComponentModel.ISupportInitialize,System", "ISupportInitialize");
            feature.AddKnownType("System.ComponentModel.ISupportInitializeNotification,System", "ISupportInitializeNotification");
            feature.AddKnownType("System.ComponentModel.ISynchronizeInvoke,System", "ISynchronizeInvoke");
            feature.AddKnownType("System.ComponentModel.ITypeDescriptorContext,System", "ITypeDescriptorContext");
            feature.AddKnownType("System.ComponentModel.ITypedList,System", "ITypedList");
            feature.AddKnownType("System.ComponentModel.License,System", "License");
            feature.AddKnownType("System.ComponentModel.LicenseContext,System", "LicenseContext");
            feature.AddKnownType("System.ComponentModel.LicenseException,System", "LicenseException");
            feature.AddKnownType("System.ComponentModel.LicenseManager,System", "LicenseManager");
            feature.AddKnownType("System.ComponentModel.LicenseProvider,System", "LicenseProvider");
            feature.AddKnownType("System.ComponentModel.LicenseProviderAttribute,System", "LicenseProviderAttribute");
            feature.AddKnownType("System.ComponentModel.LicenseUsageMode,System", "LicenseUsageMode");
            feature.AddKnownType("System.ComponentModel.LicFileLicenseProvider,System", "LicFileLicenseProvider");
            feature.AddKnownType("System.ComponentModel.ListBindableAttribute,System", "ListBindableAttribute");
            feature.AddKnownType("System.ComponentModel.ListChangedEventArgs,System", "ListChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.ListChangedType,System", "ListChangedType");
            feature.AddKnownType("System.ComponentModel.ListSortDescription,System", "ListSortDescription");
            feature.AddKnownType("System.ComponentModel.ListSortDescriptionCollection,System", "ListSortDescriptionCollection");
            feature.AddKnownType("System.ComponentModel.ListSortDirection,System", "ListSortDirection");
            feature.AddKnownType("System.ComponentModel.LocalizableAttribute,System", "LocalizableAttribute");
            feature.AddKnownType("System.ComponentModel.LookupBindingPropertiesAttribute,System", "LookupBindingPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.MarshalByValueComponent,System", "MarshalByValueComponent");
            feature.AddKnownType("System.ComponentModel.MaskedTextProvider,System", "MaskedTextProvider");
            feature.AddKnownType("System.ComponentModel.MaskedTextResultHint,System", "MaskedTextResultHint");
            feature.AddKnownType("System.ComponentModel.MemberDescriptor,System", "MemberDescriptor");
            feature.AddKnownType("System.ComponentModel.MergablePropertyAttribute,System", "MergablePropertyAttribute");
            feature.AddKnownType("System.ComponentModel.MultilineStringConverter,System", "MultilineStringConverter");
            feature.AddKnownType("System.ComponentModel.NestedContainer,System", "NestedContainer");
            feature.AddKnownType("System.ComponentModel.NullableConverter,System", "NullableConverter");
            feature.AddKnownType("System.ComponentModel.PasswordPropertyTextAttribute,System", "PasswordPropertyTextAttribute");
            feature.AddKnownType("System.ComponentModel.ProgressChangedEventArgs,System", "ProgressChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.PropertyChangedEventArgs,System", "PropertyChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.PropertyChangingEventArgs,System", "PropertyChangingEventArgs");
            feature.AddKnownType("System.ComponentModel.PropertyDescriptor,System", "PropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.PropertyDescriptorCollection,System", "PropertyDescriptorCollection");
            feature.AddKnownType("System.ComponentModel.ProvidePropertyAttribute,System", "ProvidePropertyAttribute");
            feature.AddKnownType("System.ComponentModel.ReadOnlyAttribute,System", "ReadOnlyAttribute");
            feature.AddKnownType("System.ComponentModel.RecommendedAsConfigurableAttribute,System", "RecommendedAsConfigurableAttribute");
            feature.AddKnownType("System.ComponentModel.ReferenceConverter,System", "ReferenceConverter");
            feature.AddKnownType("System.ComponentModel.ReflectEventDescriptor,System", "ReflectEventDescriptor");
            feature.AddKnownType("System.ComponentModel.ReflectPropertyDescriptor,System", "ReflectPropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.ReflectTypeDescriptionProvider,System", "ReflectTypeDescriptionProvider");
            feature.AddKnownType("System.ComponentModel.RefreshEventArgs,System", "RefreshEventArgs");
            feature.AddKnownType("System.ComponentModel.RunInstallerAttribute,System", "RunInstallerAttribute");
            feature.AddKnownType("System.ComponentModel.RunWorkerCompletedEventArgs,System", "RunWorkerCompletedEventArgs");
            feature.AddKnownType("System.ComponentModel.SByteConverter,System", "SByteConverter");
            feature.AddKnownType("System.ComponentModel.SettingsBindableAttribute,System", "SettingsBindableAttribute");
            feature.AddKnownType("System.ComponentModel.SingleConverter,System", "SingleConverter");
            feature.AddKnownType("System.ComponentModel.StringConverter,System", "StringConverter");
            feature.AddKnownType("System.ComponentModel.TimeSpanConverter,System", "TimeSpanConverter");
            feature.AddKnownType("System.ComponentModel.ToolboxItemFilterAttribute,System", "ToolboxItemFilterAttribute");
            feature.AddKnownType("System.ComponentModel.ToolboxItemFilterType,System", "ToolboxItemFilterType");
            feature.AddKnownType("System.ComponentModel.TypeConverter,System", "TypeConverter");
            feature.AddKnownType("System.ComponentModel.TypeConverter+SimplePropertyDescriptor,System", "SimplePropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.TypeConverter+StandardValuesCollection,System", "TypeConverter.StandardValuesCollection");
            feature.AddKnownType("System.ComponentModel.TypeConverterAttribute,System", "TypeConverterAttribute");
            feature.AddKnownType("System.ComponentModel.TypeDescriptionProvider,System", "TypeDescriptionProvider");
            feature.AddKnownType("System.ComponentModel.TypeDescriptionProviderAttribute,System", "TypeDescriptionProviderAttribute");
            feature.AddKnownType("System.ComponentModel.TypeDescriptor,System", "TypeDescriptor");
            feature.AddKnownType("System.ComponentModel.TypeListConverter,System", "TypeListConverter");
            feature.AddKnownType("System.ComponentModel.UInt16Converter,System", "UInt16Converter");
            feature.AddKnownType("System.ComponentModel.UInt32Converter,System", "UInt32Converter");
            feature.AddKnownType("System.ComponentModel.UInt64Converter,System", "UInt64Converter");
            feature.AddKnownType("System.ComponentModel.WarningException,System", "WarningException");
            feature.AddKnownType("System.ComponentModel.Win32Exception,System", "Win32Exception");
            feature.AddKnownType("System.ComponentModel.InheritanceAttribute,System", "InheritanceAttribute");
            feature.AddKnownType("System.ComponentModel.InheritanceLevel,System", "InheritanceLevel");
            feature.AddKnownType("System.ComponentModel.NotifyParentPropertyAttribute,System", "NotifyParentPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.ParenthesizePropertyNameAttribute,System", "ParenthesizePropertyNameAttribute");
            feature.AddKnownType("System.ComponentModel.PropertyTabAttribute,System", "PropertyTabAttribute");
            feature.AddKnownType("System.ComponentModel.PropertyTabScope,System", "PropertyTabScope");
            feature.AddKnownType("System.ComponentModel.RefreshProperties,System", "RefreshProperties");
            feature.AddKnownType("System.ComponentModel.RefreshPropertiesAttribute,System", "RefreshPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.ToolboxItemAttribute,System", "ToolboxItemAttribute");
            feature.AddKnownType("System.ComponentModel.WeakHashtable,System", "WeakHashtable");
            feature.AddKnownType("System.ComponentModel.Design.TypeDescriptionProviderService,System", "TypeDescriptionProviderService");
            feature.AddKnownType("System.ComponentModel.Design.ActiveDesignerEventArgs,System", "ActiveDesignerEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.CheckoutException,System", "CheckoutException");
            feature.AddKnownType("System.ComponentModel.Design.CommandID,System", "CommandID");
            feature.AddKnownType("System.ComponentModel.Design.ComponentChangedEventArgs,System", "ComponentChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentChangingEventArgs,System", "ComponentChangingEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentEventArgs,System", "ComponentEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentRenameEventArgs,System", "ComponentRenameEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService,System", "DesignerOptionService");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection,System", "DesignerOptionService.DesignerOptionCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService+DesignerOptionConverter,System", "DesignerOptionConverter");
            feature.AddKnownType("System.ComponentModel.Design.DesignerTransaction,System", "DesignerTransaction");
            feature.AddKnownType("System.ComponentModel.Design.DesignerTransactionCloseEventArgs,System", "DesignerTransactionCloseEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.DesignerVerb,System", "DesignerVerb");
            feature.AddKnownType("System.ComponentModel.Design.DesignerVerbCollection,System", "DesignerVerbCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesigntimeLicenseContext,System", "DesigntimeLicenseContext");
            feature.AddKnownType("System.ComponentModel.Design.RuntimeLicenseContext,System", "RuntimeLicenseContext");
            feature.AddKnownType("System.ComponentModel.Design.DesigntimeLicenseContextSerializer,System", "DesigntimeLicenseContextSerializer");
            feature.AddKnownType("System.ComponentModel.Design.DesignerCollection,System", "DesignerCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesignerEventArgs,System", "DesignerEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.HelpContextType,System", "HelpContextType");
            feature.AddKnownType("System.ComponentModel.Design.HelpKeywordAttribute,System", "HelpKeywordAttribute");
            feature.AddKnownType("System.ComponentModel.Design.HelpKeywordType,System", "HelpKeywordType");
            feature.AddKnownType("System.ComponentModel.Design.IComponentChangeService,System", "IComponentChangeService");
            feature.AddKnownType("System.ComponentModel.Design.IComponentDiscoveryService,System", "IComponentDiscoveryService");
            feature.AddKnownType("System.ComponentModel.Design.IComponentInitializer,System", "IComponentInitializer");
            feature.AddKnownType("System.ComponentModel.Design.IDesigner,System", "IDesigner");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerEventService,System", "IDesignerEventService");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerFilter,System", "IDesignerFilter");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerHost,System", "IDesignerHost");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerHostTransactionState,System", "IDesignerHostTransactionState");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerOptionService,System", "IDesignerOptionService");
            feature.AddKnownType("System.ComponentModel.Design.IDictionaryService,System", "IDictionaryService");
            feature.AddKnownType("System.ComponentModel.Design.IEventBindingService,System", "IEventBindingService");
            feature.AddKnownType("System.ComponentModel.Design.IExtenderListService,System", "IExtenderListService");
            feature.AddKnownType("System.ComponentModel.Design.IExtenderProviderService,System", "IExtenderProviderService");
            feature.AddKnownType("System.ComponentModel.Design.IHelpService,System", "IHelpService");
            feature.AddKnownType("System.ComponentModel.Design.IInheritanceService,System", "IInheritanceService");
            feature.AddKnownType("System.ComponentModel.Design.IMenuCommandService,System", "IMenuCommandService");
            feature.AddKnownType("System.ComponentModel.Design.IReferenceService,System", "IReferenceService");
            feature.AddKnownType("System.ComponentModel.Design.IResourceService,System", "IResourceService");
            feature.AddKnownType("System.ComponentModel.Design.IRootDesigner,System", "IRootDesigner");
            feature.AddKnownType("System.ComponentModel.Design.ISelectionService,System", "ISelectionService");
            feature.AddKnownType("System.ComponentModel.Design.IServiceContainer,System", "IServiceContainer");
            feature.AddKnownType("System.ComponentModel.Design.ITreeDesigner,System", "ITreeDesigner");
            feature.AddKnownType("System.ComponentModel.Design.ITypeDescriptorFilterService,System", "ITypeDescriptorFilterService");
            feature.AddKnownType("System.ComponentModel.Design.ITypeDiscoveryService,System", "ITypeDiscoveryService");
            feature.AddKnownType("System.ComponentModel.Design.ITypeResolutionService,System", "ITypeResolutionService");
            feature.AddKnownType("System.ComponentModel.Design.MenuCommand,System", "MenuCommand");
            feature.AddKnownType("System.ComponentModel.Design.SelectionTypes,System", "SelectionTypes");
            feature.AddKnownType("System.ComponentModel.Design.ServiceContainer,System", "ServiceContainer");
            feature.AddKnownType("System.ComponentModel.Design.StandardCommands,System", "StandardCommands");
            feature.AddKnownType("System.ComponentModel.Design.StandardToolWindows,System", "StandardToolWindows");
            feature.AddKnownType("System.ComponentModel.Design.ViewTechnology,System", "ViewTechnology");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ComponentSerializationService,System", "ComponentSerializationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ContextStack,System", "ContextStack");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute,System", "DefaultSerializationProviderAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DesignerLoader,System", "DesignerLoader");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DesignerSerializerAttribute,System", "DesignerSerializerAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderHost,System", "IDesignerLoaderHost");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderHost2,System", "IDesignerLoaderHost2");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderService,System", "IDesignerLoaderService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System", "IDesignerSerializationManager");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationProvider,System", "IDesignerSerializationProvider");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationService,System", "IDesignerSerializationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.INameCreationService,System", "INameCreationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.InstanceDescriptor,System", "InstanceDescriptor");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.MemberRelationshipService,System", "MemberRelationshipService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.MemberRelationship,System", "MemberRelationship");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ResolveNameEventArgs,System", "ResolveNameEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute,System", "RootDesignerSerializerAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.SerializationStore,System", "SerializationStore");
            feature.AddKnownType("System.Configuration.SchemeSettingElement,System", "SchemeSettingElement");
            feature.AddKnownType("System.Configuration.SchemeSettingInternal,System", "SchemeSettingInternal");
            feature.AddKnownType("System.Configuration.SchemeSettingElementCollection,System", "SchemeSettingElementCollection");
            feature.AddKnownType("System.Configuration.UriSectionData,System", "UriSectionData");
            feature.AddKnownType("System.Configuration.UriSectionReader,System", "UriSectionReader");
            feature.AddKnownType("System.Configuration.UriSection,System", "UriSection");
            feature.AddKnownType("System.Configuration.UriSectionInternal,System", "UriSectionInternal");
            feature.AddKnownType("System.Configuration.IriParsingElement,System", "IriParsingElement");
            feature.AddKnownType("System.Configuration.IdnElement,System", "IdnElement");
            feature.AddKnownType("System.Configuration.ApplicationSettingsBase,System", "ApplicationSettingsBase");
            feature.AddKnownType("System.Configuration.SettingChangingEventArgs,System", "SettingChangingEventArgs");
            feature.AddKnownType("System.Configuration.SettingsLoadedEventArgs,System", "SettingsLoadedEventArgs");
            feature.AddKnownType("System.Configuration.ClientSettingsStore,System", "ClientSettingsStore");
            feature.AddKnownType("System.Configuration.StoredSetting,System", "StoredSetting");
            feature.AddKnownType("System.Configuration.ConfigurationException,System", "ConfigurationException");
            feature.AddKnownType("System.Configuration.ConfigurationSettings,System", "ConfigurationSettings");
            feature.AddKnownType("System.Configuration.ConfigXmlAttribute,System", "ConfigXmlAttribute");
            feature.AddKnownType("System.Configuration.ConfigXmlCDataSection,System", "ConfigXmlCDataSection");
            feature.AddKnownType("System.Configuration.ConfigXmlComment,System", "ConfigXmlComment");
            feature.AddKnownType("System.Configuration.ConfigXmlDocument,System", "ConfigXmlDocument");
            feature.AddKnownType("System.Configuration.ConfigXmlElement,System", "ConfigXmlElement");
            feature.AddKnownType("System.Configuration.ConfigXmlSignificantWhitespace,System", "ConfigXmlSignificantWhitespace");
            feature.AddKnownType("System.Configuration.ConfigXmlText,System", "ConfigXmlText");
            feature.AddKnownType("System.Configuration.ConfigXmlWhitespace,System", "ConfigXmlWhitespace");
            feature.AddKnownType("System.Configuration.DictionarySectionHandler,System", "DictionarySectionHandler");
            feature.AddKnownType("System.Configuration.HandlerBase,System", "HandlerBase");
            feature.AddKnownType("System.Configuration.IApplicationSettingsProvider,System", "IApplicationSettingsProvider");
            feature.AddKnownType("System.Configuration.IConfigurationSectionHandler,System", "IConfigurationSectionHandler");
            feature.AddKnownType("System.Configuration.IConfigurationSystem,System", "IConfigurationSystem");
            feature.AddKnownType("System.Configuration.IgnoreSectionHandler,System", "IgnoreSectionHandler");
            feature.AddKnownType("System.Configuration.IPersistComponentSettings,System", "IPersistComponentSettings");
            feature.AddKnownType("System.Configuration.ISettingsProviderService,System", "ISettingsProviderService");
            feature.AddKnownType("System.Configuration.LocalFileSettingsProvider,System", "LocalFileSettingsProvider");
            feature.AddKnownType("System.Configuration.NameValueFileSectionHandler,System", "NameValueFileSectionHandler");
            feature.AddKnownType("System.Configuration.NameValueSectionHandler,System", "NameValueSectionHandler");
            feature.AddKnownType("System.Configuration.ReadOnlyNameValueCollection,System", "ReadOnlyNameValueCollection");
            feature.AddKnownType("System.Configuration.SettingsAttributeDictionary,System", "SettingsAttributeDictionary");
            feature.AddKnownType("System.Configuration.ApplicationScopedSettingAttribute,System", "ApplicationScopedSettingAttribute");
            feature.AddKnownType("System.Configuration.DefaultSettingValueAttribute,System", "DefaultSettingValueAttribute");
            feature.AddKnownType("System.Configuration.NoSettingsVersionUpgradeAttribute,System", "NoSettingsVersionUpgradeAttribute");
            feature.AddKnownType("System.Configuration.SettingAttribute,System", "SettingAttribute");
            feature.AddKnownType("System.Configuration.SettingsDescriptionAttribute,System", "SettingsDescriptionAttribute");
            feature.AddKnownType("System.Configuration.SettingsGroupDescriptionAttribute,System", "SettingsGroupDescriptionAttribute");
            feature.AddKnownType("System.Configuration.SettingsGroupNameAttribute,System", "SettingsGroupNameAttribute");
            feature.AddKnownType("System.Configuration.SettingsManageabilityAttribute,System", "SettingsManageabilityAttribute");
            feature.AddKnownType("System.Configuration.SettingsProviderAttribute,System", "SettingsProviderAttribute");
            feature.AddKnownType("System.Configuration.SettingsSerializeAsAttribute,System", "SettingsSerializeAsAttribute");
            feature.AddKnownType("System.Configuration.SpecialSettingAttribute,System", "SpecialSettingAttribute");
            feature.AddKnownType("System.Configuration.UserScopedSettingAttribute,System", "UserScopedSettingAttribute");
            feature.AddKnownType("System.Configuration.SettingsManageability,System", "SettingsManageability");
            feature.AddKnownType("System.Configuration.SpecialSetting,System", "SpecialSetting");
            feature.AddKnownType("System.Configuration.SettingsBase,System", "SettingsBase");
            feature.AddKnownType("System.Configuration.SettingsContext,System", "SettingsContext");
            feature.AddKnownType("System.Configuration.SettingsProperty,System", "SettingsProperty");
            feature.AddKnownType("System.Configuration.SettingsPropertyCollection,System", "SettingsPropertyCollection");
            feature.AddKnownType("System.Configuration.SettingsPropertyIsReadOnlyException,System", "SettingsPropertyIsReadOnlyException");
            feature.AddKnownType("System.Configuration.SettingsPropertyNotFoundException,System", "SettingsPropertyNotFoundException");
            feature.AddKnownType("System.Configuration.SettingsPropertyValue,System", "SettingsPropertyValue");
            feature.AddKnownType("System.Configuration.SettingsPropertyValueCollection,System", "SettingsPropertyValueCollection");
            feature.AddKnownType("System.Configuration.SettingsPropertyWrongTypeException,System", "SettingsPropertyWrongTypeException");
            feature.AddKnownType("System.Configuration.SettingsProvider,System", "SettingsProvider");
            feature.AddKnownType("System.Configuration.SettingsProviderCollection,System", "SettingsProviderCollection");
            feature.AddKnownType("System.Configuration.SettingsSerializeAs,System", "SettingsSerializeAs");
            feature.AddKnownType("System.Configuration.SingleTagSectionHandler,System", "SingleTagSectionHandler");
            feature.AddKnownType("System.Configuration.ApplicationSettingsGroup,System", "ApplicationSettingsGroup");
            feature.AddKnownType("System.Configuration.UserSettingsGroup,System", "UserSettingsGroup");
            feature.AddKnownType("System.Configuration.ClientSettingsSection,System", "ClientSettingsSection");
            feature.AddKnownType("System.Configuration.SettingElementCollection,System", "SettingElementCollection");
            feature.AddKnownType("System.Configuration.SettingElement,System", "SettingElement");
            feature.AddKnownType("System.Configuration.SettingValueElement,System", "SettingValueElement");
            feature.AddKnownType("System.Configuration.AppSettingsReader,System", "AppSettingsReader");
            feature.AddKnownType("System.Configuration.Internal.ConfigurationManagerHelper,System", "ConfigurationManagerHelper");
            feature.AddKnownType("System.Diagnostics.AssertSection,System", "AssertSection");
            feature.AddKnownType("System.Diagnostics.MessageBoxPopup,System", "MessageBoxPopup");
            feature.AddKnownType("System.Diagnostics.BooleanSwitch,System", "BooleanSwitch");
            feature.AddKnownType("System.Diagnostics.ConsoleTraceListener,System", "ConsoleTraceListener");
            feature.AddKnownType("System.Diagnostics.CorrelationManager,System", "CorrelationManager");
            feature.AddKnownType("System.Diagnostics.DefaultTraceListener,System", "DefaultTraceListener");
            feature.AddKnownType("System.Diagnostics.DelimitedListTraceListener,System", "DelimitedListTraceListener");
            feature.AddKnownType("System.Diagnostics.InitState,System", "InitState");
            feature.AddKnownType("System.Diagnostics.FilterElement,System", "FilterElement");
            feature.AddKnownType("System.Diagnostics.ListenerElementsCollection,System", "ListenerElementsCollection");
            feature.AddKnownType("System.Diagnostics.SharedListenerElementsCollection,System", "SharedListenerElementsCollection");
            feature.AddKnownType("System.Diagnostics.ListenerElement,System", "ListenerElement");
            feature.AddKnownType("System.Diagnostics.PerfCounterSection,System", "PerfCounterSection");
            feature.AddKnownType("System.Diagnostics.EventTypeFilter,System", "EventTypeFilter");
            feature.AddKnownType("System.Diagnostics.SourceElementsCollection,System", "SourceElementsCollection");
            feature.AddKnownType("System.Diagnostics.SourceElement,System", "SourceElement");
            feature.AddKnownType("System.Diagnostics.SourceFilter,System", "SourceFilter");
            feature.AddKnownType("System.Diagnostics.SourceLevels,System", "SourceLevels");
            feature.AddKnownType("System.Diagnostics.SourceSwitch,System", "SourceSwitch");
            feature.AddKnownType("System.Diagnostics.Switch,System", "Switch");
            feature.AddKnownType("System.Diagnostics.SwitchAttribute,System", "SwitchAttribute");
            feature.AddKnownType("System.Diagnostics.SwitchElementsCollection,System", "SwitchElementsCollection");
            feature.AddKnownType("System.Diagnostics.SwitchElement,System", "SwitchElement");
            feature.AddKnownType("System.Diagnostics.SwitchLevelAttribute,System", "SwitchLevelAttribute");
            feature.AddKnownType("System.Diagnostics.SystemDiagnosticsSection,System", "SystemDiagnosticsSection");
            feature.AddKnownType("System.Diagnostics.TextWriterTraceListener,System", "TextWriterTraceListener");
            feature.AddKnownType("System.Diagnostics.Trace,System", "Trace");
            feature.AddKnownType("System.Diagnostics.TraceEventCache,System", "TraceEventCache");
            feature.AddKnownType("System.Diagnostics.TraceEventType,System", "TraceEventType");
            feature.AddKnownType("System.Diagnostics.TraceFilter,System", "TraceFilter");
            feature.AddKnownType("System.Diagnostics.TraceLevel,System", "TraceLevel");
            feature.AddKnownType("System.Diagnostics.TraceListener,System", "TraceListener");
            feature.AddKnownType("System.Diagnostics.TraceListenerCollection,System", "TraceListenerCollection");
            feature.AddKnownType("System.Diagnostics.TraceOptions,System", "TraceOptions");
            feature.AddKnownType("System.Diagnostics.TraceSection,System", "TraceSection");
            feature.AddKnownType("System.Diagnostics.TraceSource,System", "TraceSource");
            feature.AddKnownType("System.Diagnostics.TraceSwitch,System", "TraceSwitch");
            feature.AddKnownType("System.Diagnostics.TypedElement,System", "TypedElement");
            feature.AddKnownType("System.Diagnostics.XmlWriterTraceListener,System", "XmlWriterTraceListener");
            feature.AddKnownType("System.Diagnostics.AlphabeticalEnumConverter,System", "AlphabeticalEnumConverter");
            feature.AddKnownType("System.Diagnostics.AsyncStreamReader,System", "AsyncStreamReader");
            feature.AddKnownType("System.Diagnostics.CounterCreationData,System", "CounterCreationData");
            feature.AddKnownType("System.Diagnostics.CounterCreationDataCollection,System", "CounterCreationDataCollection");
            feature.AddKnownType("System.Diagnostics.CounterSample,System", "CounterSample");
            feature.AddKnownType("System.Diagnostics.DataReceivedEventArgs,System", "DataReceivedEventArgs");
            feature.AddKnownType("System.Diagnostics.DiagnosticsConfigurationHandler,System", "DiagnosticsConfigurationHandler");
            feature.AddKnownType("System.Diagnostics.SwitchesDictionarySectionHandler,System", "SwitchesDictionarySectionHandler");
            feature.AddKnownType("System.Diagnostics.EntryWrittenEventArgs,System", "EntryWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.EventInstance,System", "EventInstance");
            feature.AddKnownType("System.Diagnostics.EventLog,System", "EventLog");
            feature.AddKnownType("System.Diagnostics.EventLogInternal,System", "EventLogInternal");
            feature.AddKnownType("System.Diagnostics.EventLogEntry,System", "EventLogEntry");
            feature.AddKnownType("System.Diagnostics.EventLogEntryCollection,System", "EventLogEntryCollection");
            feature.AddKnownType("System.Diagnostics.EventLogEntryType,System", "EventLogEntryType");
            feature.AddKnownType("System.Diagnostics.EventLogPermission,System", "EventLogPermission");
            feature.AddKnownType("System.Diagnostics.EventLogPermissionAccess,System", "EventLogPermissionAccess");
            feature.AddKnownType("System.Diagnostics.EventLogPermissionAttribute,System", "EventLogPermissionAttribute");
            feature.AddKnownType("System.Diagnostics.EventLogPermissionEntry,System", "EventLogPermissionEntry");
            feature.AddKnownType("System.Diagnostics.EventLogPermissionEntryCollection,System", "EventLogPermissionEntryCollection");
            feature.AddKnownType("System.Diagnostics.EventLogTraceListener,System", "EventLogTraceListener");
            feature.AddKnownType("System.Diagnostics.EventSourceCreationData,System", "EventSourceCreationData");
            feature.AddKnownType("System.Diagnostics.FileVersionInfo,System", "FileVersionInfo");
            feature.AddKnownType("System.Diagnostics.ICollectData,System", "ICollectData");
            feature.AddKnownType("System.Diagnostics.InstanceData,System", "InstanceData");
            feature.AddKnownType("System.Diagnostics.InstanceDataCollection,System", "InstanceDataCollection");
            feature.AddKnownType("System.Diagnostics.InstanceDataCollectionCollection,System", "InstanceDataCollectionCollection");
            feature.AddKnownType("System.Diagnostics.MonitoringDescriptionAttribute,System", "MonitoringDescriptionAttribute");
            feature.AddKnownType("System.Diagnostics.OverflowAction,System", "OverflowAction");
            feature.AddKnownType("System.Diagnostics.PerformanceCounter,System", "PerformanceCounter");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterCategory,System", "PerformanceCounterCategory");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterCategoryOptions,System", "PerformanceCounterCategoryOptions");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterCategoryType,System", "PerformanceCounterCategoryType");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterInstanceLifetime,System", "PerformanceCounterInstanceLifetime");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterLib,System", "PerformanceCounterLib");
            feature.AddKnownType("System.Diagnostics.PerformanceMonitor,System", "PerformanceMonitor");
            feature.AddKnownType("System.Diagnostics.CategoryEntry,System", "CategoryEntry");
            feature.AddKnownType("System.Diagnostics.CategorySample,System", "CategorySample");
            feature.AddKnownType("System.Diagnostics.CounterDefinitionSample,System", "CounterDefinitionSample");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterManager,System", "PerformanceCounterManager");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermission,System", "PerformanceCounterPermission");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermissionAccess,System", "PerformanceCounterPermissionAccess");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermissionAttribute,System", "PerformanceCounterPermissionAttribute");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermissionEntry,System", "PerformanceCounterPermissionEntry");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermissionEntryCollection,System", "PerformanceCounterPermissionEntryCollection");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterType,System", "PerformanceCounterType");
            feature.AddKnownType("System.Diagnostics.Process,System", "Process");
            feature.AddKnownType("System.Diagnostics.ProcessInfo,System", "ProcessInfo");
            feature.AddKnownType("System.Diagnostics.ThreadInfo,System", "ThreadInfo");
            feature.AddKnownType("System.Diagnostics.ModuleInfo,System", "ModuleInfo");
            feature.AddKnownType("System.Diagnostics.OrdinalCaseInsensitiveComparer,System", "OrdinalCaseInsensitiveComparer");
            feature.AddKnownType("System.Diagnostics.ProcessThreadTimes,System", "ProcessThreadTimes");
            feature.AddKnownType("System.Diagnostics.ShellExecuteHelper,System", "ShellExecuteHelper");
            feature.AddKnownType("System.Diagnostics.MainWindowFinder,System", "MainWindowFinder");
            feature.AddKnownType("System.Diagnostics.NtProcessInfoHelper+SystemProcessInformation,System", "SystemProcessInformation");
            feature.AddKnownType("System.Diagnostics.NtProcessInfoHelper+SystemThreadInformation,System", "SystemThreadInformation");
            feature.AddKnownType("System.Diagnostics.ProcessModule,System", "ProcessModule");
            feature.AddKnownType("System.Diagnostics.ProcessModuleCollection,System", "ProcessModuleCollection");
            feature.AddKnownType("System.Diagnostics.ProcessPriorityClass,System", "ProcessPriorityClass");
            feature.AddKnownType("System.Diagnostics.ProcessStartInfo,System", "ProcessStartInfo");
            feature.AddKnownType("System.Diagnostics.ProcessThread,System", "ProcessThread");
            feature.AddKnownType("System.Diagnostics.ProcessThreadCollection,System", "ProcessThreadCollection");
            feature.AddKnownType("System.Diagnostics.ProcessWaitHandle,System", "ProcessWaitHandle");
            feature.AddKnownType("System.Diagnostics.ProcessWindowStyle,System", "ProcessWindowStyle");
            feature.AddKnownType("System.Diagnostics.SharedPerformanceCounter,System", "SharedPerformanceCounter");
            feature.AddKnownType("System.Diagnostics.ProcessData,System", "ProcessData");
            feature.AddKnownType("System.Diagnostics.Stopwatch,System", "Stopwatch");
            feature.AddKnownType("System.Diagnostics.ThreadPriorityLevel,System", "ThreadPriorityLevel");
            feature.AddKnownType("System.Diagnostics.ThreadState,System", "ThreadState");
            feature.AddKnownType("System.Diagnostics.ThreadWaitReason,System", "ThreadWaitReason");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute,System", "ExcludeFromCodeCoverageAttribute");
            feature.AddKnownType("System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute,System", "BitmapSuffixInSatelliteAssemblyAttribute");
            feature.AddKnownType("System.IO.InvalidDataException,System", "InvalidDataException");
            feature.AddKnownType("System.IO.NotifyFilters,System", "NotifyFilters");
            feature.AddKnownType("System.IO.ErrorEventArgs,System", "ErrorEventArgs");
            feature.AddKnownType("System.IO.FileSystemEventArgs,System", "FileSystemEventArgs");
            feature.AddKnownType("System.IO.FileSystemWatcher,System", "FileSystemWatcher");
            feature.AddKnownType("System.IO.InternalBufferOverflowException,System", "InternalBufferOverflowException");
            feature.AddKnownType("System.IO.IODescriptionAttribute,System", "IODescriptionAttribute");
            feature.AddKnownType("System.IO.RenamedEventArgs,System", "RenamedEventArgs");
            feature.AddKnownType("System.IO.WaitForChangedResult,System", "WaitForChangedResult");
            feature.AddKnownType("System.IO.WatcherChangeTypes,System", "WatcherChangeTypes");
            feature.AddKnownType("System.IO.Compression.BlockType,System", "BlockType");
            feature.AddKnownType("System.IO.Compression.CompressionMode,System", "CompressionMode");
            feature.AddKnownType("System.IO.Compression.CompressionTracingSwitchLevel,System", "CompressionTracingSwitchLevel");
            feature.AddKnownType("System.IO.Compression.CompressionTracingSwitch,System", "CompressionTracingSwitch");
            feature.AddKnownType("System.IO.Compression.CompressionLevel,System", "CompressionLevel");
            feature.AddKnownType("System.IO.Compression.CopyEncoder,System", "CopyEncoder");
            feature.AddKnownType("System.IO.Compression.DeflateInput,System", "DeflateInput");
            feature.AddKnownType("System.IO.Compression.DeflateInput+InputState,System", "InputState");
            feature.AddKnownType("System.IO.Compression.IDeflater,System", "IDeflater");
            feature.AddKnownType("System.IO.Compression.DeflaterManaged,System", "DeflaterManaged");
            feature.AddKnownType("System.IO.Compression.DeflaterZLib,System", "DeflaterZLib");
            feature.AddKnownType("System.IO.Compression.ZLibNative+FlushCode,System", "ZLibNative.FlushCode");
            feature.AddKnownType("System.IO.Compression.ZLibNative+ErrorCode,System", "ZLibNative.ErrorCode");
            feature.AddKnownType("System.IO.Compression.ZLibNative+CompressionLevel,System", "ZLibNative.CompressionLevel");
            feature.AddKnownType("System.IO.Compression.ZLibNative+CompressionStrategy,System", "ZLibNative.CompressionStrategy");
            feature.AddKnownType("System.IO.Compression.ZLibNative+CompressionMethod,System", "ZLibNative.CompressionMethod");
            feature.AddKnownType("System.IO.Compression.ZLibNative+ZStream,System", "ZStream");
            feature.AddKnownType("System.IO.Compression.ZLibNative+ZLibStreamHandle,System", "ZLibNative.ZLibStreamHandle");
            feature.AddKnownType("System.IO.Compression.ZLibNative+ZLibStreamHandle+State,System", "ZLibNative.ZLibStreamHandle.State");
            feature.AddKnownType("System.IO.Compression.ZLibException,System", "ZLibException");
            feature.AddKnownType("System.IO.Compression.DeflateStream,System", "DeflateStream");
            feature.AddKnownType("System.IO.Compression.DeflateStreamAsyncResult,System", "DeflateStreamAsyncResult");
            feature.AddKnownType("System.IO.Compression.FastEncoder,System", "FastEncoder");
            feature.AddKnownType("System.IO.Compression.FastEncoderWindow,System", "FastEncoderWindow");
            feature.AddKnownType("System.IO.Compression.IFileFormatWriter,System", "IFileFormatWriter");
            feature.AddKnownType("System.IO.Compression.IFileFormatReader,System", "IFileFormatReader");
            feature.AddKnownType("System.IO.Compression.GZipDecoder,System", "GZipDecoder");
            feature.AddKnownType("System.IO.Compression.GZipDecoder+GzipHeaderState,System", "GzipHeaderState");
            feature.AddKnownType("System.IO.Compression.GZipDecoder+GZipOptionalHeaderFlags,System", "GZipOptionalHeaderFlags");
            feature.AddKnownType("System.IO.Compression.GZipStream,System", "GZipStream");
            feature.AddKnownType("System.IO.Compression.GZipFormatter,System", "GZipFormatter");
            feature.AddKnownType("System.IO.Compression.HuffmanTree,System", "HuffmanTree");
            feature.AddKnownType("System.IO.Compression.Inflater,System", "Inflater");
            feature.AddKnownType("System.IO.Compression.InflaterState,System", "InflaterState");
            feature.AddKnownType("System.IO.Compression.InputBuffer,System", "InputBuffer");
            feature.AddKnownType("System.IO.Compression.Match,System", "Match");
            feature.AddKnownType("System.IO.Compression.OutputBuffer,System", "OutputBuffer");
            feature.AddKnownType("System.IO.Compression.OutputBuffer+BufferState,System", "BufferState");
            feature.AddKnownType("System.IO.Compression.OutputWindow,System", "OutputWindow");
            feature.AddKnownType("System.IO.Ports.Handshake,System", "Handshake");
            feature.AddKnownType("System.IO.Ports.Parity,System", "Parity");
            feature.AddKnownType("System.IO.Ports.SerialError,System", "SerialError");
            feature.AddKnownType("System.IO.Ports.SerialErrorReceivedEventArgs,System", "SerialErrorReceivedEventArgs");
            feature.AddKnownType("System.IO.Ports.SerialPinChange,System", "SerialPinChange");
            feature.AddKnownType("System.IO.Ports.SerialPinChangedEventArgs,System", "SerialPinChangedEventArgs");
            feature.AddKnownType("System.IO.Ports.SerialPort,System", "SerialPort");
            feature.AddKnownType("System.IO.Ports.SerialData,System", "SerialData");
            feature.AddKnownType("System.IO.Ports.SerialDataReceivedEventArgs,System", "SerialDataReceivedEventArgs");
            feature.AddKnownType("System.IO.Ports.SerialStream,System", "SerialStream");
            feature.AddKnownType("System.IO.Ports.SerialStream+EventLoopRunner,System", "EventLoopRunner");
            feature.AddKnownType("System.IO.Ports.SerialStream+SerialStreamAsyncResult,System", "SerialStreamAsyncResult");
            feature.AddKnownType("System.IO.Ports.StopBits,System", "StopBits");
            feature.AddKnownType("System.Media.SoundPlayer,System", "SoundPlayer");
            feature.AddKnownType("System.Media.SystemSounds,System", "SystemSounds");
            feature.AddKnownType("System.Media.SystemSound,System", "SystemSound");
            feature.AddKnownType("System.Net.IAuthenticationManager,System", "IAuthenticationManager");
            feature.AddKnownType("System.Net.ICredentialPolicy,System", "ICredentialPolicy");
            feature.AddKnownType("System.Net.AuthenticationManager,System", "AuthenticationManager");
            feature.AddKnownType("System.Net.AuthenticationManagerBase,System", "AuthenticationManagerBase");
            feature.AddKnownType("System.Net.AuthenticationManagerDefault,System", "AuthenticationManagerDefault");
            feature.AddKnownType("System.Net.AuthenticationManager2,System", "AuthenticationManager2");
            feature.AddKnownType("System.Net.AuthenticationSchemes,System", "AuthenticationSchemes");
            feature.AddKnownType("System.Net.Authorization,System", "Authorization");
            feature.AddKnownType("System.Net.BaseWebProxyFinder,System", "BaseWebProxyFinder");
            feature.AddKnownType("System.Net.BaseWebProxyFinder+AutoWebProxyState,System", "AutoWebProxyState");
            feature.AddKnownType("System.Net.ConnectionModes,System", "ConnectionModes");
            feature.AddKnownType("System.Net.ConnectionPool,System", "ConnectionPool");
            feature.AddKnownType("System.Net.InterlockedStack,System", "InterlockedStack");
            feature.AddKnownType("System.Net.ConnectionPoolManager,System", "ConnectionPoolManager");
            feature.AddKnownType("System.Net.CookieVariant,System", "CookieVariant");
            feature.AddKnownType("System.Net.Cookie,System", "Cookie");
            feature.AddKnownType("System.Net.CookieToken,System", "CookieToken");
            feature.AddKnownType("System.Net.CookieTokenizer,System", "CookieTokenizer");
            feature.AddKnownType("System.Net.CookieParser,System", "CookieParser");
            feature.AddKnownType("System.Net.Comparer,System", "Comparer");
            feature.AddKnownType("System.Net.CookieCollection,System", "CookieCollection");
            feature.AddKnownType("System.Net.CookieCollection+Stamp,System", "Stamp");
            feature.AddKnownType("System.Net.HeaderVariantInfo,System", "HeaderVariantInfo");
            feature.AddKnownType("System.Net.CookieContainer,System", "CookieContainer");
            feature.AddKnownType("System.Net.PathList,System", "PathList");
            feature.AddKnownType("System.Net.CookieException,System", "CookieException");
            feature.AddKnownType("System.Net.CredentialCache,System", "CredentialCache");
            feature.AddKnownType("System.Net.SystemNetworkCredential,System", "SystemNetworkCredential");
            feature.AddKnownType("System.Net.CredentialHostKey,System", "CredentialHostKey");
            feature.AddKnownType("System.Net.CredentialKey,System", "CredentialKey");
            feature.AddKnownType("System.Net.DnsEndPoint,System", "DnsEndPoint");
            feature.AddKnownType("System.Net.DnsPermissionAttribute,System", "DnsPermissionAttribute");
            feature.AddKnownType("System.Net.DnsPermission,System", "DnsPermission");
            feature.AddKnownType("System.Net.EndPoint,System", "EndPoint");
            feature.AddKnownType("System.Net.EntitySendFormat,System", "EntitySendFormat");
            feature.AddKnownType("System.Net.BoundaryType,System", "BoundaryType");
            feature.AddKnownType("System.Net.FileWebRequest,System", "FileWebRequest");
            feature.AddKnownType("System.Net.FileWebRequestCreator,System", "FileWebRequestCreator");
            feature.AddKnownType("System.Net.FileWebStream,System", "FileWebStream");
            feature.AddKnownType("System.Net.FileWebResponse,System", "FileWebResponse");
            feature.AddKnownType("System.Net.FtpStatusCode,System", "FtpStatusCode");
            feature.AddKnownType("System.Net.FtpOperation,System", "FtpOperation");
            feature.AddKnownType("System.Net.FtpMethodFlags,System", "FtpMethodFlags");
            feature.AddKnownType("System.Net.FtpMethodInfo,System", "FtpMethodInfo");
            feature.AddKnownType("System.Net.FtpWebRequest,System", "FtpWebRequest");
            feature.AddKnownType("System.Net.FtpWebRequestCreator,System", "FtpWebRequestCreator");
            feature.AddKnownType("System.Net.FtpWebResponse,System", "FtpWebResponse");
            feature.AddKnownType("System.Net.FtpWebResponse+EmptyStream,System", "EmptyStream");
            feature.AddKnownType("System.Net.GlobalProxySelection,System", "GlobalProxySelection");
            feature.AddKnownType("System.Net.HttpListenerBasicIdentity,System", "HttpListenerBasicIdentity");
            feature.AddKnownType("System.Net.RequestContextBase,System", "RequestContextBase");
            feature.AddKnownType("System.Net.AsyncRequestContext,System", "AsyncRequestContext");
            feature.AddKnownType("System.Net.SyncRequestContext,System", "SyncRequestContext");
            feature.AddKnownType("System.Net.HttpListener,System", "HttpListener");
            feature.AddKnownType("System.Net.HttpListenerContext,System", "HttpListenerContext");
            feature.AddKnownType("System.Net.HttpListenerException,System", "HttpListenerException");
            feature.AddKnownType("System.Net.ListenerPrefixEnumerator,System", "ListenerPrefixEnumerator");
            feature.AddKnownType("System.Net.HttpListenerPrefixCollection,System", "HttpListenerPrefixCollection");
            feature.AddKnownType("System.Net.ListenerClientCertState,System", "ListenerClientCertState");
            feature.AddKnownType("System.Net.ListenerClientCertAsyncResult,System", "ListenerClientCertAsyncResult");
            feature.AddKnownType("System.Net.HttpListenerRequest,System", "HttpListenerRequest");
            feature.AddKnownType("System.Net.HttpListenerRequestUriBuilder,System", "HttpListenerRequestUriBuilder");
            feature.AddKnownType("System.Net.HttpListenerResponse,System", "HttpListenerResponse");
            feature.AddKnownType("System.Net.HttpListenerTimeoutManager,System", "HttpListenerTimeoutManager");
            feature.AddKnownType("System.Net.HttpRequestHeader,System", "HttpRequestHeader");
            feature.AddKnownType("System.Net.HttpResponseHeader,System", "HttpResponseHeader");
            feature.AddKnownType("System.Net.HttpStatusCode,System", "HttpStatusCode");
            feature.AddKnownType("System.Net.HttpVersion,System", "HttpVersion");
            feature.AddKnownType("System.Net.DecompressionMethods,System", "DecompressionMethods");
            feature.AddKnownType("System.Net.HttpWebRequest,System", "HttpWebRequest");
            feature.AddKnownType("System.Net.RtcState,System", "RtcState");
            feature.AddKnownType("System.Net.RtcState+ControlChannelTriggerStatus,System", "ControlChannelTriggerStatus");
            feature.AddKnownType("System.Net.HttpWebResponse,System", "HttpWebResponse");
            feature.AddKnownType("System.Net.GZipWrapperStream,System", "GZipWrapperStream");
            feature.AddKnownType("System.Net.DeflateWrapperStream,System", "DeflateWrapperStream");
            feature.AddKnownType("System.Net.HybridWebProxyFinder,System", "HybridWebProxyFinder");
            feature.AddKnownType("System.Net.IAuthenticationModule,System", "IAuthenticationModule");
            feature.AddKnownType("System.Net.ICertificatePolicy,System", "ICertificatePolicy");
            feature.AddKnownType("System.Net.ICredentials,System", "ICredentials");
            feature.AddKnownType("System.Net.ICredentialsByHost,System", "ICredentialsByHost");
            feature.AddKnownType("System.Net.InternalException,System", "InternalException");
            feature.AddKnownType("System.Net.InterlockedGate,System", "InterlockedGate");
            feature.AddKnownType("System.Net.NetworkAddressChangePolled,System", "NetworkAddressChangePolled");
            feature.AddKnownType("System.Net.WindowsInstallationType,System", "WindowsInstallationType");
            feature.AddKnownType("System.Net.SecurityStatus,System", "SecurityStatus");
            feature.AddKnownType("System.Net.ContentTypeValues,System", "ContentTypeValues");
            feature.AddKnownType("System.Net.ContextAttribute,System", "ContextAttribute");
            feature.AddKnownType("System.Net.Endianness,System", "Endianness");
            feature.AddKnownType("System.Net.CredentialUse,System", "CredentialUse");
            feature.AddKnownType("System.Net.BufferType,System", "BufferType");
            feature.AddKnownType("System.Net.ChainPolicyType,System", "ChainPolicyType");
            feature.AddKnownType("System.Net.IgnoreCertProblem,System", "IgnoreCertProblem");
            feature.AddKnownType("System.Net.CertUsage,System", "CertUsage");
            feature.AddKnownType("System.Net.ChainPolicyParameter,System", "ChainPolicyParameter");
            feature.AddKnownType("System.Net.SSL_EXTRA_CERT_CHAIN_POLICY_PARA,System", "SSL_EXTRA_CERT_CHAIN_POLICY_PARA");
            feature.AddKnownType("System.Net.SSL_EXTRA_CERT_CHAIN_POLICY_PARA+U,System", "U");
            feature.AddKnownType("System.Net.ChainPolicyStatus,System", "ChainPolicyStatus");
            feature.AddKnownType("System.Net.CertEnhKeyUse,System", "CertEnhKeyUse");
            feature.AddKnownType("System.Net.CertUsageMatch,System", "CertUsageMatch");
            feature.AddKnownType("System.Net.ChainParameters,System", "ChainParameters");
            feature.AddKnownType("System.Net._CERT_CHAIN_ELEMENT,System", "_CERT_CHAIN_ELEMENT");
            feature.AddKnownType("System.Net.IssuerListInfoEx,System", "IssuerListInfoEx");
            feature.AddKnownType("System.Net.SecureCredential,System", "SecureCredential");
            feature.AddKnownType("System.Net.SecureCredential+Flags,System", "SecureCredential.Flags");
            feature.AddKnownType("System.Net.SecurityBufferStruct,System", "SecurityBufferStruct");
            feature.AddKnownType("System.Net.SecurityBuffer,System", "SecurityBuffer");
            feature.AddKnownType("System.Net.SecurityBufferDescriptor,System", "SecurityBufferDescriptor");
            feature.AddKnownType("System.Net.CertificateEncoding,System", "CertificateEncoding");
            feature.AddKnownType("System.Net.CertificateProblem,System", "CertificateProblem");
            feature.AddKnownType("System.Net.SecChannelBindings,System", "SecChannelBindings");
            feature.AddKnownType("System.Net.WebRequestPrefixElement,System", "WebRequestPrefixElement");
            feature.AddKnownType("System.Net.HttpRequestCreator,System", "HttpRequestCreator");
            feature.AddKnownType("System.Net.WebSocketHttpRequestCreator,System", "WebSocketHttpRequestCreator");
            feature.AddKnownType("System.Net.CoreResponseData,System", "CoreResponseData");
            feature.AddKnownType("System.Net.HttpWriteMode,System", "HttpWriteMode");
            feature.AddKnownType("System.Net.HttpBehaviour,System", "HttpBehaviour");
            feature.AddKnownType("System.Net.HttpProcessingResult,System", "HttpProcessingResult");
            feature.AddKnownType("System.Net.KnownHttpVerb,System", "KnownHttpVerb");
            feature.AddKnownType("System.Net.HttpProtocolUtils,System", "HttpProtocolUtils");
            feature.AddKnownType("System.Net.PolicyWrapper,System", "PolicyWrapper");
            feature.AddKnownType("System.Net.DefaultCertPolicy,System", "DefaultCertPolicy");
            feature.AddKnownType("System.Net.TriState,System", "TriState");
            feature.AddKnownType("System.Net.DefaultPorts,System", "DefaultPorts");
            feature.AddKnownType("System.Net.hostent,System", "hostent");
            feature.AddKnownType("System.Net.Blob,System", "Blob");
            feature.AddKnownType("System.Net.SplitWritesState,System", "SplitWritesState");
            feature.AddKnownType("System.Net.IPAddress,System", "IPAddress");
            feature.AddKnownType("System.Net.IPEndPoint,System", "IPEndPoint");
            feature.AddKnownType("System.Net.IPHostEntry,System", "IPHostEntry");
            feature.AddKnownType("System.Net.IWebProxy,System", "IWebProxy");
            feature.AddKnownType("System.Net.IWebProxyFinder,System", "IWebProxyFinder");
            feature.AddKnownType("System.Net.IWebRequestCreate,System", "IWebRequestCreate");
            feature.AddKnownType("System.Net.Logging,System", "Logging");
            feature.AddKnownType("System.Net.NetWebProxyFinder,System", "NetWebProxyFinder");
            feature.AddKnownType("System.Net.NetworkAccess,System", "NetworkAccess");
            feature.AddKnownType("System.Net.NetworkCredential,System", "NetworkCredential");
            feature.AddKnownType("System.Net.ProtocolViolationException,System", "ProtocolViolationException");
            feature.AddKnownType("System.Net.TransportContext,System", "TransportContext");
            feature.AddKnownType("System.Net.ConnectStreamContext,System", "ConnectStreamContext");
            feature.AddKnownType("System.Net.SslStreamContext,System", "SslStreamContext");
            feature.AddKnownType("System.Net.HttpListenerRequestContext,System", "HttpListenerRequestContext");
            feature.AddKnownType("System.Net.CachedTransportContext,System", "CachedTransportContext");
            feature.AddKnownType("System.Net.ServicePoint,System", "ServicePoint");
            feature.AddKnownType("System.Net.SecurityProtocolType,System", "SecurityProtocolType");
            feature.AddKnownType("System.Net.CertPolicyValidationCallback,System", "CertPolicyValidationCallback");
            feature.AddKnownType("System.Net.ServerCertValidationCallback,System", "ServerCertValidationCallback");
            feature.AddKnownType("System.Net.ServicePointManager,System", "ServicePointManager");
            feature.AddKnownType("System.Net.SocketAddress,System", "SocketAddress");
            feature.AddKnownType("System.Net.SocketPermissionAttribute,System", "SocketPermissionAttribute");
            feature.AddKnownType("System.Net.SocketPermission,System", "SocketPermission");
            feature.AddKnownType("System.Net.EndpointPermission,System", "EndpointPermission");
            feature.AddKnownType("System.Net.TransportType,System", "TransportType");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+FileCompletionNotificationModes,System", "FileCompletionNotificationModes");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+RasHelper,System", "RasHelper");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+WSAPROTOCOLCHAIN,System", "WSAPROTOCOLCHAIN");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+WSAPROTOCOL_INFO,System", "WSAPROTOCOL_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+ControlData,System", "ControlData");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+ControlDataIPv6,System", "ControlDataIPv6");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+WSAMsg,System", "WSAMsg");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitPacketsElementFlags,System", "TransmitPacketsElementFlags");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitPacketsElement,System", "TransmitPacketsElement");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+SOCKET_ADDRESS,System", "SOCKET_ADDRESS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+SOCKET_ADDRESS_LIST,System", "SOCKET_ADDRESS_LIST");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitFileBuffersStruct,System", "TransmitFileBuffersStruct");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+NativePKI+CRYPT_OBJID_BLOB,System", "CRYPT_OBJID_BLOB");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+NativePKI+CERT_EXTENSION,System", "CERT_EXTENSION");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+NativePKI+CERT_SELECT_CRITERIA,System", "CERT_SELECT_CRITERIA");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_CURRENT_USER_IE_PROXY_CONFIG,System", "WINHTTP_CURRENT_USER_IE_PROXY_CONFIG");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+AutoProxyFlags,System", "AutoProxyFlags");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+AccessType,System", "AccessType");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+AutoDetectType,System", "AutoDetectType");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_AUTOPROXY_OPTIONS,System", "WINHTTP_AUTOPROXY_OPTIONS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_PROXY_INFO,System", "WINHTTP_PROXY_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+ErrorCodes,System", "ErrorCodes");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HeapAllocHandle,System", "HeapAllocHandle");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_API_VERSION,System", "HTTP_API_VERSION");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVER_PROPERTY,System", "HTTP_SERVER_PROPERTY");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_INFO_TYPE,System", "HTTP_REQUEST_INFO_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_INFO_TYPE,System", "HTTP_RESPONSE_INFO_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TIMEOUT_TYPE,System", "HTTP_TIMEOUT_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_VERSION,System", "HTTP_VERSION");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_KNOWN_HEADER,System", "HTTP_KNOWN_HEADER");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_DATA_CHUNK,System", "HTTP_DATA_CHUNK");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTPAPI_VERSION,System", "HTTPAPI_VERSION");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_COOKED_URL,System", "HTTP_COOKED_URL");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+SOCKADDR,System", "SOCKADDR");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TRANSPORT_ADDRESS,System", "HTTP_TRANSPORT_ADDRESS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SSL_CLIENT_CERT_INFO,System", "HTTP_SSL_CLIENT_CERT_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVICE_BINDING_TYPE,System", "HTTP_SERVICE_BINDING_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVICE_BINDING_BASE,System", "HTTP_SERVICE_BINDING_BASE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_CHANNEL_BIND_STATUS,System", "HTTP_REQUEST_CHANNEL_BIND_STATUS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_UNKNOWN_HEADER,System", "HTTP_UNKNOWN_HEADER");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SSL_INFO,System", "HTTP_SSL_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADERS,System", "HTTP_RESPONSE_HEADERS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_HEADERS,System", "HTTP_REQUEST_HEADERS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_VERB,System", "HTTP_VERB");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_DATA_CHUNK_TYPE,System", "HTTP_DATA_CHUNK_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_INFO,System", "HTTP_RESPONSE_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE,System", "HTTP_RESPONSE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_INFO,System", "HTTP_REQUEST_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST,System", "HTTP_REQUEST");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_V2,System", "HTTP_REQUEST_V2");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TIMEOUT_LIMIT_INFO,System", "HTTP_TIMEOUT_LIMIT_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_BINDING_INFO,System", "HTTP_BINDING_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_TOKEN_BINDING_INFO,System", "HTTP_REQUEST_TOKEN_BINDING_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_HASH_ALGORITHM,System", "TOKENBINDING_HASH_ALGORITHM");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_SIGNATURE_ALGORITHM,System", "TOKENBINDING_SIGNATURE_ALGORITHM");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_TYPE,System", "TOKENBINDING_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_EXTENSION_FORMAT,System", "TOKENBINDING_EXTENSION_FORMAT");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_IDENTIFIER,System", "TOKENBINDING_IDENTIFIER");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_DATA,System", "TOKENBINDING_RESULT_DATA");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_LIST,System", "TOKENBINDING_RESULT_LIST");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_FLAGS,System", "HTTP_FLAGS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADER_ID+Enum,System", "Enum");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+AppXHelper,System", "AppXHelper");
            feature.AddKnownType("System.Net.WebClient,System", "WebClient");
            feature.AddKnownType("System.Net.OpenReadCompletedEventArgs,System", "OpenReadCompletedEventArgs");
            feature.AddKnownType("System.Net.OpenWriteCompletedEventArgs,System", "OpenWriteCompletedEventArgs");
            feature.AddKnownType("System.Net.DownloadStringCompletedEventArgs,System", "DownloadStringCompletedEventArgs");
            feature.AddKnownType("System.Net.DownloadDataCompletedEventArgs,System", "DownloadDataCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadStringCompletedEventArgs,System", "UploadStringCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadDataCompletedEventArgs,System", "UploadDataCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadFileCompletedEventArgs,System", "UploadFileCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadValuesCompletedEventArgs,System", "UploadValuesCompletedEventArgs");
            feature.AddKnownType("System.Net.DownloadProgressChangedEventArgs,System", "DownloadProgressChangedEventArgs");
            feature.AddKnownType("System.Net.UploadProgressChangedEventArgs,System", "UploadProgressChangedEventArgs");
            feature.AddKnownType("System.Net.WebException,System", "WebException");
            feature.AddKnownType("System.Net.WebExceptionInternalStatus,System", "WebExceptionInternalStatus");
            feature.AddKnownType("System.Net.WebExceptionStatus,System", "WebExceptionStatus");
            feature.AddKnownType("System.Net.WebHeaderCollectionType,System", "WebHeaderCollectionType");
            feature.AddKnownType("System.Net.WebHeaderCollection,System", "WebHeaderCollection");
            feature.AddKnownType("System.Net.CaseInsensitiveAscii,System", "CaseInsensitiveAscii");
            feature.AddKnownType("System.Net.HostHeaderString,System", "HostHeaderString");
            feature.AddKnownType("System.Net.WebPermissionAttribute,System", "WebPermissionAttribute");
            feature.AddKnownType("System.Net.DelayedRegex,System", "DelayedRegex");
            feature.AddKnownType("System.Net.WebPermission,System", "WebPermission");
            feature.AddKnownType("System.Net.WebProxyData,System", "WebProxyData");
            feature.AddKnownType("System.Net.WebProxy,System", "WebProxy");
            feature.AddKnownType("System.Net.WebRequest,System", "WebRequest");
            feature.AddKnownType("System.Net.WebRequest+DesignerWebRequestCreate,System", "DesignerWebRequestCreate");
            feature.AddKnownType("System.Net.WebRequest+WebProxyWrapperOpaque,System", "WebProxyWrapperOpaque");
            feature.AddKnownType("System.Net.WebRequest+WebProxyWrapper,System", "WebProxyWrapper");
            feature.AddKnownType("System.Net.WebResponse,System", "WebResponse");
            feature.AddKnownType("System.Net.WinHttpWebProxyFinder,System", "WinHttpWebProxyFinder");
            feature.AddKnownType("System.Net.WriteStreamClosedEventArgs,System", "WriteStreamClosedEventArgs");
            feature.AddKnownType("System.Net.AuthenticationState,System", "AuthenticationState");
            feature.AddKnownType("System.Net.AutoWebProxyScriptEngine,System", "AutoWebProxyScriptEngine");
            feature.AddKnownType("System.Net.WebProxyScriptHelper,System", "WebProxyScriptHelper");
            feature.AddKnownType("System.Net.IWebProxyScript,System", "IWebProxyScript");
            feature.AddKnownType("System.Net.AutoWebProxyScriptWrapper,System", "AutoWebProxyScriptWrapper");
            feature.AddKnownType("System.Net.BasicClient,System", "BasicClient");
            feature.AddKnownType("System.Net.BufferOffsetSize,System", "BufferOffsetSize");
            feature.AddKnownType("System.Net.ChunkParser,System", "ChunkParser");
            feature.AddKnownType("System.Net.CommandStream,System", "CommandStream");
            feature.AddKnownType("System.Net.CommandStream+PipelineInstruction,System", "PipelineInstruction");
            feature.AddKnownType("System.Net.CommandStream+PipelineEntryFlags,System", "PipelineEntryFlags");
            feature.AddKnownType("System.Net.CommandStream+PipelineEntry,System", "PipelineEntry");
            feature.AddKnownType("System.Net.ResponseDescription,System", "ResponseDescription");
            feature.AddKnownType("System.Net.ReceiveState,System", "ReceiveState");
            feature.AddKnownType("System.Net.ReadState,System", "ReadState");
            feature.AddKnownType("System.Net.DataParseStatus,System", "DataParseStatus");
            feature.AddKnownType("System.Net.WriteBufferState,System", "WriteBufferState");
            feature.AddKnownType("System.Net.WebParseErrorSection,System", "WebParseErrorSection");
            feature.AddKnownType("System.Net.WebParseErrorCode,System", "WebParseErrorCode");
            feature.AddKnownType("System.Net.WebParseError,System", "WebParseError");
            feature.AddKnownType("System.Net.TunnelStateObject,System", "TunnelStateObject");
            feature.AddKnownType("System.Net.ConnectionReturnResult,System", "ConnectionReturnResult");
            feature.AddKnownType("System.Net.Connection,System", "Connection");
            feature.AddKnownType("System.Net.ConnectionGroup,System", "ConnectionGroup");
            feature.AddKnownType("System.Net.WriteHeadersCallbackState,System", "WriteHeadersCallbackState");
            feature.AddKnownType("System.Net.ConnectStream,System", "ConnectStream");
            feature.AddKnownType("System.Net.SyncMemoryStream,System", "SyncMemoryStream");
            feature.AddKnownType("System.Net.CallbackClosure,System", "CallbackClosure");
            feature.AddKnownType("System.Net.ContextAwareResult,System", "ContextAwareResult");
            feature.AddKnownType("System.Net.DigestClient,System", "DigestClient");
            feature.AddKnownType("System.Net.HttpDigestChallenge,System", "HttpDigestChallenge");
            feature.AddKnownType("System.Net.EmptyWebProxy,System", "EmptyWebProxy");
            feature.AddKnownType("System.Net.FtpPrimitive,System", "FtpPrimitive");
            feature.AddKnownType("System.Net.FtpLoginState,System", "FtpLoginState");
            feature.AddKnownType("System.Net.FtpControlStream,System", "FtpControlStream");
            feature.AddKnownType("System.Net.FtpDataStream,System", "FtpDataStream");
            feature.AddKnownType("System.Net.HeaderInfo,System", "HeaderInfo");
            feature.AddKnownType("System.Net.HeaderInfoTable,System", "HeaderInfoTable");
            feature.AddKnownType("System.Net.IRequestLifetimeTracker,System", "IRequestLifetimeTracker");
            feature.AddKnownType("System.Net.ISessionAuthenticationModule,System", "ISessionAuthenticationModule");
            feature.AddKnownType("System.Net.CloseExState,System", "CloseExState");
            feature.AddKnownType("System.Net.ICloseEx,System", "ICloseEx");
            feature.AddKnownType("System.Net.KerberosClient,System", "KerberosClient");
            feature.AddKnownType("System.Net.LazyAsyncResult,System", "LazyAsyncResult");
            feature.AddKnownType("System.Net.ListenerAsyncResult,System", "ListenerAsyncResult");
            feature.AddKnownType("System.Net.HttpRequestStream,System", "HttpRequestStream");
            feature.AddKnownType("System.Net.HttpResponseStream,System", "HttpResponseStream");
            feature.AddKnownType("System.Net.HttpResponseStreamAsyncResult,System", "HttpResponseStreamAsyncResult");
            feature.AddKnownType("System.Net.BaseLoggingObject,System", "BaseLoggingObject");
            feature.AddKnownType("System.Net.ThreadKinds,System", "ThreadKinds");
            feature.AddKnownType("System.Net.SSPIInterface,System", "SSPIInterface");
            feature.AddKnownType("System.Net.SSPISecureChannelType,System", "SSPISecureChannelType");
            feature.AddKnownType("System.Net.SSPIAuthType,System", "SSPIAuthType");
            feature.AddKnownType("System.Net.NegotiateClient,System", "NegotiateClient");
            feature.AddKnownType("System.Net.NestedMultipleAsyncResult,System", "NestedMultipleAsyncResult");
            feature.AddKnownType("System.Net.NestedSingleAsyncResult,System", "NestedSingleAsyncResult");
            feature.AddKnownType("System.Net.NetRes,System", "NetRes");
            feature.AddKnownType("System.Net.NetworkingPerfCounterName,System", "NetworkingPerfCounterName");
            feature.AddKnownType("System.Net.NetworkingPerfCounters,System", "NetworkingPerfCounters");
            feature.AddKnownType("System.Net.ContextFlags,System", "ContextFlags");
            feature.AddKnownType("System.Net.NTAuthentication,System", "NTAuthentication");
            feature.AddKnownType("System.Net.AuthIdentity,System", "AuthIdentity");
            feature.AddKnownType("System.Net.NtlmClient,System", "NtlmClient");
            feature.AddKnownType("System.Net.IPMulticastRequest,System", "IPMulticastRequest");
            feature.AddKnownType("System.Net.Linger,System", "Linger");
            feature.AddKnownType("System.Net.WSABuffer,System", "WSABuffer");
            feature.AddKnownType("System.Net.TransmitFileBuffers,System", "TransmitFileBuffers");
            feature.AddKnownType("System.Net.WSAData,System", "WSAData");
            feature.AddKnownType("System.Net.AddressInfo,System", "AddressInfo");
            feature.AddKnownType("System.Net.AddressInfoHints,System", "AddressInfoHints");
            feature.AddKnownType("System.Net.NameInfoFlags,System", "NameInfoFlags");
            feature.AddKnownType("System.Net.IPv6MulticastRequest,System", "IPv6MulticastRequest");
            feature.AddKnownType("System.Net.SocketConstructorFlags,System", "SocketConstructorFlags");
            feature.AddKnownType("System.Net.PooledStream,System", "PooledStream");
            feature.AddKnownType("System.Net.PrefixLookup,System", "PrefixLookup");
            feature.AddKnownType("System.Net.IAutoWebProxy,System", "IAutoWebProxy");
            feature.AddKnownType("System.Net.ProxyChain,System", "ProxyChain");
            feature.AddKnownType("System.Net.ProxyScriptChain,System", "ProxyScriptChain");
            feature.AddKnownType("System.Net.DirectProxy,System", "DirectProxy");
            feature.AddKnownType("System.Net.StaticProxy,System", "StaticProxy");
            feature.AddKnownType("System.Net.WebProxyDataBuilder,System", "WebProxyDataBuilder");
            feature.AddKnownType("System.Net.RegBlobWebProxyDataBuilder,System", "RegBlobWebProxyDataBuilder");
            feature.AddKnownType("System.Net.RequestLifetimeSetter,System", "RequestLifetimeSetter");
            feature.AddKnownType("System.Net.WinHttpWebProxyBuilder,System", "WinHttpWebProxyBuilder");
            feature.AddKnownType("System.Net.SafeFreeAddrInfo,System", "SafeFreeAddrInfo");
            feature.AddKnownType("System.Net.SafeCloseHandle,System", "SafeCloseHandle");
            feature.AddKnownType("System.Net.HttpRequestQueueV2Handle,System", "HttpRequestQueueV2Handle");
            feature.AddKnownType("System.Net.HttpServerSessionHandle,System", "HttpServerSessionHandle");
            feature.AddKnownType("System.Net.SafeCloseIcmpHandle,System", "SafeCloseIcmpHandle");
            feature.AddKnownType("System.Net.SafeInternetHandle,System", "SafeInternetHandle");
            feature.AddKnownType("System.Net.SafeSspiAuthDataHandle,System", "SafeSspiAuthDataHandle");
            feature.AddKnownType("System.Net.SecurDll,System", "SecurDll");
            feature.AddKnownType("System.Net.SafeFreeContextBuffer,System", "SafeFreeContextBuffer");
            feature.AddKnownType("System.Net.SafeFreeContextBuffer_SECURITY,System", "SafeFreeContextBuffer_SECURITY");
            feature.AddKnownType("System.Net.SafeLocalFree,System", "SafeLocalFree");
            feature.AddKnownType("System.Net.SafeGlobalFree,System", "SafeGlobalFree");
            feature.AddKnownType("System.Net.SafeOverlappedFree,System", "SafeOverlappedFree");
            feature.AddKnownType("System.Net.SafeLoadLibrary,System", "SafeLoadLibrary");
            feature.AddKnownType("System.Net.SafeFreeCertChain,System", "SafeFreeCertChain");
            feature.AddKnownType("System.Net.SafeFreeCertChainList,System", "SafeFreeCertChainList");
            feature.AddKnownType("System.Net.SafeCertSelectCritera,System", "SafeCertSelectCritera");
            feature.AddKnownType("System.Net.SafeFreeCertContext,System", "SafeFreeCertContext");
            feature.AddKnownType("System.Net.SSPIHandle,System", "SSPIHandle");
            feature.AddKnownType("System.Net.SafeFreeCredentials,System", "SafeFreeCredentials");
            feature.AddKnownType("System.Net.SafeCredentialReference,System", "SafeCredentialReference");
            feature.AddKnownType("System.Net.SafeFreeCredential_SECURITY,System", "SafeFreeCredential_SECURITY");
            feature.AddKnownType("System.Net.SafeDeleteContext,System", "SafeDeleteContext");
            feature.AddKnownType("System.Net.SafeDeleteContext_SECURITY,System", "SafeDeleteContext_SECURITY");
            feature.AddKnownType("System.Net.SafeNativeOverlapped,System", "SafeNativeOverlapped");
            feature.AddKnownType("System.Net.SafeCloseSocket,System", "SafeCloseSocket");
            feature.AddKnownType("System.Net.SafeCloseSocket+InnerSafeCloseSocket,System", "InnerSafeCloseSocket");
            feature.AddKnownType("System.Net.SafeCloseSocketAndEvent,System", "SafeCloseSocketAndEvent");
            feature.AddKnownType("System.Net.SafeLocalFreeChannelBinding,System", "SafeLocalFreeChannelBinding");
            feature.AddKnownType("System.Net.SafeFreeContextBufferChannelBinding,System", "SafeFreeContextBufferChannelBinding");
            feature.AddKnownType("System.Net.SafeFreeContextBufferChannelBinding_SECURITY,System", "SafeFreeContextBufferChannelBinding_SECURITY");
            feature.AddKnownType("System.Net.SafeUnlockUrlCacheEntryFile,System", "SafeUnlockUrlCacheEntryFile");
            feature.AddKnownType("System.Net.SafeRegistryHandle,System", "SafeRegistryHandle");
            feature.AddKnownType("System.Net.SafeWebSocketHandle,System", "SafeWebSocketHandle");
            feature.AddKnownType("System.Net.ScatterGatherBuffers,System", "ScatterGatherBuffers");
            feature.AddKnownType("System.Net.ServiceNameStore,System", "ServiceNameStore");
            feature.AddKnownType("System.Net.Semaphore,System", "Semaphore");
            feature.AddKnownType("System.Net.ShellExpression,System", "ShellExpression");
            feature.AddKnownType("System.Net.ShellExpression+ShExpTokens,System", "ShExpTokens");
            feature.AddKnownType("System.Net.SpnDictionary,System", "SpnDictionary");
            feature.AddKnownType("System.Net.SpnToken,System", "SpnToken");
            feature.AddKnownType("System.Net.StreamSizes,System", "StreamSizes");
            feature.AddKnownType("System.Net.SecSizes,System", "SecSizes");
            feature.AddKnownType("System.Net.SchProtocols,System", "SchProtocols");
            feature.AddKnownType("System.Net.Alg,System", "Alg");
            feature.AddKnownType("System.Net.SslConnectionInfo,System", "SslConnectionInfo");
            feature.AddKnownType("System.Net.NegotiationInfo,System", "NegotiationInfo");
            feature.AddKnownType("System.Net.NegotiationInfoClass,System", "NegotiationInfoClass");
            feature.AddKnownType("System.Net.SecurityPackageInfo,System", "SecurityPackageInfo");
            feature.AddKnownType("System.Net.SecurityPackageInfoClass,System", "SecurityPackageInfoClass");
            feature.AddKnownType("System.Net.Bindings,System", "Bindings");
            feature.AddKnownType("System.Net.StreamFramer,System", "StreamFramer");
            feature.AddKnownType("System.Net.WorkerAsyncResult,System", "WorkerAsyncResult");
            feature.AddKnownType("System.Net.FrameHeader,System", "FrameHeader");
            feature.AddKnownType("System.Net.TimerThread+Queue,System", "Queue");
            feature.AddKnownType("System.Net.TimerThread+Timer,System", "Timer");
            feature.AddKnownType("System.Net.TlsStream,System", "TlsStream");
            feature.AddKnownType("System.Net.FixedSizeReader,System", "FixedSizeReader");
            feature.AddKnownType("System.Net.BufferAsyncResult,System", "BufferAsyncResult");
            feature.AddKnownType("System.Net.AsyncProtocolRequest,System", "AsyncProtocolRequest");
            feature.AddKnownType("System.Net.TimeoutValidator,System", "TimeoutValidator");
            feature.AddKnownType("System.Net.Base64Stream,System", "Base64Stream");
            feature.AddKnownType("System.Net.BufferedReadStream,System", "BufferedReadStream");
            feature.AddKnownType("System.Net.ClosableStream,System", "ClosableStream");
            feature.AddKnownType("System.Net.DelegatedStream,System", "DelegatedStream");
            feature.AddKnownType("System.Net.TrackingStringDictionary,System", "TrackingStringDictionary");
            feature.AddKnownType("System.Net.TrackingValidationObjectDictionary,System", "TrackingValidationObjectDictionary");
            feature.AddKnownType("System.Net.Cache.HttpRequestCacheValidator,System", "HttpRequestCacheValidator");
            feature.AddKnownType("System.Net.Cache.HttpMethod,System", "HttpMethod");
            feature.AddKnownType("System.Net.Cache.ResponseCacheControl,System", "ResponseCacheControl");
            feature.AddKnownType("System.Net.Cache.FtpRequestCacheValidator,System", "FtpRequestCacheValidator");
            feature.AddKnownType("System.Net.Cache.RequestCache,System", "RequestCache");
            feature.AddKnownType("System.Net.Cache.RequestCacheEntry,System", "RequestCacheEntry");
            feature.AddKnownType("System.Net.Cache.RequestCacheManager,System", "RequestCacheManager");
            feature.AddKnownType("System.Net.Cache.RequestCacheBinding,System", "RequestCacheBinding");
            feature.AddKnownType("System.Net.Cache.RequestCacheLevel,System", "RequestCacheLevel");
            feature.AddKnownType("System.Net.Cache.RequestCachePolicy,System", "RequestCachePolicy");
            feature.AddKnownType("System.Net.Cache.HttpRequestCacheLevel,System", "HttpRequestCacheLevel");
            feature.AddKnownType("System.Net.Cache.HttpCacheAgeControl,System", "HttpCacheAgeControl");
            feature.AddKnownType("System.Net.Cache.HttpRequestCachePolicy,System", "HttpRequestCachePolicy");
            feature.AddKnownType("System.Net.Cache.CacheFreshnessStatus,System", "CacheFreshnessStatus");
            feature.AddKnownType("System.Net.Cache.CacheValidationStatus,System", "CacheValidationStatus");
            feature.AddKnownType("System.Net.Cache.RequestCacheValidator,System", "RequestCacheValidator");
            feature.AddKnownType("System.Net.Cache._WinInetCache+EntryType,System", "EntryType");
            feature.AddKnownType("System.Net.Cache._WinInetCache+Entry_FC,System", "Entry_FC");
            feature.AddKnownType("System.Net.Cache._WinInetCache+Status,System", "Status");
            feature.AddKnownType("System.Net.Cache._WinInetCache+FILETIME,System", "FILETIME");
            feature.AddKnownType("System.Net.Cache._WinInetCache+EntryBuffer,System", "EntryBuffer");
            feature.AddKnownType("System.Net.Cache._WinInetCache+EntryBuffer+Rsv,System", "EntryBuffer.Rsv");
            feature.AddKnownType("System.Net.Cache._WinInetCache+Entry,System", "Entry");
            feature.AddKnownType("System.Net.Cache.BaseWrapperStream,System", "BaseWrapperStream");
            feature.AddKnownType("System.Net.Cache.CombinedReadStream,System", "CombinedReadStream");
            feature.AddKnownType("System.Net.Cache.ForwardingReadStream,System", "ForwardingReadStream");
            feature.AddKnownType("System.Net.Cache.MetadataUpdateStream,System", "MetadataUpdateStream");
            feature.AddKnownType("System.Net.Cache.RangeStream,System", "RangeStream");
            feature.AddKnownType("System.Net.Cache.RequestCacheProtocol,System", "RequestCacheProtocol");
            feature.AddKnownType("System.Net.Cache.Rfc2616,System", "Rfc2616");
            feature.AddKnownType("System.Net.Cache.Rfc2616+TriState,System", "TriState");
            feature.AddKnownType("System.Net.Cache.SingleItemRequestCache,System", "SingleItemRequestCache");
            feature.AddKnownType("System.Net.Cache.SingleItemRequestCache+ReadOnlyStream,System", "ReadOnlyStream");
            feature.AddKnownType("System.Net.Configuration.UnicodeDecodingConformance,System", "UnicodeDecodingConformance");
            feature.AddKnownType("System.Net.Configuration.UnicodeEncodingConformance,System", "UnicodeEncodingConformance");
            feature.AddKnownType("System.Net.Configuration.AuthenticationModuleElement,System", "AuthenticationModuleElement");
            feature.AddKnownType("System.Net.Configuration.AuthenticationModuleElementCollection,System", "AuthenticationModuleElementCollection");
            feature.AddKnownType("System.Net.Configuration.AuthenticationModulesSection,System", "AuthenticationModulesSection");
            feature.AddKnownType("System.Net.Configuration.AuthenticationModulesSectionInternal,System", "AuthenticationModulesSectionInternal");
            feature.AddKnownType("System.Net.Configuration.BypassElement,System", "BypassElement");
            feature.AddKnownType("System.Net.Configuration.BypassElementCollection,System", "BypassElementCollection");
            feature.AddKnownType("System.Net.Configuration.ConnectionManagementElement,System", "ConnectionManagementElement");
            feature.AddKnownType("System.Net.Configuration.ConnectionManagementElementCollection,System", "ConnectionManagementElementCollection");
            feature.AddKnownType("System.Net.Configuration.ConnectionManagementSection,System", "ConnectionManagementSection");
            feature.AddKnownType("System.Net.Configuration.ConnectionManagementSectionInternal,System", "ConnectionManagementSectionInternal");
            feature.AddKnownType("System.Net.Configuration.DefaultProxySection,System", "DefaultProxySection");
            feature.AddKnownType("System.Net.Configuration.DefaultProxySectionInternal,System", "DefaultProxySectionInternal");
            feature.AddKnownType("System.Net.Configuration.HttpWebRequestElement,System", "HttpWebRequestElement");
            feature.AddKnownType("System.Net.Configuration.HttpListenerElement,System", "HttpListenerElement");
            feature.AddKnownType("System.Net.Configuration.HttpListenerTimeoutsElement,System", "HttpListenerTimeoutsElement");
            feature.AddKnownType("System.Net.Configuration.HttpCachePolicyElement,System", "HttpCachePolicyElement");
            feature.AddKnownType("System.Net.Configuration.FtpCachePolicyElement,System", "FtpCachePolicyElement");
            feature.AddKnownType("System.Net.Configuration.Ipv6Element,System", "Ipv6Element");
            feature.AddKnownType("System.Net.Configuration.MailSettingsSectionGroup,System", "MailSettingsSectionGroup");
            feature.AddKnownType("System.Net.Configuration.MailSettingsSectionGroupInternal,System", "MailSettingsSectionGroupInternal");
            feature.AddKnownType("System.Net.Configuration.ModuleElement,System", "ModuleElement");
            feature.AddKnownType("System.Net.Configuration.NetSectionGroup,System", "NetSectionGroup");
            feature.AddKnownType("System.Net.Configuration.PerformanceCountersElement,System", "PerformanceCountersElement");
            feature.AddKnownType("System.Net.Configuration.ProxyElement,System", "ProxyElement");
            feature.AddKnownType("System.Net.Configuration.ProxyElement+BypassOnLocalValues,System", "ProxyElement.BypassOnLocalValues");
            feature.AddKnownType("System.Net.Configuration.ProxyElement+UseSystemDefaultValues,System", "ProxyElement.UseSystemDefaultValues");
            feature.AddKnownType("System.Net.Configuration.ProxyElement+AutoDetectValues,System", "ProxyElement.AutoDetectValues");
            feature.AddKnownType("System.Net.Configuration.RequestCachingSection,System", "RequestCachingSection");
            feature.AddKnownType("System.Net.Configuration.RequestCachingSectionInternal,System", "RequestCachingSectionInternal");
            feature.AddKnownType("System.Net.Configuration.SettingsSection,System", "SettingsSection");
            feature.AddKnownType("System.Net.Configuration.SettingsSectionInternal,System", "SettingsSectionInternal");
            feature.AddKnownType("System.Net.Configuration.ServicePointManagerElement,System", "ServicePointManagerElement");
            feature.AddKnownType("System.Net.Configuration.SmtpSection,System", "SmtpSection");
            feature.AddKnownType("System.Net.Configuration.SmtpSectionInternal,System", "SmtpSectionInternal");
            feature.AddKnownType("System.Net.Configuration.SmtpNetworkElement,System", "SmtpNetworkElement");
            feature.AddKnownType("System.Net.Configuration.SmtpNetworkElementInternal,System", "SmtpNetworkElementInternal");
            feature.AddKnownType("System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement,System", "SmtpSpecifiedPickupDirectoryElement");
            feature.AddKnownType("System.Net.Configuration.SmtpSpecifiedPickupDirectoryElementInternal,System", "SmtpSpecifiedPickupDirectoryElementInternal");
            feature.AddKnownType("System.Net.Configuration.SocketElement,System", "SocketElement");
            feature.AddKnownType("System.Net.Configuration.WebProxyScriptElement,System", "WebProxyScriptElement");
            feature.AddKnownType("System.Net.Configuration.WebRequestModuleElement,System", "WebRequestModuleElement");
            feature.AddKnownType("System.Net.Configuration.WebRequestModuleElement+TypeTypeConverter,System", "TypeTypeConverter");
            feature.AddKnownType("System.Net.Configuration.WebRequestModuleElementCollection,System", "WebRequestModuleElementCollection");
            feature.AddKnownType("System.Net.Configuration.WebRequestModulesSection,System", "WebRequestModulesSection");
            feature.AddKnownType("System.Net.Configuration.WebRequestModulesSectionInternal,System", "WebRequestModulesSectionInternal");
            feature.AddKnownType("System.Net.Configuration.WebUtilityElement,System", "WebUtilityElement");
            feature.AddKnownType("System.Net.Mail.AlternateView,System", "AlternateView");
            feature.AddKnownType("System.Net.Mail.AlternateViewCollection,System", "AlternateViewCollection");
            feature.AddKnownType("System.Net.Mail.AttachmentBase,System", "AttachmentBase");
            feature.AddKnownType("System.Net.Mail.Attachment,System", "Attachment");
            feature.AddKnownType("System.Net.Mail.AttachmentCollection,System", "AttachmentCollection");
            feature.AddKnownType("System.Net.Mail.BufferBuilder,System", "BufferBuilder");
            feature.AddKnownType("System.Net.Mail.PropertyName,System", "PropertyName");
            feature.AddKnownType("System.Net.Mail.ServerState,System", "ServerState");
            feature.AddKnownType("System.Net.Mail.MBErrors,System", "MBErrors");
            feature.AddKnownType("System.Net.Mail.MBKeyAccess,System", "MBKeyAccess");
            feature.AddKnownType("System.Net.Mail.MetadataRecord,System", "MetadataRecord");
            feature.AddKnownType("System.Net.Mail._METADATA_HANDLE_INFO,System", "_METADATA_HANDLE_INFO");
            feature.AddKnownType("System.Net.Mail.IMSAdminBase,System", "IMSAdminBase");
            feature.AddKnownType("System.Net.Mail.MSAdminBase,System", "MSAdminBase");
            feature.AddKnownType("System.Net.Mail.MBDataType,System", "MBDataType");
            feature.AddKnownType("System.Net.Mail.MBUserType,System", "MBUserType");
            feature.AddKnownType("System.Net.Mail.ISmtpAuthenticationModule,System", "ISmtpAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.LinkedResource,System", "LinkedResource");
            feature.AddKnownType("System.Net.Mail.LinkedResourceCollection,System", "LinkedResourceCollection");
            feature.AddKnownType("System.Net.Mail.MailAddress,System", "MailAddress");
            feature.AddKnownType("System.Net.Mail.MailAddressCollection,System", "MailAddressCollection");
            feature.AddKnownType("System.Net.Mail.MailHeaderID,System", "MailHeaderID");
            feature.AddKnownType("System.Net.Mail.DeliveryNotificationOptions,System", "DeliveryNotificationOptions");
            feature.AddKnownType("System.Net.Mail.MailMessage,System", "MailMessage");
            feature.AddKnownType("System.Net.Mail.MailWriter,System", "MailWriter");
            feature.AddKnownType("System.Net.Mail.MailPriority,System", "MailPriority");
            feature.AddKnownType("System.Net.Mail.Message,System", "Message");
            feature.AddKnownType("System.Net.Mail.Message+EmptySendContext,System", "EmptySendContext");
            feature.AddKnownType("System.Net.Mail.RecipientLocationType,System", "RecipientLocationType");
            feature.AddKnownType("System.Net.Mail.SmtpDeliveryMethod,System", "SmtpDeliveryMethod");
            feature.AddKnownType("System.Net.Mail.SmtpDeliveryFormat,System", "SmtpDeliveryFormat");
            feature.AddKnownType("System.Net.Mail.SmtpClient,System", "SmtpClient");
            feature.AddKnownType("System.Net.Mail.LineInfo,System", "LineInfo");
            feature.AddKnownType("System.Net.Mail.SmtpConnection,System", "SmtpConnection");
            feature.AddKnownType("System.Net.Mail.SmtpDigestAuthenticationModule,System", "SmtpDigestAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.SmtpException,System", "SmtpException");
            feature.AddKnownType("System.Net.Mail.SmtpFailedRecipientException,System", "SmtpFailedRecipientException");
            feature.AddKnownType("System.Net.Mail.SmtpFailedRecipientsException,System", "SmtpFailedRecipientsException");
            feature.AddKnownType("System.Net.Mail.SmtpLoginAuthenticationModule,System", "SmtpLoginAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.SmtpNegotiateAuthenticationModule,System", "SmtpNegotiateAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.SmtpNtlmAuthenticationModule,System", "SmtpNtlmAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.SmtpAccess,System", "SmtpAccess");
            feature.AddKnownType("System.Net.Mail.SmtpPermissionAttribute,System", "SmtpPermissionAttribute");
            feature.AddKnownType("System.Net.Mail.SmtpPermission,System", "SmtpPermission");
            feature.AddKnownType("System.Net.Mail.SmtpReplyReader,System", "SmtpReplyReader");
            feature.AddKnownType("System.Net.Mail.SmtpReplyReaderFactory,System", "SmtpReplyReaderFactory");
            feature.AddKnownType("System.Net.Mail.SmtpStatusCode,System", "SmtpStatusCode");
            feature.AddKnownType("System.Net.Mail.SupportedAuth,System", "SupportedAuth");
            feature.AddKnownType("System.Net.Mail.SmtpPooledStream,System", "SmtpPooledStream");
            feature.AddKnownType("System.Net.Mail.SmtpTransport,System", "SmtpTransport");
            feature.AddKnownType("System.Net.Mail.SendMailAsyncResult,System", "SendMailAsyncResult");
            feature.AddKnownType("System.Net.Mime.Base64WriteStateInfo,System", "Base64WriteStateInfo");
            feature.AddKnownType("System.Net.Mime.BaseWriter,System", "BaseWriter");
            feature.AddKnownType("System.Net.Mime.ContentDisposition,System", "ContentDisposition");
            feature.AddKnownType("System.Net.Mime.ContentTransferEncoding,System", "ContentTransferEncoding");
            feature.AddKnownType("System.Net.Mime.ContentType,System", "ContentType");
            feature.AddKnownType("System.Net.Mime.EightBitStream,System", "EightBitStream");
            feature.AddKnownType("System.Net.Mime.EncodedStreamFactory,System", "EncodedStreamFactory");
            feature.AddKnownType("System.Net.Mime.HeaderCollection,System", "HeaderCollection");
            feature.AddKnownType("System.Net.Mime.IEncodableStream,System", "IEncodableStream");
            feature.AddKnownType("System.Net.Mime.MimeBasePart,System", "MimeBasePart");
            feature.AddKnownType("System.Net.Mime.MimeBasePart+MimePartAsyncResult,System", "MimePartAsyncResult");
            feature.AddKnownType("System.Net.Mime.MimeMultiPart,System", "MimeMultiPart");
            feature.AddKnownType("System.Net.Mime.MimeMultiPart+MimePartContext,System", "MimePartContext");
            feature.AddKnownType("System.Net.Mime.MimeMultiPartType,System", "MimeMultiPartType");
            feature.AddKnownType("System.Net.Mime.MimePart,System", "MimePart");
            feature.AddKnownType("System.Net.Mime.MimePart+MimePartContext,System", "MimePartContext");
            feature.AddKnownType("System.Net.Mime.MimeWriter,System", "MimeWriter");
            feature.AddKnownType("System.Net.Mime.MultiAsyncResult,System", "MultiAsyncResult");
            feature.AddKnownType("System.Net.Mime.QEncodedStream,System", "QEncodedStream");
            feature.AddKnownType("System.Net.Mime.QuotedPrintableStream,System", "QuotedPrintableStream");
            feature.AddKnownType("System.Net.Mime.SmtpDateTime,System", "SmtpDateTime");
            feature.AddKnownType("System.Net.Mime.TransferEncoding,System", "TransferEncoding");
            feature.AddKnownType("System.Net.Mime.WriteStateInfoBase,System", "WriteStateInfoBase");
            feature.AddKnownType("System.Net.NetworkInformation.DuplicateAddressDetectionState,System", "DuplicateAddressDetectionState");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV4Statistics,System", "IcmpV4Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV6Statistics,System", "IcmpV6Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterfaceType,System", "NetworkInterfaceType");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressInformation,System", "IPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressInformationCollection,System", "IPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.IPGlobalProperties,System", "IPGlobalProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPGlobalStatistics,System", "IPGlobalStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.ScopeLevel,System", "ScopeLevel");
            feature.AddKnownType("System.Net.NetworkInformation.IPInterfaceProperties,System", "IPInterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPInterfaceStatistics,System", "IPInterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.IPv4InterfaceStatistics,System", "IPv4InterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV4Type,System", "IcmpV4Type");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV4Code,System", "IcmpV4Code");
            feature.AddKnownType("System.Net.NetworkInformation.IPStatus,System", "IPStatus");
            feature.AddKnownType("System.Net.NetworkInformation.UnicastIPAddressInformation,System", "UnicastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.UnicastIPAddressInformationCollection,System", "UnicastIPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.MulticastIPAddressInformation,System", "MulticastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.MulticastIPAddressInformationCollection,System", "MulticastIPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressCollection,System", "IPAddressCollection");
            feature.AddKnownType("System.Net.NetworkInformation.SystemGatewayIPAddressInformation,System", "SystemGatewayIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.GatewayIPAddressInformation,System", "GatewayIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.GatewayIPAddressInformationCollection,System", "GatewayIPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.IPv4InterfaceProperties,System", "IPv4InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPv6InterfaceProperties,System", "IPv6InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IpHelperErrors,System", "IpHelperErrors");
            feature.AddKnownType("System.Net.NetworkInformation.AdapterFlags,System", "AdapterFlags");
            feature.AddKnownType("System.Net.NetworkInformation.AdapterAddressFlags,System", "AdapterAddressFlags");
            feature.AddKnownType("System.Net.NetworkInformation.OldOperationalStatus,System", "OldOperationalStatus");
            feature.AddKnownType("System.Net.NetworkInformation.GetAdaptersAddressesFlags,System", "GetAdaptersAddressesFlags");
            feature.AddKnownType("System.Net.NetworkInformation.IpAddrString,System", "IpAddrString");
            feature.AddKnownType("System.Net.NetworkInformation.FIXED_INFO,System", "FIXED_INFO");
            feature.AddKnownType("System.Net.NetworkInformation.IpSocketAddress,System", "IpSocketAddress");
            feature.AddKnownType("System.Net.NetworkInformation.IpAdapterAddress,System", "IpAdapterAddress");
            feature.AddKnownType("System.Net.NetworkInformation.IpAdapterUnicastAddress,System", "IpAdapterUnicastAddress");
            feature.AddKnownType("System.Net.NetworkInformation.IpAdapterAddresses,System", "IpAdapterAddresses");
            feature.AddKnownType("System.Net.NetworkInformation.InterfaceConnectionType,System", "InterfaceConnectionType");
            feature.AddKnownType("System.Net.NetworkInformation.InterfaceTunnelType,System", "InterfaceTunnelType");
            feature.AddKnownType("System.Net.NetworkInformation.IpPerAdapterInfo,System", "IpPerAdapterInfo");
            feature.AddKnownType("System.Net.NetworkInformation.MibIfRow2,System", "MibIfRow2");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdpStats,System", "MibUdpStats");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcpStats,System", "MibTcpStats");
            feature.AddKnownType("System.Net.NetworkInformation.MibIpStats,System", "MibIpStats");
            feature.AddKnownType("System.Net.NetworkInformation.MibIcmpInfo,System", "MibIcmpInfo");
            feature.AddKnownType("System.Net.NetworkInformation.MibIcmpStats,System", "MibIcmpStats");
            feature.AddKnownType("System.Net.NetworkInformation.MibIcmpInfoEx,System", "MibIcmpInfoEx");
            feature.AddKnownType("System.Net.NetworkInformation.MibIcmpStatsEx,System", "MibIcmpStatsEx");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcpTable,System", "MibTcpTable");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcpRow,System", "MibTcpRow");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcp6TableOwnerPid,System", "MibTcp6TableOwnerPid");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcp6RowOwnerPid,System", "MibTcp6RowOwnerPid");
            feature.AddKnownType("System.Net.NetworkInformation.TcpTableClass,System", "TcpTableClass");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdpTable,System", "MibUdpTable");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdpRow,System", "MibUdpRow");
            feature.AddKnownType("System.Net.NetworkInformation.UdpTableClass,System", "UdpTableClass");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdp6TableOwnerPid,System", "MibUdp6TableOwnerPid");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdp6RowOwnerPid,System", "MibUdp6RowOwnerPid");
            feature.AddKnownType("System.Net.NetworkInformation.IPOptions,System", "IPOptions");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpEchoReply,System", "IcmpEchoReply");
            feature.AddKnownType("System.Net.NetworkInformation.Ipv6Address,System", "Ipv6Address");
            feature.AddKnownType("System.Net.NetworkInformation.Icmp6EchoReply,System", "Icmp6EchoReply");
            feature.AddKnownType("System.Net.NetworkInformation.StartIPOptions,System", "StartIPOptions");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkAvailabilityEventArgs,System", "NetworkAvailabilityEventArgs");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkChange,System", "NetworkChange");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationException,System", "NetworkInformationException");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationAccess,System", "NetworkInformationAccess");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationPermissionAttribute,System", "NetworkInformationPermissionAttribute");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationPermission,System", "NetworkInformationPermission");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterface,System", "NetworkInterface");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterfaceComponent,System", "NetworkInterfaceComponent");
            feature.AddKnownType("System.Net.NetworkInformation.NetBiosNodeType,System", "NetBiosNodeType");
            feature.AddKnownType("System.Net.NetworkInformation.OperationalStatus,System", "OperationalStatus");
            feature.AddKnownType("System.Net.NetworkInformation.PhysicalAddress,System", "PhysicalAddress");
            feature.AddKnownType("System.Net.NetworkInformation.PingCompletedEventArgs,System", "PingCompletedEventArgs");
            feature.AddKnownType("System.Net.NetworkInformation.Ping,System", "Ping");
            feature.AddKnownType("System.Net.NetworkInformation.Ping+AsyncStateObject,System", "AsyncStateObject");
            feature.AddKnownType("System.Net.NetworkInformation.PingException,System", "PingException");
            feature.AddKnownType("System.Net.NetworkInformation.PingOptions,System", "PingOptions");
            feature.AddKnownType("System.Net.NetworkInformation.PingReply,System", "PingReply");
            feature.AddKnownType("System.Net.NetworkInformation.PrefixOrigin,System", "PrefixOrigin");
            feature.AddKnownType("System.Net.NetworkInformation.SafeCancelMibChangeNotify,System", "SafeCancelMibChangeNotify");
            feature.AddKnownType("System.Net.NetworkInformation.SafeFreeMibTable,System", "SafeFreeMibTable");
            feature.AddKnownType("System.Net.NetworkInformation.SuffixOrigin,System", "SuffixOrigin");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIcmpV4Statistics,System", "SystemIcmpV4Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV6StatType,System", "IcmpV6StatType");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIcmpV6Statistics,System", "SystemIcmpV6Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPAddressInformation,System", "SystemIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPGlobalProperties,System", "SystemIPGlobalProperties");
            feature.AddKnownType("System.Net.NetworkInformation.FixedInfo,System", "FixedInfo");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPInterfaceProperties,System", "SystemIPInterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPInterfaceStatistics,System", "SystemIPInterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPv4InterfaceStatistics,System", "SystemIPv4InterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPGlobalStatistics,System", "SystemIPGlobalStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemMulticastIPAddressInformation,System", "SystemMulticastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.SystemUnicastIPAddressInformation,System", "SystemUnicastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPv4InterfaceProperties,System", "SystemIPv4InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPv6InterfaceProperties,System", "SystemIPv6InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.SystemNetworkInterface,System", "SystemNetworkInterface");
            feature.AddKnownType("System.Net.NetworkInformation.SystemTcpConnectionInformation,System", "SystemTcpConnectionInformation");
            feature.AddKnownType("System.Net.NetworkInformation.SystemTcpStatistics,System", "SystemTcpStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemUdpStatistics,System", "SystemUdpStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.TeredoHelper,System", "TeredoHelper");
            feature.AddKnownType("System.Net.NetworkInformation.TcpConnectionInformation,System", "TcpConnectionInformation");
            feature.AddKnownType("System.Net.NetworkInformation.TcpState,System", "TcpState");
            feature.AddKnownType("System.Net.NetworkInformation.TcpStatistics,System", "TcpStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.UdpStatistics,System", "UdpStatistics");
            feature.AddKnownType("System.Net.Security.SecureChannel,System", "SecureChannel");
            feature.AddKnownType("System.Net.Security.ProtocolToken,System", "ProtocolToken");
            feature.AddKnownType("System.Net.Security.AuthenticatedStream,System", "AuthenticatedStream");
            feature.AddKnownType("System.Net.Security.AuthenticationLevel,System", "AuthenticationLevel");
            feature.AddKnownType("System.Net.Security.ProtectionLevel,System", "ProtectionLevel");
            feature.AddKnownType("System.Net.Security.NegotiateStream,System", "NegotiateStream");
            feature.AddKnownType("System.Net.Security.SslPolicyErrors,System", "SslPolicyErrors");
            feature.AddKnownType("System.Net.Security.EncryptionPolicy,System", "EncryptionPolicy");
            feature.AddKnownType("System.Net.Security.SslStream,System", "SslStream");
            feature.AddKnownType("System.Net.Security.NegoState,System", "NegoState");
            feature.AddKnownType("System.Net.Security.SslState,System", "SslState");
            feature.AddKnownType("System.Net.Security._SslStream,System", "_SslStream");
            feature.AddKnownType("System.Net.Sockets.SocketException,System", "SocketException");
            feature.AddKnownType("System.Net.Sockets.AddressFamily,System", "AddressFamily");
            feature.AddKnownType("System.Net.Sockets.AsyncEventBits,System", "AsyncEventBits");
            feature.AddKnownType("System.Net.Sockets.AsyncEventBitsPos,System", "AsyncEventBitsPos");
            feature.AddKnownType("System.Net.Sockets.NetworkEvents,System", "NetworkEvents");
            feature.AddKnownType("System.Net.Sockets.TimeValue,System", "TimeValue");
            feature.AddKnownType("System.Net.Sockets.IOControlCode,System", "IOControlCode");
            feature.AddKnownType("System.Net.Sockets.IPProtectionLevel,System", "IPProtectionLevel");
            feature.AddKnownType("System.Net.Sockets.LingerOption,System", "LingerOption");
            feature.AddKnownType("System.Net.Sockets.MulticastOption,System", "MulticastOption");
            feature.AddKnownType("System.Net.Sockets.IPv6MulticastOption,System", "IPv6MulticastOption");
            feature.AddKnownType("System.Net.Sockets.NetworkStream,System", "NetworkStream");
            feature.AddKnownType("System.Net.Sockets.ProtocolFamily,System", "ProtocolFamily");
            feature.AddKnownType("System.Net.Sockets.ProtocolType,System", "ProtocolType");
            feature.AddKnownType("System.Net.Sockets.SelectMode,System", "SelectMode");
            feature.AddKnownType("System.Net.Sockets.SocketInformationOptions,System", "SocketInformationOptions");
            feature.AddKnownType("System.Net.Sockets.SocketInformation,System", "SocketInformation");
            feature.AddKnownType("System.Net.Sockets.Socket,System", "Socket");
            feature.AddKnownType("System.Net.Sockets.ConnectAsyncResult,System", "ConnectAsyncResult");
            feature.AddKnownType("System.Net.Sockets.AcceptAsyncResult,System", "AcceptAsyncResult");
            feature.AddKnownType("System.Net.Sockets.SocketAsyncOperation,System", "SocketAsyncOperation");
            feature.AddKnownType("System.Net.Sockets.SendPacketsElement,System", "SendPacketsElement");
            feature.AddKnownType("System.Net.Sockets.SocketClientAccessPolicyProtocol,System", "SocketClientAccessPolicyProtocol");
            feature.AddKnownType("System.Net.Sockets.SocketAsyncEventArgs,System", "SocketAsyncEventArgs");
            feature.AddKnownType("System.Net.Sockets.SocketError,System", "SocketError");
            feature.AddKnownType("System.Net.Sockets.SocketFlags,System", "SocketFlags");
            feature.AddKnownType("System.Net.Sockets.SocketOptionLevel,System", "SocketOptionLevel");
            feature.AddKnownType("System.Net.Sockets.SocketOptionName,System", "SocketOptionName");
            feature.AddKnownType("System.Net.Sockets.SocketShutdown,System", "SocketShutdown");
            feature.AddKnownType("System.Net.Sockets.SocketType,System", "SocketType");
            feature.AddKnownType("System.Net.Sockets.TcpClient,System", "TcpClient");
            feature.AddKnownType("System.Net.Sockets.TcpListener,System", "TcpListener");
            feature.AddKnownType("System.Net.Sockets.TransmitFileOptions,System", "TransmitFileOptions");
            feature.AddKnownType("System.Net.Sockets.UdpClient,System", "UdpClient");
            feature.AddKnownType("System.Net.Sockets.UdpReceiveResult,System", "UdpReceiveResult");
            feature.AddKnownType("System.Net.Sockets.AcceptOverlappedAsyncResult,System", "AcceptOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.BaseOverlappedAsyncResult,System", "BaseOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.OverlappedCache,System", "OverlappedCache");
            feature.AddKnownType("System.Net.Sockets.ConnectOverlappedAsyncResult,System", "ConnectOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.DisconnectOverlappedAsyncResult,System", "DisconnectOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.DynamicWinsockMethods,System", "DynamicWinsockMethods");
            feature.AddKnownType("System.Net.Sockets.MultipleConnectAsync,System", "MultipleConnectAsync");
            feature.AddKnownType("System.Net.Sockets.SingleSocketMultipleConnectAsync,System", "SingleSocketMultipleConnectAsync");
            feature.AddKnownType("System.Net.Sockets.MultipleSocketMultipleConnectAsync,System", "MultipleSocketMultipleConnectAsync");
            feature.AddKnownType("System.Net.Sockets.OverlappedAsyncResult,System", "OverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.TransmitFileOverlappedAsyncResult,System", "TransmitFileOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.ReceiveMessageOverlappedAsyncResult,System", "ReceiveMessageOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.IPPacketInformation,System", "IPPacketInformation");
            feature.AddKnownType("System.Net.WebSockets.ClientWebSocket,System", "ClientWebSocket");
            feature.AddKnownType("System.Net.WebSockets.ClientWebSocketOptions,System", "ClientWebSocketOptions");
            feature.AddKnownType("System.Net.WebSockets.InternalClientWebSocket,System", "InternalClientWebSocket");
            feature.AddKnownType("System.Net.WebSockets.HttpListenerWebSocketContext,System", "HttpListenerWebSocketContext");
            feature.AddKnownType("System.Net.WebSockets.ServerWebSocket,System", "ServerWebSocket");
            feature.AddKnownType("System.Net.WebSockets.WebSocket,System", "WebSocket");
            feature.AddKnownType("System.Net.WebSockets.WebSocketBase,System", "WebSocketBase");
            feature.AddKnownType("System.Net.WebSockets.WebSocketBase+IWebSocketStream,System", "IWebSocketStream");
            feature.AddKnownType("System.Net.WebSockets.WebSocketBuffer,System", "WebSocketBuffer");
            feature.AddKnownType("System.Net.WebSockets.WebSocketCloseStatus,System", "WebSocketCloseStatus");
            feature.AddKnownType("System.Net.WebSockets.WebSocketConnectionStream,System", "WebSocketConnectionStream");
            feature.AddKnownType("System.Net.WebSockets.WebSocketContext,System", "WebSocketContext");
            feature.AddKnownType("System.Net.WebSockets.WebSocketError,System", "WebSocketError");
            feature.AddKnownType("System.Net.WebSockets.WebSocketException,System", "WebSocketException");
            feature.AddKnownType("System.Net.WebSockets.WebSocketHttpListenerDuplexStream,System", "WebSocketHttpListenerDuplexStream");
            feature.AddKnownType("System.Net.WebSockets.WebSocketHttpListenerDuplexStream+HttpListenerAsyncEventArgs,System", "HttpListenerAsyncEventArgs");
            feature.AddKnownType("System.Net.WebSockets.WebSocketHttpListenerDuplexStream+HttpListenerAsyncEventArgs+HttpListenerAsyncOperation,System", "HttpListenerAsyncEventArgs.HttpListenerAsyncOperation");
            feature.AddKnownType("System.Net.WebSockets.WebSocketMessageType,System", "WebSocketMessageType");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+Action,System", "Action");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+BufferType,System", "BufferType");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+PropertyType,System", "PropertyType");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+ActionQueue,System", "ActionQueue");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+Property,System", "Property");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+Buffer,System", "Buffer");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+DataBuffer,System", "DataBuffer");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+CloseBuffer,System", "CloseBuffer");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+HttpHeader,System", "HttpHeader");
            feature.AddKnownType("System.Net.WebSockets.WebSocketReceiveResult,System", "WebSocketReceiveResult");
            feature.AddKnownType("System.Net.WebSockets.WebSocketState,System", "WebSocketState");
            feature.AddKnownType("System.Reflection.ICustomTypeProvider,System", "ICustomTypeProvider");
            feature.AddKnownType("System.Runtime.InteropServices.HandleCollector,System", "HandleCollector");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultParameterValueAttribute,System", "DefaultParameterValueAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.StandardOleMarshalObject,System", "StandardOleMarshalObject");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ADVF,System", "ADVF");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DATADIR,System", "DATADIR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DVASPECT,System", "DVASPECT");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FORMATETC,System", "FORMATETC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IAdviseSink,System", "IAdviseSink");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDataObject,System", "IDataObject");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumFORMATETC,System", "IEnumFORMATETC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumSTATDATA,System", "IEnumSTATDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STATDATA,System", "STATDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STGMEDIUM,System", "STGMEDIUM");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYMED,System", "TYMED");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.INotifyCollectionChangedEventArgs,System", "INotifyCollectionChangedEventArgs");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IPropertyChangedEventArgs,System", "IPropertyChangedEventArgs");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.INotifyCollectionChanged_WinRT,System", "INotifyCollectionChanged_WinRT");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.INotifyPropertyChanged_WinRT,System", "INotifyPropertyChanged_WinRT");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICommand_WinRT,System", "ICommand_WinRT");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NotifyCollectionChangedToManagedAdapter,System", "NotifyCollectionChangedToManagedAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NotifyCollectionChangedToWinRTAdapter,System", "NotifyCollectionChangedToWinRTAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NotifyPropertyChangedToManagedAdapter,System", "NotifyPropertyChangedToManagedAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NotifyPropertyChangedToWinRTAdapter,System", "NotifyPropertyChangedToWinRTAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICommandToManagedAdapter,System", "ICommandToManagedAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICommandToWinRTAdapter,System", "ICommandToWinRTAdapter");
            feature.AddKnownType("System.Runtime.Versioning.FrameworkName,System", "FrameworkName");
            feature.AddKnownType("System.Security.AccessControl.SemaphoreRights,System", "SemaphoreRights");
            feature.AddKnownType("System.Security.AccessControl.SemaphoreAccessRule,System", "SemaphoreAccessRule");
            feature.AddKnownType("System.Security.AccessControl.SemaphoreAuditRule,System", "SemaphoreAuditRule");
            feature.AddKnownType("System.Security.AccessControl.SemaphoreSecurity,System", "SemaphoreSecurity");
            feature.AddKnownType("System.Security.Authentication.AuthenticationException,System", "AuthenticationException");
            feature.AddKnownType("System.Security.Authentication.InvalidCredentialException,System", "InvalidCredentialException");
            feature.AddKnownType("System.Security.Authentication.SslProtocols,System", "SslProtocols");
            feature.AddKnownType("System.Security.Authentication.ExchangeAlgorithmType,System", "ExchangeAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.CipherAlgorithmType,System", "CipherAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.HashAlgorithmType,System", "HashAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ChannelBinding,System", "ChannelBinding");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ChannelBindingKind,System", "ChannelBindingKind");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System", "ExtendedProtectionPolicy");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter,System", "ExtendedProtectionPolicyTypeConverter");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System", "PolicyEnforcement");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ProtectionScenario,System", "ProtectionScenario");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ServiceNameCollection,System", "ServiceNameCollection");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.TokenBindingType,System", "TokenBindingType");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.TokenBinding,System", "TokenBinding");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement,System", "ExtendedProtectionPolicyElement");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection,System", "ServiceNameElementCollection");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement,System", "ServiceNameElement");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedData,System", "AsnEncodedData");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedDataCollection,System", "AsnEncodedDataCollection");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedDataEnumerator,System", "AsnEncodedDataEnumerator");
            feature.AddKnownType("System.Security.Cryptography.BigInt,System", "BigInt");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase,System", "CAPIBase");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+BLOBHEADER,System", "BLOBHEADER");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_INFO,System", "CERT_ALT_NAME_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_ENTRY,System", "CERT_ALT_NAME_ENTRY");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_ENTRY_UNION,System", "CERT_ALT_NAME_ENTRY_UNION");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_BASIC_CONSTRAINTS_INFO,System", "CERT_BASIC_CONSTRAINTS_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_BASIC_CONSTRAINTS2_INFO,System", "CERT_BASIC_CONSTRAINTS2_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_CONTEXT,System", "CERT_CHAIN_CONTEXT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_ELEMENT,System", "CERT_CHAIN_ELEMENT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_PARA,System", "CERT_CHAIN_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_POLICY_PARA,System", "CERT_CHAIN_POLICY_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_POLICY_STATUS,System", "CERT_CHAIN_POLICY_STATUS");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CONTEXT,System", "CERT_CONTEXT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_DSS_PARAMETERS,System", "CERT_DSS_PARAMETERS");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ENHKEY_USAGE,System", "CERT_ENHKEY_USAGE");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_EXTENSION,System", "CERT_EXTENSION");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ID,System", "CERT_ID");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ID_UNION,System", "CERT_ID_UNION");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ISSUER_SERIAL_NUMBER,System", "CERT_ISSUER_SERIAL_NUMBER");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_INFO,System", "CERT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_KEY_USAGE_RESTRICTION_INFO,System", "CERT_KEY_USAGE_RESTRICTION_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_NAME_INFO,System", "CERT_NAME_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_NAME_VALUE,System", "CERT_NAME_VALUE");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_OTHER_NAME,System", "CERT_OTHER_NAME");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_POLICY_ID,System", "CERT_POLICY_ID");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_POLICIES_INFO,System", "CERT_POLICIES_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_POLICY_INFO,System", "CERT_POLICY_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_POLICY_QUALIFIER_INFO,System", "CERT_POLICY_QUALIFIER_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_PUBLIC_KEY_INFO,System", "CERT_PUBLIC_KEY_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_PUBLIC_KEY_INFO2,System", "CERT_PUBLIC_KEY_INFO2");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_RDN,System", "CERT_RDN");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_RDN_ATTR,System", "CERT_RDN_ATTR");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_SIMPLE_CHAIN,System", "CERT_SIMPLE_CHAIN");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_TEMPLATE_EXT,System", "CERT_TEMPLATE_EXT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_TRUST_STATUS,System", "CERT_TRUST_STATUS");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_USAGE_MATCH,System", "CERT_USAGE_MATCH");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CMS_RECIPIENT_INFO,System", "CMSG_CMS_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CMS_SIGNER_INFO,System", "CMSG_CMS_SIGNER_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA,System", "CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_DECRYPT_PARA,System", "CMSG_CTRL_DECRYPT_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA,System", "CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_KEY_TRANS_DECRYPT_PARA,System", "CMSG_CTRL_KEY_TRANS_DECRYPT_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO,System", "CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO,System", "CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_RC2_AUX_INFO,System", "CMSG_RC2_AUX_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCODE_INFO,System", "CMSG_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO,System", "CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_ENVELOPED_ENCODE_INFO,System", "CMSG_ENVELOPED_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_KEY_AGREE_DECRYPT_PARA,System", "CMSG_CTRL_KEY_AGREE_DECRYPT_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_RECIPIENT_INFO,System", "CMSG_KEY_AGREE_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_CERT_ID_RECIPIENT_INFO,System", "CMSG_KEY_AGREE_CERT_ID_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_PUBLIC_KEY_RECIPIENT_INFO,System", "CMSG_KEY_AGREE_PUBLIC_KEY_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCRYPTED_KEY_INFO,System", "CMSG_RECIPIENT_ENCRYPTED_KEY_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA,System", "CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_TRANS_RECIPIENT_INFO,System", "CMSG_KEY_TRANS_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_SIGNED_ENCODE_INFO,System", "CMSG_SIGNED_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_SIGNER_ENCODE_INFO,System", "CMSG_SIGNER_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_SIGNER_INFO,System", "CMSG_SIGNER_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_STREAM_INFO,System", "CMSG_STREAM_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ALGORITHM_IDENTIFIER,System", "CRYPT_ALGORITHM_IDENTIFIER");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ALGORITHM_IDENTIFIER2,System", "CRYPT_ALGORITHM_IDENTIFIER2");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTE,System", "CRYPT_ATTRIBUTE");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTES,System", "CRYPT_ATTRIBUTES");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTE_TYPE_VALUE,System", "CRYPT_ATTRIBUTE_TYPE_VALUE");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_BIT_BLOB,System", "CRYPT_BIT_BLOB");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_KEY_PROV_INFO,System", "CRYPT_KEY_PROV_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_OID_INFO,System", "CRYPT_OID_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_RC2_CBC_PARAMETERS,System", "CRYPT_RC2_CBC_PARAMETERS");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPTOAPI_BLOB,System", "CRYPTOAPI_BLOB");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+DSSPUBKEY,System", "DSSPUBKEY");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+KEY_USAGE_STRUCT,System", "KEY_USAGE_STRUCT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+PROV_ENUMALGS_EX,System", "PROV_ENUMALGS_EX");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+RSAPUBKEY,System", "RSAPUBKEY");
            feature.AddKnownType("System.Security.Cryptography.CAPINative,System", "CAPINative");
            feature.AddKnownType("System.Security.Cryptography.CAPISafe,System", "CAPISafe");
            feature.AddKnownType("System.Security.Cryptography.CAPIUnsafe,System", "CAPIUnsafe");
            feature.AddKnownType("System.Security.Cryptography.CAPIMethods,System", "CAPIMethods");
            feature.AddKnownType("System.Security.Cryptography.CAPI,System", "CAPI");
            feature.AddKnownType("System.Security.Cryptography.SafeLibraryHandle,System", "SafeLibraryHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeLocalAllocHandle,System", "SafeLocalAllocHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCryptProvHandle,System", "SafeCryptProvHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCertContextHandle,System", "SafeCertContextHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCertStoreHandle,System", "SafeCertStoreHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCryptMsgHandle,System", "SafeCryptMsgHandle");
            feature.AddKnownType("System.Security.Cryptography.OidGroup,System", "OidGroup");
            feature.AddKnownType("System.Security.Cryptography.Oid,System", "Oid");
            feature.AddKnownType("System.Security.Cryptography.OidCollection,System", "OidCollection");
            feature.AddKnownType("System.Security.Cryptography.OidEnumerator,System", "OidEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags,System", "X500DistinguishedNameFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X500DistinguishedName,System", "X500DistinguishedName");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509NameType,System", "X509NameType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509IncludeOption,System", "X509IncludeOption");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.PublicKey,System", "PublicKey");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2,System", "X509Certificate2");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509FindType,System", "X509FindType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System", "X509Certificate2Collection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator,System", "X509Certificate2Enumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainStatusFlags,System", "X509ChainStatusFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainStatus,System", "X509ChainStatus");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Chain,System", "X509Chain");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElement,System", "X509ChainElement");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElementCollection,System", "X509ChainElementCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator,System", "X509ChainElementEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509RevocationMode,System", "X509RevocationMode");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509RevocationFlag,System", "X509RevocationFlag");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509VerificationFlags,System", "X509VerificationFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainPolicy,System", "X509ChainPolicy");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Extension,System", "X509Extension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System", "X509KeyUsageFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyUsageExtension,System", "X509KeyUsageExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension,System", "X509BasicConstraintsExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension,System", "X509EnhancedKeyUsageExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm,System", "X509SubjectKeyIdentifierHashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension,System", "X509SubjectKeyIdentifierExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ExtensionCollection,System", "X509ExtensionCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator,System", "X509ExtensionEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.StoreLocation,System", "StoreLocation");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.OpenFlags,System", "OpenFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.StoreName,System", "StoreName");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Store,System", "X509Store");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Utils,System", "X509Utils");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509CertificateCollection,System", "X509CertificateCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509CertificateCollection+X509CertificateEnumerator,System", "X509CertificateCollection.X509CertificateEnumerator");
            feature.AddKnownType("System.Security.Permissions.StorePermission,System", "StorePermission");
            feature.AddKnownType("System.Security.Permissions.StorePermissionAttribute,System", "StorePermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.StorePermissionFlags,System", "StorePermissionFlags");
            feature.AddKnownType("System.Security.Permissions.TypeDescriptorPermissionFlags,System", "TypeDescriptorPermissionFlags");
            feature.AddKnownType("System.Security.Permissions.TypeDescriptorPermission,System", "TypeDescriptorPermission");
            feature.AddKnownType("System.Security.Permissions.TypeDescriptorPermissionAttribute,System", "TypeDescriptorPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.ResourcePermissionBase,System", "ResourcePermissionBase");
            feature.AddKnownType("System.Security.Permissions.ResourcePermissionBaseEntry,System", "ResourcePermissionBaseEntry");
            feature.AddKnownType("System.Text.RegularExpressions.Regex,System", "Regex");
            feature.AddKnownType("System.Text.RegularExpressions.CachedCodeEntry,System", "CachedCodeEntry");
            feature.AddKnownType("System.Text.RegularExpressions.ExclusiveReference,System", "ExclusiveReference");
            feature.AddKnownType("System.Text.RegularExpressions.SharedReference,System", "SharedReference");
            feature.AddKnownType("System.Text.RegularExpressions.RegexBoyerMoore,System", "RegexBoyerMoore");
            feature.AddKnownType("System.Text.RegularExpressions.Capture,System", "Capture");
            feature.AddKnownType("System.Text.RegularExpressions.CaptureCollection,System", "CaptureCollection");
            feature.AddKnownType("System.Text.RegularExpressions.CaptureEnumerator,System", "CaptureEnumerator");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCharClass,System", "RegexCharClass");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCode,System", "RegexCode");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCompilationInfo,System", "RegexCompilationInfo");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCompiler,System", "RegexCompiler");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCompiler+BacktrackNote,System", "BacktrackNote");
            feature.AddKnownType("System.Text.RegularExpressions.RegexTypeCompiler,System", "RegexTypeCompiler");
            feature.AddKnownType("System.Text.RegularExpressions.RegexLWCGCompiler,System", "RegexLWCGCompiler");
            feature.AddKnownType("System.Text.RegularExpressions.RegexFCD,System", "RegexFCD");
            feature.AddKnownType("System.Text.RegularExpressions.RegexFC,System", "RegexFC");
            feature.AddKnownType("System.Text.RegularExpressions.RegexPrefix,System", "RegexPrefix");
            feature.AddKnownType("System.Text.RegularExpressions.Group,System", "Group");
            feature.AddKnownType("System.Text.RegularExpressions.GroupCollection,System", "GroupCollection");
            feature.AddKnownType("System.Text.RegularExpressions.GroupEnumerator,System", "GroupEnumerator");
            feature.AddKnownType("System.Text.RegularExpressions.RegexInterpreter,System", "RegexInterpreter");
            feature.AddKnownType("System.Text.RegularExpressions.Match,System", "Match");
            feature.AddKnownType("System.Text.RegularExpressions.MatchSparse,System", "MatchSparse");
            feature.AddKnownType("System.Text.RegularExpressions.MatchCollection,System", "MatchCollection");
            feature.AddKnownType("System.Text.RegularExpressions.MatchEnumerator,System", "MatchEnumerator");
            feature.AddKnownType("System.Text.RegularExpressions.RegexMatchTimeoutException,System", "RegexMatchTimeoutException");
            feature.AddKnownType("System.Text.RegularExpressions.RegexNode,System", "RegexNode");
            feature.AddKnownType("System.Text.RegularExpressions.RegexOptions,System", "RegexOptions");
            feature.AddKnownType("System.Text.RegularExpressions.RegexParser,System", "RegexParser");
            feature.AddKnownType("System.Text.RegularExpressions.RegexReplacement,System", "RegexReplacement");
            feature.AddKnownType("System.Text.RegularExpressions.RegexRunner,System", "RegexRunner");
            feature.AddKnownType("System.Text.RegularExpressions.RegexRunnerFactory,System", "RegexRunnerFactory");
            feature.AddKnownType("System.Text.RegularExpressions.RegexTree,System", "RegexTree");
            feature.AddKnownType("System.Text.RegularExpressions.RegexWriter,System", "RegexWriter");
            feature.AddKnownType("System.Text.RegularExpressions.CompiledRegexRunner,System", "CompiledRegexRunner");
            feature.AddKnownType("System.Text.RegularExpressions.CompiledRegexRunnerFactory,System", "CompiledRegexRunnerFactory");
            feature.AddKnownType("System.Threading.Semaphore,System", "Semaphore");
            feature.AddKnownType("System.Threading.BarrierPostPhaseException,System", "BarrierPostPhaseException");
            feature.AddKnownType("System.Threading.Barrier,System", "Barrier");
            feature.AddKnownType("System.Threading.ThreadExceptionEventArgs,System", "ThreadExceptionEventArgs");
            feature.AddKnownType("System.Timers.ElapsedEventArgs,System", "ElapsedEventArgs");
            feature.AddKnownType("System.Timers.Timer,System", "Timer");
            feature.AddKnownType("System.Timers.Timer+FILE_TIME,System", "FILE_TIME");
            feature.AddKnownType("System.Timers.TimersDescriptionAttribute,System", "TimersDescriptionAttribute");
            feature.AddKnownType("System.Web.AspNetHostingPermissionLevel,System", "AspNetHostingPermissionLevel");
            feature.AddKnownType("System.Web.AspNetHostingPermissionAttribute,System", "AspNetHostingPermissionAttribute");
            feature.AddKnownType("System.Web.AspNetHostingPermission,System", "AspNetHostingPermission");
            feature.AddKnownType("System.Windows.Input.BuildInfo,System", "BuildInfo");
            feature.AddKnownType("System.Windows.Input.ICommand,System", "ICommand");
            feature.AddKnownType("System.Windows.Markup.ValueSerializerAttribute,System", "ValueSerializerAttribute");
            feature.AddKnownType("System.Globalization.CultureAwareComparer,System.Globalization.Extensions", "CultureAwareComparer");
            feature.AddKnownType("System.IO.Compression.ZipArchive,System.IO.Compression", "ZipArchive");
            feature.AddKnownType("System.IO.Compression.ZipArchiveEntry,System.IO.Compression", "ZipArchiveEntry");
            feature.AddKnownType("System.IO.Compression.ZipArchiveEntry+DirectToArchiveWriterStream,System.IO.Compression", "DirectToArchiveWriterStream");
            feature.AddKnownType("System.IO.Compression.ZipArchiveEntry+BitFlagValues,System.IO.Compression", "BitFlagValues");
            feature.AddKnownType("System.IO.Compression.ZipArchiveEntry+CompressionMethodValues,System.IO.Compression", "CompressionMethodValues");
            feature.AddKnownType("System.IO.Compression.ZipArchiveEntry+OpenableValues,System.IO.Compression", "OpenableValues");
            feature.AddKnownType("System.IO.Compression.ZipArchiveMode,System.IO.Compression", "ZipArchiveMode");
            feature.AddKnownType("System.IO.Compression.ZipGenericExtraField,System.IO.Compression", "ZipGenericExtraField");
            feature.AddKnownType("System.IO.Compression.Zip64ExtraField,System.IO.Compression", "Zip64ExtraField");
            feature.AddKnownType("System.IO.Compression.Zip64EndOfCentralDirectoryLocator,System.IO.Compression", "Zip64EndOfCentralDirectoryLocator");
            feature.AddKnownType("System.IO.Compression.Zip64EndOfCentralDirectoryRecord,System.IO.Compression", "Zip64EndOfCentralDirectoryRecord");
            feature.AddKnownType("System.IO.Compression.ZipLocalFileHeader,System.IO.Compression", "ZipLocalFileHeader");
            feature.AddKnownType("System.IO.Compression.ZipCentralDirectoryFileHeader,System.IO.Compression", "ZipCentralDirectoryFileHeader");
            feature.AddKnownType("System.IO.Compression.ZipEndOfCentralDirectoryBlock,System.IO.Compression", "ZipEndOfCentralDirectoryBlock");
            feature.AddKnownType("System.IO.Compression.WrappedStream,System.IO.Compression", "WrappedStream");
            feature.AddKnownType("System.IO.Compression.SubReadStream,System.IO.Compression", "SubReadStream");
            feature.AddKnownType("System.IO.Compression.CheckSumAndSizeWriteStream,System.IO.Compression", "CheckSumAndSizeWriteStream");
            feature.AddKnownType("System.IO.Compression.ZipVersionNeededValues,System.IO.Compression", "ZipVersionNeededValues");
            feature.AddKnownType("System.IO.Compression.ZipVersionMadeByPlatform,System.IO.Compression", "ZipVersionMadeByPlatform");
            feature.AddKnownType("System.IO.Compression.BlockType,System.IO.Compression", "BlockType");
            feature.AddKnownType("System.IO.Compression.CopyEncoder,System.IO.Compression", "CopyEncoder");
            feature.AddKnownType("System.IO.Compression.DeflateInput,System.IO.Compression", "DeflateInput");
            feature.AddKnownType("System.IO.Compression.DeflateInput+InputState,System.IO.Compression", "InputState");
            feature.AddKnownType("System.IO.Compression.DeflaterManaged,System.IO.Compression", "DeflaterManaged");
            feature.AddKnownType("System.IO.Compression.DeflaterManaged+DeflaterState,System.IO.Compression", "DeflaterState");
            feature.AddKnownType("System.IO.Compression.DeflateManagedStream,System.IO.Compression", "DeflateManagedStream");
            feature.AddKnownType("System.IO.Compression.FastEncoder,System.IO.Compression", "FastEncoder");
            feature.AddKnownType("System.IO.Compression.FastEncoderWindow,System.IO.Compression", "FastEncoderWindow");
            feature.AddKnownType("System.IO.Compression.IFileFormatWriter,System.IO.Compression", "IFileFormatWriter");
            feature.AddKnownType("System.IO.Compression.IFileFormatReader,System.IO.Compression", "IFileFormatReader");
            feature.AddKnownType("System.IO.Compression.HuffmanTree,System.IO.Compression", "HuffmanTree");
            feature.AddKnownType("System.IO.Compression.InflaterManaged,System.IO.Compression", "InflaterManaged");
            feature.AddKnownType("System.IO.Compression.InflaterState,System.IO.Compression", "InflaterState");
            feature.AddKnownType("System.IO.Compression.InputBuffer,System.IO.Compression", "InputBuffer");
            feature.AddKnownType("System.IO.Compression.Match,System.IO.Compression", "Match");
            feature.AddKnownType("System.IO.Compression.MatchState,System.IO.Compression", "MatchState");
            feature.AddKnownType("System.IO.Compression.OutputBuffer,System.IO.Compression", "OutputBuffer");
            feature.AddKnownType("System.IO.Compression.OutputBuffer+BufferState,System.IO.Compression", "BufferState");
            feature.AddKnownType("System.IO.Compression.OutputWindow,System.IO.Compression", "OutputWindow");
            feature.AddKnownType("System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper,System.IO.Compression", "PositionPreservingWriteOnlyStreamWrapper");
            feature.AddKnownType("System.Threading.Tasks.TaskToApm+TaskWrapperAsyncResult,System.IO.Compression", "TaskWrapperAsyncResult");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Memory", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.SequencePosition,System.Memory", "SequencePosition");
            feature.AddKnownType("System.ExceptionArgument,System.Memory", "ExceptionArgument");
            feature.AddKnownType("System.NumberBuffer,System.Memory", "NumberBuffer");
            feature.AddKnownType("System.Memory`1,System.Memory", "Memory'1");
            feature.AddKnownType("System.MemoryDebugView`1,System.Memory", "MemoryDebugView'1");
            feature.AddKnownType("System.ReadOnlyMemory`1,System.Memory", "ReadOnlyMemory'1");
            feature.AddKnownType("System.ReadOnlySpan`1,System.Memory", "ReadOnlySpan'1");
            feature.AddKnownType("System.ReadOnlySpan`1+Enumerator,System.Memory", "ReadOnlySpan'1.Enumerator'0");
            feature.AddKnownType("System.Span`1,System.Memory", "Span'1");
            feature.AddKnownType("System.Span`1+Enumerator,System.Memory", "Span'1.Enumerator'0");
            feature.AddKnownType("System.SpanDebugView`1,System.Memory", "SpanDebugView'1");
            feature.AddKnownType("System.SpanHelpers+ComparerComparable`2,System.Memory", "ComparerComparable'2");
            feature.AddKnownType("System.SpanHelpers+Reg64,System.Memory", "Reg64");
            feature.AddKnownType("System.SpanHelpers+Reg32,System.Memory", "Reg32");
            feature.AddKnownType("System.SpanHelpers+Reg16,System.Memory", "Reg16");
            feature.AddKnownType("System.NUInt,System.Memory", "NUInt");
            feature.AddKnownType("System.Pinnable`1,System.Memory", "Pinnable'1");
            feature.AddKnownType("System.MutableDecimal,System.Memory", "MutableDecimal");
            feature.AddKnownType("System.Buffers.ArrayMemoryPool`1,System.Memory", "ArrayMemoryPool'1");
            feature.AddKnownType("System.Buffers.ArrayMemoryPool`1+ArrayMemoryPoolBuffer,System.Memory", "ArrayMemoryPoolBuffer'0");
            feature.AddKnownType("System.Buffers.IBufferWriter`1,System.Memory", "IBufferWriter'1");
            feature.AddKnownType("System.Buffers.MemoryPool`1,System.Memory", "MemoryPool'1");
            feature.AddKnownType("System.Buffers.OperationStatus,System.Memory", "OperationStatus");
            feature.AddKnownType("System.Buffers.ReadOnlySequence`1,System.Memory", "ReadOnlySequence'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequence`1+Enumerator,System.Memory", "ReadOnlySequence'1.Enumerator'0");
            feature.AddKnownType("System.Buffers.ReadOnlySequence`1+SequenceType,System.Memory", "SequenceType'0");
            feature.AddKnownType("System.Buffers.ReadOnlySequenceDebugView`1,System.Memory", "ReadOnlySequenceDebugView'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequenceDebugView`1+ReadOnlySequenceDebugViewSegments,System.Memory", "ReadOnlySequenceDebugView'1.ReadOnlySequenceDebugViewSegments'0");
            feature.AddKnownType("System.Buffers.ReadOnlySequenceSegment`1,System.Memory", "ReadOnlySequenceSegment'1");
            feature.AddKnownType("System.Buffers.StandardFormat,System.Memory", "StandardFormat");
            feature.AddKnownType("System.Buffers.IPinnable,System.Memory", "IPinnable");
            feature.AddKnownType("System.Buffers.IMemoryOwner`1,System.Memory", "IMemoryOwner'1");
            feature.AddKnownType("System.Buffers.MemoryHandle,System.Memory", "MemoryHandle");
            feature.AddKnownType("System.Buffers.MemoryManager`1,System.Memory", "MemoryManager'1");
            feature.AddKnownType("System.Buffers.Text.FormattingHelpers+HexCasing,System.Memory", "FormattingHelpers.HexCasing");
            feature.AddKnownType("System.Buffers.Text.Utf8Formatter+DecomposedGuid,System.Memory", "DecomposedGuid");
            feature.AddKnownType("System.Buffers.Text.Utf8Parser+ParseNumberOptions,System.Memory", "ParseNumberOptions");
            feature.AddKnownType("System.Buffers.Text.Utf8Parser+ComponentParseResult,System.Memory", "ComponentParseResult");
            feature.AddKnownType("System.Buffers.Text.Utf8Parser+TimeSpanSplitter,System.Memory", "TimeSpanSplitter");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute,System.Memory", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsByRefLikeAttribute,System.Memory", "IsByRefLikeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.__BlockReflectionAttribute,System.Memory", "__BlockReflectionAttribute");
            feature.AddKnownType("System.UriShim,System.Net.Http", "UriShim");
            feature.AddKnownType("System.Net.NetEventSource,System.Net.Http", "NetEventSource");
            feature.AddKnownType("System.Net.NetEventSource+Keywords,System.Net.Http", "NetEventSource.Keywords");
            feature.AddKnownType("System.Net.Http.ByteArrayContent,System.Net.Http", "ByteArrayContent");
            feature.AddKnownType("System.Net.Http.ClientCertificateOption,System.Net.Http", "ClientCertificateOption");
            feature.AddKnownType("System.Net.Http.DelegatingHandler,System.Net.Http", "DelegatingHandler");
            feature.AddKnownType("System.Net.Http.FormUrlEncodedContent,System.Net.Http", "FormUrlEncodedContent");
            feature.AddKnownType("System.Net.Http.HttpClient,System.Net.Http", "HttpClient");
            feature.AddKnownType("System.Net.Http.HttpCompletionOption,System.Net.Http", "HttpCompletionOption");
            feature.AddKnownType("System.Net.Http.HttpContent,System.Net.Http", "HttpContent");
            feature.AddKnownType("System.Net.Http.HttpContent+LimitMemoryStream,System.Net.Http", "LimitMemoryStream");
            feature.AddKnownType("System.Net.Http.HttpMessageHandler,System.Net.Http", "HttpMessageHandler");
            feature.AddKnownType("System.Net.Http.HttpMessageInvoker,System.Net.Http", "HttpMessageInvoker");
            feature.AddKnownType("System.Net.Http.HttpMethod,System.Net.Http", "HttpMethod");
            feature.AddKnownType("System.Net.Http.HttpParseResult,System.Net.Http", "HttpParseResult");
            feature.AddKnownType("System.Net.Http.HttpRequestException,System.Net.Http", "HttpRequestException");
            feature.AddKnownType("System.Net.Http.HttpRequestMessage,System.Net.Http", "HttpRequestMessage");
            feature.AddKnownType("System.Net.Http.HttpResponseMessage,System.Net.Http", "HttpResponseMessage");
            feature.AddKnownType("System.Net.Http.MessageProcessingHandler,System.Net.Http", "MessageProcessingHandler");
            feature.AddKnownType("System.Net.Http.MessageProcessingHandler+SendState,System.Net.Http", "SendState");
            feature.AddKnownType("System.Net.Http.MultipartContent,System.Net.Http", "MultipartContent");
            feature.AddKnownType("System.Net.Http.MultipartContent+ContentReadStream,System.Net.Http", "ContentReadStream");
            feature.AddKnownType("System.Net.Http.MultipartFormDataContent,System.Net.Http", "MultipartFormDataContent");
            feature.AddKnownType("System.Net.Http.StreamContent,System.Net.Http", "StreamContent");
            feature.AddKnownType("System.Net.Http.StreamContent+ReadOnlyStream,System.Net.Http", "ReadOnlyStream");
            feature.AddKnownType("System.Net.Http.StringContent,System.Net.Http", "StringContent");
            feature.AddKnownType("System.Net.Http.DelegatingStream,System.Net.Http", "DelegatingStream");
            feature.AddKnownType("System.Net.Http.HttpClientHandler,System.Net.Http", "HttpClientHandler");
            feature.AddKnownType("System.Net.Http.HttpClientHandler+RequestState,System.Net.Http", "RequestState");
            feature.AddKnownType("System.Net.Http.HttpClientHandler+WebExceptionWrapperStream,System.Net.Http", "WebExceptionWrapperStream");
            feature.AddKnownType("System.Net.Http.Headers.AuthenticationHeaderValue,System.Net.Http", "AuthenticationHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.BaseHeaderParser,System.Net.Http", "BaseHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.ByteArrayHeaderParser,System.Net.Http", "ByteArrayHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.CacheControlHeaderParser,System.Net.Http", "CacheControlHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.CacheControlHeaderValue,System.Net.Http", "CacheControlHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ContentDispositionHeaderValue,System.Net.Http", "ContentDispositionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ContentRangeHeaderValue,System.Net.Http", "ContentRangeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.DateHeaderParser,System.Net.Http", "DateHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.EntityTagHeaderValue,System.Net.Http", "EntityTagHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.GenericHeaderParser,System.Net.Http", "GenericHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.HttpContentHeaders,System.Net.Http", "HttpContentHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpGeneralHeaders,System.Net.Http", "HttpGeneralHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaderParser,System.Net.Http", "HttpHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaders,System.Net.Http", "HttpHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaders+StoreLocation,System.Net.Http", "StoreLocation");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaders+HeaderStoreItemInfo,System.Net.Http", "HeaderStoreItemInfo");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaderValueCollection`1,System.Net.Http", "HttpHeaderValueCollection'1");
            feature.AddKnownType("System.Net.Http.Headers.HttpRequestHeaders,System.Net.Http", "HttpRequestHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpResponseHeaders,System.Net.Http", "HttpResponseHeaders");
            feature.AddKnownType("System.Net.Http.Headers.Int32NumberHeaderParser,System.Net.Http", "Int32NumberHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.Int64NumberHeaderParser,System.Net.Http", "Int64NumberHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.MediaTypeHeaderParser,System.Net.Http", "MediaTypeHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http", "MediaTypeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.MediaTypeWithQualityHeaderValue,System.Net.Http", "MediaTypeWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.NameValueHeaderValue,System.Net.Http", "NameValueHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.NameValueWithParametersHeaderValue,System.Net.Http", "NameValueWithParametersHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ObjectCollection`1,System.Net.Http", "ObjectCollection'1");
            feature.AddKnownType("System.Net.Http.Headers.ProductHeaderValue,System.Net.Http", "ProductHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ProductInfoHeaderParser,System.Net.Http", "ProductInfoHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.ProductInfoHeaderValue,System.Net.Http", "ProductInfoHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeConditionHeaderValue,System.Net.Http", "RangeConditionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeHeaderValue,System.Net.Http", "RangeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeItemHeaderValue,System.Net.Http", "RangeItemHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RetryConditionHeaderValue,System.Net.Http", "RetryConditionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.StringWithQualityHeaderValue,System.Net.Http", "StringWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.TimeSpanHeaderParser,System.Net.Http", "TimeSpanHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.TransferCodingHeaderParser,System.Net.Http", "TransferCodingHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.TransferCodingHeaderValue,System.Net.Http", "TransferCodingHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.TransferCodingWithQualityHeaderValue,System.Net.Http", "TransferCodingWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.UriHeaderParser,System.Net.Http", "UriHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.ViaHeaderValue,System.Net.Http", "ViaHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.WarningHeaderValue,System.Net.Http", "WarningHeaderValue");
            feature.AddKnownType("System.Threading.Tasks.TaskToApm+TaskWrapperAsyncResult,System.Net.Http", "TaskWrapperAsyncResult");
            feature.AddKnownType("System.Net.Sockets.SocketReceiveFromResult,System.Net.Sockets", "SocketReceiveFromResult");
            feature.AddKnownType("System.Net.Sockets.SocketReceiveMessageFromResult,System.Net.Sockets", "SocketReceiveMessageFromResult");
            feature.AddKnownType("System.Numerics.BigInteger,System.Numerics", "BigInteger");
            feature.AddKnownType("System.Numerics.Complex,System.Numerics", "Complex");
            feature.AddKnownType("System.Numerics.JitIntrinsicAttribute,System.Numerics", "JitIntrinsicAttribute");
            feature.AddKnownType("System.Numerics.Matrix3x2,System.Numerics", "Matrix3x2");
            feature.AddKnownType("System.Numerics.Matrix4x4,System.Numerics", "Matrix4x4");
            feature.AddKnownType("System.Numerics.Plane,System.Numerics", "Plane");
            feature.AddKnownType("System.Numerics.Quaternion,System.Numerics", "Quaternion");
            feature.AddKnownType("System.Numerics.Vector2,System.Numerics", "Vector2");
            feature.AddKnownType("System.Numerics.Vector3,System.Numerics", "Vector3");
            feature.AddKnownType("System.Numerics.Vector4,System.Numerics", "Vector4");
            feature.AddKnownType("System.Numerics.ConstantHelper,System.Numerics.Vectors", "ConstantHelper");
            feature.AddKnownType("System.Numerics.JitIntrinsicAttribute,System.Numerics.Vectors", "JitIntrinsicAttribute");
            feature.AddKnownType("System.Numerics.Register,System.Numerics.Vectors", "Register");
            feature.AddKnownType("System.Numerics.Vector`1,System.Numerics.Vectors", "Vector'1");
            feature.AddKnownType("System.Numerics.Vector`1+VectorSizeHelper,System.Numerics.Vectors", "VectorSizeHelper'0");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute,System.Runtime.CompilerServices.Unsafe", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.Versioning.NonVersionableAttribute,System.Runtime.CompilerServices.Unsafe", "NonVersionableAttribute");
            feature.AddKnownType("Interop+NtDll,System.Runtime.InteropServices.RuntimeInformation", "<global namespace>.NtDll");
            feature.AddKnownType("Interop+NtDll+RTL_OSVERSIONINFOEX,System.Runtime.InteropServices.RuntimeInformation", "<global namespace>.RTL_OSVERSIONINFOEX");
            feature.AddKnownType("Interop+Kernel32,System.Runtime.InteropServices.RuntimeInformation", "<global namespace>.Kernel32");
            feature.AddKnownType("Interop+Kernel32+SYSTEM_INFO,System.Runtime.InteropServices.RuntimeInformation", "<global namespace>.SYSTEM_INFO");
            feature.AddKnownType("Interop+Kernel32+ProcessorArchitecture,System.Runtime.InteropServices.RuntimeInformation", "<global namespace>.ProcessorArchitecture");
            feature.AddKnownType("System.Runtime.InteropServices.Architecture,System.Runtime.InteropServices.RuntimeInformation", "Architecture");
            feature.AddKnownType("System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.RuntimeInformation", "OSPlatform");
            feature.AddKnownType("System.Runtime.Serialization.CollectionDataContractAttribute,System.Runtime.Serialization", "CollectionDataContractAttribute");
            feature.AddKnownType("System.Runtime.Serialization.ContractNamespaceAttribute,System.Runtime.Serialization", "ContractNamespaceAttribute");
            feature.AddKnownType("System.Runtime.Serialization.DataContractAttribute,System.Runtime.Serialization", "DataContractAttribute");
            feature.AddKnownType("System.Runtime.Serialization.DataMemberAttribute,System.Runtime.Serialization", "DataMemberAttribute");
            feature.AddKnownType("System.Runtime.Serialization.EnumMemberAttribute,System.Runtime.Serialization", "EnumMemberAttribute");
            feature.AddKnownType("System.Runtime.Serialization.IExtensibleDataObject,System.Runtime.Serialization", "IExtensibleDataObject");
            feature.AddKnownType("System.Runtime.Serialization.KnownTypeAttribute,System.Runtime.Serialization", "KnownTypeAttribute");
            feature.AddKnownType("System.Runtime.Serialization.ExtensionDataObject,System.Runtime.Serialization", "ExtensionDataObject");
            feature.AddKnownType("System.Runtime.Serialization.ExtensionDataMember,System.Runtime.Serialization", "ExtensionDataMember");
            feature.AddKnownType("System.Runtime.Serialization.IDataNode,System.Runtime.Serialization", "IDataNode");
            feature.AddKnownType("System.Runtime.Serialization.DataNode`1,System.Runtime.Serialization", "DataNode'1");
            feature.AddKnownType("System.Runtime.Serialization.ClassDataNode,System.Runtime.Serialization", "ClassDataNode");
            feature.AddKnownType("System.Runtime.Serialization.CollectionDataNode,System.Runtime.Serialization", "CollectionDataNode");
            feature.AddKnownType("System.Runtime.Serialization.XmlDataNode,System.Runtime.Serialization", "XmlDataNode");
            feature.AddKnownType("System.Runtime.Serialization.ISerializableDataNode,System.Runtime.Serialization", "ISerializableDataNode");
            feature.AddKnownType("System.Runtime.Serialization.ISerializableDataMember,System.Runtime.Serialization", "ISerializableDataMember");
            feature.AddKnownType("System.Runtime.Serialization.IgnoreDataMemberAttribute,System.Runtime.Serialization", "IgnoreDataMemberAttribute");
            feature.AddKnownType("System.Runtime.Serialization.DataContractResolver,System.Runtime.Serialization", "DataContractResolver");
            feature.AddKnownType("System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization", "DataContractSerializer");
            feature.AddKnownType("System.Runtime.Serialization.DataContractSerializerSettings,System.Runtime.Serialization", "DataContractSerializerSettings");
            feature.AddKnownType("System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization", "IDataContractSurrogate");
            feature.AddKnownType("System.Runtime.Serialization.InvalidDataContractException,System.Runtime.Serialization", "InvalidDataContractException");
            feature.AddKnownType("System.Runtime.Serialization.NetDataContractSerializer,System.Runtime.Serialization", "NetDataContractSerializer");
            feature.AddKnownType("System.Runtime.Serialization.XmlObjectSerializer,System.Runtime.Serialization", "XmlObjectSerializer");
            feature.AddKnownType("System.Runtime.Serialization.XsdDataContractExporter,System.Runtime.Serialization", "XsdDataContractExporter");
            feature.AddKnownType("System.Runtime.Serialization.XsdDataContractImporter,System.Runtime.Serialization", "XsdDataContractImporter");
            feature.AddKnownType("System.Runtime.Serialization.ClassDataContract,System.Runtime.Serialization", "ClassDataContract");
            feature.AddKnownType("System.Runtime.Serialization.ClassDataContract+DataMemberComparer,System.Runtime.Serialization", "DataMemberComparer");
            feature.AddKnownType("System.Runtime.Serialization.KeyValue`2,System.Runtime.Serialization", "KeyValue'2");
            feature.AddKnownType("System.Runtime.Serialization.CollectionKind,System.Runtime.Serialization", "CollectionKind");
            feature.AddKnownType("System.Runtime.Serialization.CollectionDataContract,System.Runtime.Serialization", "CollectionDataContract");
            feature.AddKnownType("System.Runtime.Serialization.CollectionDataContract+DictionaryEnumerator,System.Runtime.Serialization", "CollectionDataContract.DictionaryEnumerator");
            feature.AddKnownType("System.Runtime.Serialization.CollectionDataContract+GenericDictionaryEnumerator`2,System.Runtime.Serialization", "CollectionDataContract.GenericDictionaryEnumerator'2");
            feature.AddKnownType("System.Runtime.Serialization.DataContract,System.Runtime.Serialization", "DataContract");
            feature.AddKnownType("System.Runtime.Serialization.DataContract+DataContractCriticalHelper,System.Runtime.Serialization", "DataContractCriticalHelper");
            feature.AddKnownType("System.Runtime.Serialization.IGenericNameProvider,System.Runtime.Serialization", "IGenericNameProvider");
            feature.AddKnownType("System.Runtime.Serialization.GenericNameProvider,System.Runtime.Serialization", "GenericNameProvider");
            feature.AddKnownType("System.Runtime.Serialization.GenericInfo,System.Runtime.Serialization", "GenericInfo");
            feature.AddKnownType("System.Runtime.Serialization.DataContractPairKey,System.Runtime.Serialization", "DataContractPairKey");
            feature.AddKnownType("System.Runtime.Serialization.TypeHandleRefEqualityComparer,System.Runtime.Serialization", "TypeHandleRefEqualityComparer");
            feature.AddKnownType("System.Runtime.Serialization.TypeHandleRef,System.Runtime.Serialization", "TypeHandleRef");
            feature.AddKnownType("System.Runtime.Serialization.IntRef,System.Runtime.Serialization", "IntRef");
            feature.AddKnownType("System.Runtime.Serialization.DataMember,System.Runtime.Serialization", "DataMember");
            feature.AddKnownType("System.Runtime.Serialization.DateTimeFormat,System.Runtime.Serialization", "DateTimeFormat");
            feature.AddKnownType("System.Runtime.Serialization.EmitTypeInformation,System.Runtime.Serialization", "EmitTypeInformation");
            feature.AddKnownType("System.Runtime.Serialization.EnumDataContract,System.Runtime.Serialization", "EnumDataContract");
            feature.AddKnownType("System.Runtime.Serialization.GenericParameterDataContract,System.Runtime.Serialization", "GenericParameterDataContract");
            feature.AddKnownType("System.Runtime.Serialization.PrimitiveDataContract,System.Runtime.Serialization", "PrimitiveDataContract");
            feature.AddKnownType("System.Runtime.Serialization.CharDataContract,System.Runtime.Serialization", "CharDataContract");
            feature.AddKnownType("System.Runtime.Serialization.AsmxCharDataContract,System.Runtime.Serialization", "AsmxCharDataContract");
            feature.AddKnownType("System.Runtime.Serialization.BooleanDataContract,System.Runtime.Serialization", "BooleanDataContract");
            feature.AddKnownType("System.Runtime.Serialization.SignedByteDataContract,System.Runtime.Serialization", "SignedByteDataContract");
            feature.AddKnownType("System.Runtime.Serialization.UnsignedByteDataContract,System.Runtime.Serialization", "UnsignedByteDataContract");
            feature.AddKnownType("System.Runtime.Serialization.ShortDataContract,System.Runtime.Serialization", "ShortDataContract");
            feature.AddKnownType("System.Runtime.Serialization.UnsignedShortDataContract,System.Runtime.Serialization", "UnsignedShortDataContract");
            feature.AddKnownType("System.Runtime.Serialization.IntDataContract,System.Runtime.Serialization", "IntDataContract");
            feature.AddKnownType("System.Runtime.Serialization.UnsignedIntDataContract,System.Runtime.Serialization", "UnsignedIntDataContract");
            feature.AddKnownType("System.Runtime.Serialization.LongDataContract,System.Runtime.Serialization", "LongDataContract");
            feature.AddKnownType("System.Runtime.Serialization.IntegerDataContract,System.Runtime.Serialization", "IntegerDataContract");
            feature.AddKnownType("System.Runtime.Serialization.PositiveIntegerDataContract,System.Runtime.Serialization", "PositiveIntegerDataContract");
            feature.AddKnownType("System.Runtime.Serialization.NegativeIntegerDataContract,System.Runtime.Serialization", "NegativeIntegerDataContract");
            feature.AddKnownType("System.Runtime.Serialization.NonPositiveIntegerDataContract,System.Runtime.Serialization", "NonPositiveIntegerDataContract");
            feature.AddKnownType("System.Runtime.Serialization.NonNegativeIntegerDataContract,System.Runtime.Serialization", "NonNegativeIntegerDataContract");
            feature.AddKnownType("System.Runtime.Serialization.UnsignedLongDataContract,System.Runtime.Serialization", "UnsignedLongDataContract");
            feature.AddKnownType("System.Runtime.Serialization.FloatDataContract,System.Runtime.Serialization", "FloatDataContract");
            feature.AddKnownType("System.Runtime.Serialization.DoubleDataContract,System.Runtime.Serialization", "DoubleDataContract");
            feature.AddKnownType("System.Runtime.Serialization.DecimalDataContract,System.Runtime.Serialization", "DecimalDataContract");
            feature.AddKnownType("System.Runtime.Serialization.DateTimeDataContract,System.Runtime.Serialization", "DateTimeDataContract");
            feature.AddKnownType("System.Runtime.Serialization.StringDataContract,System.Runtime.Serialization", "StringDataContract");
            feature.AddKnownType("System.Runtime.Serialization.TimeDataContract,System.Runtime.Serialization", "TimeDataContract");
            feature.AddKnownType("System.Runtime.Serialization.DateDataContract,System.Runtime.Serialization", "DateDataContract");
            feature.AddKnownType("System.Runtime.Serialization.HexBinaryDataContract,System.Runtime.Serialization", "HexBinaryDataContract");
            feature.AddKnownType("System.Runtime.Serialization.GYearMonthDataContract,System.Runtime.Serialization", "GYearMonthDataContract");
            feature.AddKnownType("System.Runtime.Serialization.GYearDataContract,System.Runtime.Serialization", "GYearDataContract");
            feature.AddKnownType("System.Runtime.Serialization.GMonthDayDataContract,System.Runtime.Serialization", "GMonthDayDataContract");
            feature.AddKnownType("System.Runtime.Serialization.GDayDataContract,System.Runtime.Serialization", "GDayDataContract");
            feature.AddKnownType("System.Runtime.Serialization.GMonthDataContract,System.Runtime.Serialization", "GMonthDataContract");
            feature.AddKnownType("System.Runtime.Serialization.NormalizedStringDataContract,System.Runtime.Serialization", "NormalizedStringDataContract");
            feature.AddKnownType("System.Runtime.Serialization.TokenDataContract,System.Runtime.Serialization", "TokenDataContract");
            feature.AddKnownType("System.Runtime.Serialization.LanguageDataContract,System.Runtime.Serialization", "LanguageDataContract");
            feature.AddKnownType("System.Runtime.Serialization.NameDataContract,System.Runtime.Serialization", "NameDataContract");
            feature.AddKnownType("System.Runtime.Serialization.NCNameDataContract,System.Runtime.Serialization", "NCNameDataContract");
            feature.AddKnownType("System.Runtime.Serialization.IDDataContract,System.Runtime.Serialization", "IDDataContract");
            feature.AddKnownType("System.Runtime.Serialization.IDREFDataContract,System.Runtime.Serialization", "IDREFDataContract");
            feature.AddKnownType("System.Runtime.Serialization.IDREFSDataContract,System.Runtime.Serialization", "IDREFSDataContract");
            feature.AddKnownType("System.Runtime.Serialization.ENTITYDataContract,System.Runtime.Serialization", "ENTITYDataContract");
            feature.AddKnownType("System.Runtime.Serialization.ENTITIESDataContract,System.Runtime.Serialization", "ENTITIESDataContract");
            feature.AddKnownType("System.Runtime.Serialization.NMTOKENDataContract,System.Runtime.Serialization", "NMTOKENDataContract");
            feature.AddKnownType("System.Runtime.Serialization.NMTOKENSDataContract,System.Runtime.Serialization", "NMTOKENSDataContract");
            feature.AddKnownType("System.Runtime.Serialization.ByteArrayDataContract,System.Runtime.Serialization", "ByteArrayDataContract");
            feature.AddKnownType("System.Runtime.Serialization.ObjectDataContract,System.Runtime.Serialization", "ObjectDataContract");
            feature.AddKnownType("System.Runtime.Serialization.TimeSpanDataContract,System.Runtime.Serialization", "TimeSpanDataContract");
            feature.AddKnownType("System.Runtime.Serialization.XsDurationDataContract,System.Runtime.Serialization", "XsDurationDataContract");
            feature.AddKnownType("System.Runtime.Serialization.GuidDataContract,System.Runtime.Serialization", "GuidDataContract");
            feature.AddKnownType("System.Runtime.Serialization.AsmxGuidDataContract,System.Runtime.Serialization", "AsmxGuidDataContract");
            feature.AddKnownType("System.Runtime.Serialization.UriDataContract,System.Runtime.Serialization", "UriDataContract");
            feature.AddKnownType("System.Runtime.Serialization.QNameDataContract,System.Runtime.Serialization", "QNameDataContract");
            feature.AddKnownType("System.Runtime.Serialization.SpecialTypeDataContract,System.Runtime.Serialization", "SpecialTypeDataContract");
            feature.AddKnownType("System.Runtime.Serialization.XmlDataContract,System.Runtime.Serialization", "XmlDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Attributes,System.Runtime.Serialization", "Attributes");
            feature.AddKnownType("System.Runtime.Serialization.CodeGenerator,System.Runtime.Serialization", "CodeGenerator");
            feature.AddKnownType("System.Runtime.Serialization.ArgBuilder,System.Runtime.Serialization", "ArgBuilder");
            feature.AddKnownType("System.Runtime.Serialization.ForState,System.Runtime.Serialization", "ForState");
            feature.AddKnownType("System.Runtime.Serialization.Cmp,System.Runtime.Serialization", "Cmp");
            feature.AddKnownType("System.Runtime.Serialization.IfState,System.Runtime.Serialization", "IfState");
            feature.AddKnownType("System.Runtime.Serialization.SwitchState,System.Runtime.Serialization", "SwitchState");
            feature.AddKnownType("System.Runtime.Serialization.DateTimeOffsetAdapter,System.Runtime.Serialization", "DateTimeOffsetAdapter");
            feature.AddKnownType("System.Runtime.Serialization.HybridObjectCache,System.Runtime.Serialization", "HybridObjectCache");
            feature.AddKnownType("System.Runtime.Serialization.KnownTypeDataContractResolver,System.Runtime.Serialization", "KnownTypeDataContractResolver");
            feature.AddKnownType("System.Runtime.Serialization.ObjectReferenceStack,System.Runtime.Serialization", "ObjectReferenceStack");
            feature.AddKnownType("System.Runtime.Serialization.ObjectToIdCache,System.Runtime.Serialization", "ObjectToIdCache");
            feature.AddKnownType("System.Runtime.Serialization.ScopedKnownTypes,System.Runtime.Serialization", "ScopedKnownTypes");
            feature.AddKnownType("System.Runtime.Serialization.SerializationMode,System.Runtime.Serialization", "SerializationMode");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateDataContract,System.Runtime.Serialization", "SurrogateDataContract");
            feature.AddKnownType("System.Runtime.Serialization.ExtensionDataReader,System.Runtime.Serialization", "ExtensionDataReader");
            feature.AddKnownType("System.Runtime.Serialization.AttributeData,System.Runtime.Serialization", "AttributeData");
            feature.AddKnownType("System.Runtime.Serialization.ElementData,System.Runtime.Serialization", "ElementData");
            feature.AddKnownType("System.Runtime.Serialization.XmlFormatReaderGenerator,System.Runtime.Serialization", "XmlFormatReaderGenerator");
            feature.AddKnownType("System.Runtime.Serialization.XmlObjectSerializerContext,System.Runtime.Serialization", "XmlObjectSerializerContext");
            feature.AddKnownType("System.Runtime.Serialization.XmlObjectSerializerReadContext,System.Runtime.Serialization", "XmlObjectSerializerReadContext");
            feature.AddKnownType("System.Runtime.Serialization.XmlObjectSerializerWriteContext,System.Runtime.Serialization", "XmlObjectSerializerWriteContext");
            feature.AddKnownType("System.Runtime.Serialization.XmlFormatWriterGenerator,System.Runtime.Serialization", "XmlFormatWriterGenerator");
            feature.AddKnownType("System.Runtime.Serialization.XmlObjectSerializerReadContextComplex,System.Runtime.Serialization", "XmlObjectSerializerReadContextComplex");
            feature.AddKnownType("System.Runtime.Serialization.XmlObjectSerializerWriteContextComplex,System.Runtime.Serialization", "XmlObjectSerializerWriteContextComplex");
            feature.AddKnownType("System.Runtime.Serialization.XmlReaderDelegator,System.Runtime.Serialization", "XmlReaderDelegator");
            feature.AddKnownType("System.Runtime.Serialization.XmlSerializableReader,System.Runtime.Serialization", "XmlSerializableReader");
            feature.AddKnownType("System.Runtime.Serialization.XmlSerializableWriter,System.Runtime.Serialization", "XmlSerializableWriter");
            feature.AddKnownType("System.Runtime.Serialization.XmlWriterDelegator,System.Runtime.Serialization", "XmlWriterDelegator");
            feature.AddKnownType("System.Runtime.Serialization.CodeExporter,System.Runtime.Serialization", "CodeExporter");
            feature.AddKnownType("System.Runtime.Serialization.ContractCodeDomInfo,System.Runtime.Serialization", "ContractCodeDomInfo");
            feature.AddKnownType("System.Runtime.Serialization.DataContractSet,System.Runtime.Serialization", "DataContractSet");
            feature.AddKnownType("System.Runtime.Serialization.ExportOptions,System.Runtime.Serialization", "ExportOptions");
            feature.AddKnownType("System.Runtime.Serialization.ImportOptions,System.Runtime.Serialization", "ImportOptions");
            feature.AddKnownType("System.Runtime.Serialization.SchemaExporter,System.Runtime.Serialization", "SchemaExporter");
            feature.AddKnownType("System.Runtime.Serialization.SchemaObjectInfo,System.Runtime.Serialization", "SchemaObjectInfo");
            feature.AddKnownType("System.Runtime.Serialization.SchemaImporter,System.Runtime.Serialization", "SchemaImporter");
            feature.AddKnownType("System.Runtime.Serialization.TypeInformation,System.Runtime.Serialization", "TypeInformation");
            feature.AddKnownType("System.Runtime.Serialization.BitFlagsGenerator,System.Runtime.Serialization", "BitFlagsGenerator");
            feature.AddKnownType("System.Runtime.Serialization.SRDescriptionAttribute,System.Runtime.Serialization", "SRDescriptionAttribute");
            feature.AddKnownType("System.Runtime.Serialization.SRCategoryAttribute,System.Runtime.Serialization", "SRCategoryAttribute");
            feature.AddKnownType("System.Runtime.Serialization.SR,System.Runtime.Serialization", "SR");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.DeclaredTypeElement,System.Runtime.Serialization", "DeclaredTypeElement");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection,System.Runtime.Serialization", "DeclaredTypeElementCollection");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.DeclaredTypeValidator,System.Runtime.Serialization", "DeclaredTypeValidator");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.DeclaredTypeValidatorAttribute,System.Runtime.Serialization", "DeclaredTypeValidatorAttribute");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.NetDataContractSerializerSection,System.Runtime.Serialization", "NetDataContractSerializerSection");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.ParameterElement,System.Runtime.Serialization", "ParameterElement");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.ParameterElementCollection,System.Runtime.Serialization", "ParameterElementCollection");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.DataContractSerializerSection,System.Runtime.Serialization", "DataContractSerializerSection");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.TypeElement,System.Runtime.Serialization", "TypeElement");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.SerializationSectionGroup,System.Runtime.Serialization", "SerializationSectionGroup");
            feature.AddKnownType("System.Runtime.Serialization.Configuration.TypeElementCollection,System.Runtime.Serialization", "TypeElementCollection");
            feature.AddKnownType("System.Runtime.Serialization.Diagnostics.Application.TD,System.Runtime.Serialization", "TD");
            feature.AddKnownType("System.Runtime.Serialization.Json.DataContractJsonSerializer,System.Runtime.Serialization", "DataContractJsonSerializer");
            feature.AddKnownType("System.Runtime.Serialization.Json.DataContractJsonSerializerSettings,System.Runtime.Serialization", "DataContractJsonSerializerSettings");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonClassDataContract,System.Runtime.Serialization", "JsonClassDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonStringDataContract,System.Runtime.Serialization", "JsonStringDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonQNameDataContract,System.Runtime.Serialization", "JsonQNameDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonUriDataContract,System.Runtime.Serialization", "JsonUriDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonByteArrayDataContract,System.Runtime.Serialization", "JsonByteArrayDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonCollectionDataContract,System.Runtime.Serialization", "JsonCollectionDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonDataContract,System.Runtime.Serialization", "JsonDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonDataContract+JsonDataContractCriticalHelper,System.Runtime.Serialization", "JsonDataContractCriticalHelper");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonEnumDataContract,System.Runtime.Serialization", "JsonEnumDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonXmlDataContract,System.Runtime.Serialization", "JsonXmlDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonObjectDataContract,System.Runtime.Serialization", "JsonObjectDataContract");
            feature.AddKnownType("System.Runtime.Serialization.Json.ByteArrayHelperWithString,System.Runtime.Serialization", "ByteArrayHelperWithString");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonReaderDelegator,System.Runtime.Serialization", "JsonReaderDelegator");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonWriterDelegator,System.Runtime.Serialization", "JsonWriterDelegator");
            feature.AddKnownType("System.Runtime.Serialization.Json.XmlObjectSerializerReadContextComplexJson,System.Runtime.Serialization", "XmlObjectSerializerReadContextComplexJson");
            feature.AddKnownType("System.Runtime.Serialization.Json.XmlObjectSerializerWriteContextComplexJson,System.Runtime.Serialization", "XmlObjectSerializerWriteContextComplexJson");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonFormatWriterGenerator,System.Runtime.Serialization", "JsonFormatWriterGenerator");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonFormatReaderGenerator,System.Runtime.Serialization", "JsonFormatReaderGenerator");
            feature.AddKnownType("System.Runtime.Serialization.Json.IXmlJsonReaderInitializer,System.Runtime.Serialization", "IXmlJsonReaderInitializer");
            feature.AddKnownType("System.Runtime.Serialization.Json.IXmlJsonWriterInitializer,System.Runtime.Serialization", "IXmlJsonWriterInitializer");
            feature.AddKnownType("System.Runtime.Serialization.Json.XmlJsonWriter,System.Runtime.Serialization", "XmlJsonWriter");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonEncodingStreamWrapper,System.Runtime.Serialization", "JsonEncodingStreamWrapper");
            feature.AddKnownType("System.Runtime.Serialization.Json.JsonNodeType,System.Runtime.Serialization", "JsonNodeType");
            feature.AddKnownType("System.Runtime.Serialization.Json.XmlJsonReader,System.Runtime.Serialization", "XmlJsonReader");
            feature.AddKnownType("System.Text.Base64Encoding,System.Runtime.Serialization", "Base64Encoding");
            feature.AddKnownType("System.Text.BinHexEncoding,System.Runtime.Serialization", "BinHexEncoding");
            feature.AddKnownType("System.Text.SurrogateChar,System.Runtime.Serialization", "SurrogateChar");
            feature.AddKnownType("System.Xml.ArrayHelper`2,System.Runtime.Serialization", "ArrayHelper'2");
            feature.AddKnownType("System.Xml.BooleanArrayHelperWithString,System.Runtime.Serialization", "BooleanArrayHelperWithString");
            feature.AddKnownType("System.Xml.BooleanArrayHelperWithDictionaryString,System.Runtime.Serialization", "BooleanArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.Int16ArrayHelperWithString,System.Runtime.Serialization", "Int16ArrayHelperWithString");
            feature.AddKnownType("System.Xml.Int16ArrayHelperWithDictionaryString,System.Runtime.Serialization", "Int16ArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.Int32ArrayHelperWithString,System.Runtime.Serialization", "Int32ArrayHelperWithString");
            feature.AddKnownType("System.Xml.Int32ArrayHelperWithDictionaryString,System.Runtime.Serialization", "Int32ArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.Int64ArrayHelperWithString,System.Runtime.Serialization", "Int64ArrayHelperWithString");
            feature.AddKnownType("System.Xml.Int64ArrayHelperWithDictionaryString,System.Runtime.Serialization", "Int64ArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.SingleArrayHelperWithString,System.Runtime.Serialization", "SingleArrayHelperWithString");
            feature.AddKnownType("System.Xml.SingleArrayHelperWithDictionaryString,System.Runtime.Serialization", "SingleArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.DoubleArrayHelperWithString,System.Runtime.Serialization", "DoubleArrayHelperWithString");
            feature.AddKnownType("System.Xml.DoubleArrayHelperWithDictionaryString,System.Runtime.Serialization", "DoubleArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.DecimalArrayHelperWithString,System.Runtime.Serialization", "DecimalArrayHelperWithString");
            feature.AddKnownType("System.Xml.DecimalArrayHelperWithDictionaryString,System.Runtime.Serialization", "DecimalArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.DateTimeArrayHelperWithString,System.Runtime.Serialization", "DateTimeArrayHelperWithString");
            feature.AddKnownType("System.Xml.DateTimeArrayHelperWithDictionaryString,System.Runtime.Serialization", "DateTimeArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.GuidArrayHelperWithString,System.Runtime.Serialization", "GuidArrayHelperWithString");
            feature.AddKnownType("System.Xml.GuidArrayHelperWithDictionaryString,System.Runtime.Serialization", "GuidArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.TimeSpanArrayHelperWithString,System.Runtime.Serialization", "TimeSpanArrayHelperWithString");
            feature.AddKnownType("System.Xml.TimeSpanArrayHelperWithDictionaryString,System.Runtime.Serialization", "TimeSpanArrayHelperWithDictionaryString");
            feature.AddKnownType("System.Xml.IFragmentCapableXmlDictionaryWriter,System.Runtime.Serialization", "IFragmentCapableXmlDictionaryWriter");
            feature.AddKnownType("System.Xml.IStreamProvider,System.Runtime.Serialization", "IStreamProvider");
            feature.AddKnownType("System.Xml.IXmlDictionary,System.Runtime.Serialization", "IXmlDictionary");
            feature.AddKnownType("System.Xml.XmlBinaryNodeType,System.Runtime.Serialization", "XmlBinaryNodeType");
            feature.AddKnownType("System.Xml.XmlBinaryReaderSession,System.Runtime.Serialization", "XmlBinaryReaderSession");
            feature.AddKnownType("System.Xml.IXmlBinaryWriterInitializer,System.Runtime.Serialization", "IXmlBinaryWriterInitializer");
            feature.AddKnownType("System.Xml.XmlBinaryNodeWriter,System.Runtime.Serialization", "XmlBinaryNodeWriter");
            feature.AddKnownType("System.Xml.XmlBinaryWriter,System.Runtime.Serialization", "XmlBinaryWriter");
            feature.AddKnownType("System.Xml.XmlBinaryWriterSession,System.Runtime.Serialization", "XmlBinaryWriterSession");
            feature.AddKnownType("System.Xml.XmlDictionary,System.Runtime.Serialization", "XmlDictionary");
            feature.AddKnownType("System.Xml.XmlDictionaryReader,System.Runtime.Serialization", "XmlDictionaryReader");
            feature.AddKnownType("System.Xml.XmlDictionaryReaderQuotaTypes,System.Runtime.Serialization", "XmlDictionaryReaderQuotaTypes");
            feature.AddKnownType("System.Xml.XmlDictionaryReaderQuotas,System.Runtime.Serialization", "XmlDictionaryReaderQuotas");
            feature.AddKnownType("System.Xml.XmlDictionaryString,System.Runtime.Serialization", "XmlDictionaryString");
            feature.AddKnownType("System.Xml.XmlDictionaryWriter,System.Runtime.Serialization", "XmlDictionaryWriter");
            feature.AddKnownType("System.Xml.IXmlTextWriterInitializer,System.Runtime.Serialization", "IXmlTextWriterInitializer");
            feature.AddKnownType("System.Xml.XmlUTF8TextWriter,System.Runtime.Serialization", "XmlUTF8TextWriter");
            feature.AddKnownType("System.Xml.XmlUTF8NodeWriter,System.Runtime.Serialization", "XmlUTF8NodeWriter");
            feature.AddKnownType("System.Xml.XmlBaseWriter,System.Runtime.Serialization", "XmlBaseWriter");
            feature.AddKnownType("System.Xml.UniqueId,System.Runtime.Serialization", "UniqueId");
            feature.AddKnownType("System.Xml.IXmlMtomReaderInitializer,System.Runtime.Serialization", "IXmlMtomReaderInitializer");
            feature.AddKnownType("System.Xml.XmlMtomReader,System.Runtime.Serialization", "XmlMtomReader");
            feature.AddKnownType("System.Xml.XmlMtomReader+MimePart,System.Runtime.Serialization", "MimePart");
            feature.AddKnownType("System.Xml.XmlMtomReader+XopIncludeReader,System.Runtime.Serialization", "XopIncludeReader");
            feature.AddKnownType("System.Xml.MimeMessageReader,System.Runtime.Serialization", "MimeMessageReader");
            feature.AddKnownType("System.Xml.MimeReader,System.Runtime.Serialization", "MimeReader");
            feature.AddKnownType("System.Xml.DelimittedStreamReader,System.Runtime.Serialization", "DelimittedStreamReader");
            feature.AddKnownType("System.Xml.MimeHeaders,System.Runtime.Serialization", "MimeHeaders");
            feature.AddKnownType("System.Xml.MimeHeader,System.Runtime.Serialization", "MimeHeader");
            feature.AddKnownType("System.Xml.ContentTypeHeader,System.Runtime.Serialization", "ContentTypeHeader");
            feature.AddKnownType("System.Xml.ContentTransferEncoding,System.Runtime.Serialization", "ContentTransferEncoding");
            feature.AddKnownType("System.Xml.ContentTransferEncodingHeader,System.Runtime.Serialization", "ContentTransferEncodingHeader");
            feature.AddKnownType("System.Xml.ContentIDHeader,System.Runtime.Serialization", "ContentIDHeader");
            feature.AddKnownType("System.Xml.MimeVersionHeader,System.Runtime.Serialization", "MimeVersionHeader");
            feature.AddKnownType("System.Xml.MimeHeaderReader,System.Runtime.Serialization", "MimeHeaderReader");
            feature.AddKnownType("System.Xml.BufferedReadStream,System.Runtime.Serialization", "BufferedReadStream");
            feature.AddKnownType("System.Xml.IXmlMtomWriterInitializer,System.Runtime.Serialization", "IXmlMtomWriterInitializer");
            feature.AddKnownType("System.Xml.XmlMtomWriter,System.Runtime.Serialization", "XmlMtomWriter");
            feature.AddKnownType("System.Xml.MimeWriterState,System.Runtime.Serialization", "MimeWriterState");
            feature.AddKnownType("System.Xml.MimeWriter,System.Runtime.Serialization", "MimeWriter");
            feature.AddKnownType("System.Xml.BufferedWrite,System.Runtime.Serialization", "BufferedWrite");
            feature.AddKnownType("System.Xml.MtomBinaryDataType,System.Runtime.Serialization", "MtomBinaryDataType");
            feature.AddKnownType("System.Xml.MtomBinaryData,System.Runtime.Serialization", "MtomBinaryData");
            feature.AddKnownType("System.Xml.XmlCanonicalWriter,System.Runtime.Serialization", "XmlCanonicalWriter");
            feature.AddKnownType("System.Xml.XmlNodeWriter,System.Runtime.Serialization", "XmlNodeWriter");
            feature.AddKnownType("System.Xml.XmlNodeWriterWriteBase64TextArgs,System.Runtime.Serialization", "XmlNodeWriterWriteBase64TextArgs");
            feature.AddKnownType("System.Xml.XmlStreamNodeWriter,System.Runtime.Serialization", "XmlStreamNodeWriter");
            feature.AddKnownType("System.Xml.XmlStreamNodeWriter+GetBufferArgs,System.Runtime.Serialization", "GetBufferArgs");
            feature.AddKnownType("System.Xml.XmlStreamNodeWriter+GetBufferEventResult,System.Runtime.Serialization", "GetBufferEventResult");
            feature.AddKnownType("System.Xml.XmlStreamNodeWriter+GetBufferAsyncEventArgs,System.Runtime.Serialization", "GetBufferAsyncEventArgs");
            feature.AddKnownType("System.Xml.XmlWriteBase64AsyncArguments,System.Runtime.Serialization", "XmlWriteBase64AsyncArguments");
            feature.AddKnownType("System.Xml.XmlSigningNodeWriter,System.Runtime.Serialization", "XmlSigningNodeWriter");
            feature.AddKnownType("System.Xml.XmlBaseReader,System.Runtime.Serialization", "XmlBaseReader");
            feature.AddKnownType("System.Xml.XmlBaseReader+QNameType,System.Runtime.Serialization", "QNameType");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlNode,System.Runtime.Serialization", "XmlNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlNode+XmlNodeFlags,System.Runtime.Serialization", "XmlNodeFlags");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlElementNode,System.Runtime.Serialization", "XmlElementNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlAttributeNode,System.Runtime.Serialization", "XmlAttributeNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlEndElementNode,System.Runtime.Serialization", "XmlEndElementNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlTextNode,System.Runtime.Serialization", "XmlTextNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlAtomicTextNode,System.Runtime.Serialization", "XmlAtomicTextNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlComplexTextNode,System.Runtime.Serialization", "XmlComplexTextNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlWhitespaceTextNode,System.Runtime.Serialization", "XmlWhitespaceTextNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlCDataNode,System.Runtime.Serialization", "XmlCDataNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlAttributeTextNode,System.Runtime.Serialization", "XmlAttributeTextNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlInitialNode,System.Runtime.Serialization", "XmlInitialNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlDeclarationNode,System.Runtime.Serialization", "XmlDeclarationNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlCommentNode,System.Runtime.Serialization", "XmlCommentNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlEndOfFileNode,System.Runtime.Serialization", "XmlEndOfFileNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+XmlClosedNode,System.Runtime.Serialization", "XmlClosedNode");
            feature.AddKnownType("System.Xml.XmlBaseReader+Namespace,System.Runtime.Serialization", "Namespace");
            feature.AddKnownType("System.Xml.IXmlTextReaderInitializer,System.Runtime.Serialization", "IXmlTextReaderInitializer");
            feature.AddKnownType("System.Xml.XmlUTF8TextReader,System.Runtime.Serialization", "XmlUTF8TextReader");
            feature.AddKnownType("System.Xml.IXmlBinaryReaderInitializer,System.Runtime.Serialization", "IXmlBinaryReaderInitializer");
            feature.AddKnownType("System.Xml.XmlBinaryReader,System.Runtime.Serialization", "XmlBinaryReader");
            feature.AddKnownType("System.Xml.XmlBufferReader,System.Runtime.Serialization", "XmlBufferReader");
            feature.AddKnownType("System.Xml.PrefixHandleType,System.Runtime.Serialization", "PrefixHandleType");
            feature.AddKnownType("System.Xml.PrefixHandle,System.Runtime.Serialization", "PrefixHandle");
            feature.AddKnownType("System.Xml.StringHandleConstStringType,System.Runtime.Serialization", "StringHandleConstStringType");
            feature.AddKnownType("System.Xml.StringHandle,System.Runtime.Serialization", "StringHandle");
            feature.AddKnownType("System.Xml.ValueHandleConstStringType,System.Runtime.Serialization", "ValueHandleConstStringType");
            feature.AddKnownType("System.Xml.ValueHandleType,System.Runtime.Serialization", "ValueHandleType");
            feature.AddKnownType("System.Xml.ValueHandle,System.Runtime.Serialization", "ValueHandle");
            feature.AddKnownType("System.Xml.EncodingStreamWrapper,System.Runtime.Serialization", "EncodingStreamWrapper");
            feature.AddKnownType("System.Runtime.Serialization.ISerializationSurrogateProvider,System.Runtime.Serialization.Primitives", "ISerializationSurrogateProvider");
            feature.AddKnownType("System.Runtime.Serialization.DataContractSerializerExtensions+SurrogateProviderAdapter,System.Runtime.Serialization.Xml", "SurrogateProviderAdapter");
            feature.AddKnownType("System.Security.Cryptography.IncrementalHash,System.Security.Cryptography.Algorithms", "IncrementalHash");
            feature.AddKnownType("System.Threading.IDeferredDisposable,System.Threading.Overlapped", "IDeferredDisposable");
            feature.AddKnownType("System.Threading.DeferredDisposableLifetime`1,System.Threading.Overlapped", "DeferredDisposableLifetime'1");
            feature.AddKnownType("System.Threading.ThreadPoolBoundHandle,System.Threading.Overlapped", "ThreadPoolBoundHandle");
            feature.AddKnownType("System.Threading.ThreadPoolBoundHandleOverlapped,System.Threading.Overlapped", "ThreadPoolBoundHandleOverlapped");
            feature.AddKnownType("System.Threading.PreAllocatedOverlapped,System.Threading.Overlapped", "PreAllocatedOverlapped");
            feature.AddKnownType("System.ITupleInternal,System.ValueTuple", "ITupleInternal");
            feature.AddKnownType("System.ValueTuple,System.ValueTuple", "ValueTuple");
            feature.AddKnownType("System.ValueTuple`1,System.ValueTuple", "ValueTuple'1");
            feature.AddKnownType("System.ValueTuple`2,System.ValueTuple", "ValueTuple'2");
            feature.AddKnownType("System.ValueTuple`3,System.ValueTuple", "ValueTuple'3");
            feature.AddKnownType("System.ValueTuple`4,System.ValueTuple", "ValueTuple'4");
            feature.AddKnownType("System.ValueTuple`5,System.ValueTuple", "ValueTuple'5");
            feature.AddKnownType("System.ValueTuple`6,System.ValueTuple", "ValueTuple'6");
            feature.AddKnownType("System.ValueTuple`7,System.ValueTuple", "ValueTuple'7");
            feature.AddKnownType("System.ValueTuple`8,System.ValueTuple", "ValueTuple'8");
            feature.AddKnownType("System.Runtime.CompilerServices.TupleElementNamesAttribute,System.ValueTuple", "TupleElementNamesAttribute");
            feature.AddKnownType("MS.Internal.Xml.Cache.TextBlockType,System.Xml", "MS.Internal.Xml.Cache.TextBlockType");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentBuilder,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentBuilder");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentBaseIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentBaseIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentElementChildIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentElementChildIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentKindChildIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentKindChildIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentElementDescendantIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentElementDescendantIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentKindDescendantIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentKindDescendantIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentNavigator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentNavigator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNode,System.Xml", "MS.Internal.Xml.Cache.XPathNode");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodeRef,System.Xml", "MS.Internal.Xml.Cache.XPathNodeRef");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodeHelper,System.Xml", "MS.Internal.Xml.Cache.XPathNodeHelper");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodePageInfo,System.Xml", "MS.Internal.Xml.Cache.XPathNodePageInfo");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodeInfoAtom,System.Xml", "MS.Internal.Xml.Cache.XPathNodeInfoAtom");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodeInfoTable,System.Xml", "MS.Internal.Xml.Cache.XPathNodeInfoTable");
            feature.AddKnownType("MS.Internal.Xml.XPath.AbsoluteQuery,System.Xml", "MS.Internal.Xml.XPath.AbsoluteQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.AstNode,System.Xml", "MS.Internal.Xml.XPath.AstNode");
            feature.AddKnownType("MS.Internal.Xml.XPath.AstNode+AstType,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.AstNode.AstType");
            feature.AddKnownType("MS.Internal.Xml.XPath.AttributeQuery,System.Xml", "MS.Internal.Xml.XPath.AttributeQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Axis,System.Xml", "MS.Internal.Xml.XPath.Axis");
            feature.AddKnownType("MS.Internal.Xml.XPath.Axis+AxisType,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.Axis.AxisType");
            feature.AddKnownType("MS.Internal.Xml.XPath.BaseAxisQuery,System.Xml", "MS.Internal.Xml.XPath.BaseAxisQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.BooleanExpr,System.Xml", "MS.Internal.Xml.XPath.BooleanExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.BooleanFunctions,System.Xml", "MS.Internal.Xml.XPath.BooleanFunctions");
            feature.AddKnownType("MS.Internal.Xml.XPath.CacheAxisQuery,System.Xml", "MS.Internal.Xml.XPath.CacheAxisQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.CacheChildrenQuery,System.Xml", "MS.Internal.Xml.XPath.CacheChildrenQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.CacheOutputQuery,System.Xml", "MS.Internal.Xml.XPath.CacheOutputQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.ChildrenQuery,System.Xml", "MS.Internal.Xml.XPath.ChildrenQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.ClonableStack`1,System.Xml", "MS.Internal.Xml.XPath.ClonableStack'1");
            feature.AddKnownType("MS.Internal.Xml.XPath.CompiledXpathExpr,System.Xml", "MS.Internal.Xml.XPath.CompiledXpathExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathComparerHelper,System.Xml", "MS.Internal.Xml.XPath.XPathComparerHelper");
            feature.AddKnownType("MS.Internal.Xml.XPath.ContextQuery,System.Xml", "MS.Internal.Xml.XPath.ContextQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.DescendantBaseQuery,System.Xml", "MS.Internal.Xml.XPath.DescendantBaseQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.DescendantQuery,System.Xml", "MS.Internal.Xml.XPath.DescendantQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.DescendantOverDescendantQuery,System.Xml", "MS.Internal.Xml.XPath.DescendantOverDescendantQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.DocumentOrderQuery,System.Xml", "MS.Internal.Xml.XPath.DocumentOrderQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.EmptyQuery,System.Xml", "MS.Internal.Xml.XPath.EmptyQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.ExtensionQuery,System.Xml", "MS.Internal.Xml.XPath.ExtensionQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.FunctionQuery,System.Xml", "MS.Internal.Xml.XPath.FunctionQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Filter,System.Xml", "MS.Internal.Xml.XPath.Filter");
            feature.AddKnownType("MS.Internal.Xml.XPath.FilterQuery,System.Xml", "MS.Internal.Xml.XPath.FilterQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.FollowingQuery,System.Xml", "MS.Internal.Xml.XPath.FollowingQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.FollSiblingQuery,System.Xml", "MS.Internal.Xml.XPath.FollSiblingQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.ForwardPositionQuery,System.Xml", "MS.Internal.Xml.XPath.ForwardPositionQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Function,System.Xml", "MS.Internal.Xml.XPath.Function");
            feature.AddKnownType("MS.Internal.Xml.XPath.Function+FunctionType,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.Function.FunctionType");
            feature.AddKnownType("MS.Internal.Xml.XPath.Group,System.Xml", "MS.Internal.Xml.XPath.Group");
            feature.AddKnownType("MS.Internal.Xml.XPath.GroupQuery,System.Xml", "MS.Internal.Xml.XPath.GroupQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.IDQuery,System.Xml", "MS.Internal.Xml.XPath.IDQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.IteratorFilter,System.Xml", "MS.Internal.Xml.XPath.IteratorFilter");
            feature.AddKnownType("MS.Internal.Xml.XPath.QueryProps,System.Xml", "MS.Internal.Xml.XPath.QueryProps");
            feature.AddKnownType("MS.Internal.Xml.XPath.Query,System.Xml", "MS.Internal.Xml.XPath.Query");
            feature.AddKnownType("MS.Internal.Xml.XPath.LogicalExpr,System.Xml", "MS.Internal.Xml.XPath.LogicalExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.MergeFilterQuery,System.Xml", "MS.Internal.Xml.XPath.MergeFilterQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.NamespaceQuery,System.Xml", "MS.Internal.Xml.XPath.NamespaceQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.NodeFunctions,System.Xml", "MS.Internal.Xml.XPath.NodeFunctions");
            feature.AddKnownType("MS.Internal.Xml.XPath.NumberFunctions,System.Xml", "MS.Internal.Xml.XPath.NumberFunctions");
            feature.AddKnownType("MS.Internal.Xml.XPath.NumericExpr,System.Xml", "MS.Internal.Xml.XPath.NumericExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.Operand,System.Xml", "MS.Internal.Xml.XPath.Operand");
            feature.AddKnownType("MS.Internal.Xml.XPath.OperandQuery,System.Xml", "MS.Internal.Xml.XPath.OperandQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Operator,System.Xml", "MS.Internal.Xml.XPath.Operator");
            feature.AddKnownType("MS.Internal.Xml.XPath.Operator+Op,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.Operator.Op");
            feature.AddKnownType("MS.Internal.Xml.XPath.ParentQuery,System.Xml", "MS.Internal.Xml.XPath.ParentQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.PrecedingQuery,System.Xml", "MS.Internal.Xml.XPath.PrecedingQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.PreSiblingQuery,System.Xml", "MS.Internal.Xml.XPath.PreSiblingQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.QueryBuilder,System.Xml", "MS.Internal.Xml.XPath.QueryBuilder");
            feature.AddKnownType("MS.Internal.Xml.XPath.UnionExpr,System.Xml", "MS.Internal.Xml.XPath.UnionExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.ResetableIterator,System.Xml", "MS.Internal.Xml.XPath.ResetableIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.ReversePositionQuery,System.Xml", "MS.Internal.Xml.XPath.ReversePositionQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Root,System.Xml", "MS.Internal.Xml.XPath.Root");
            feature.AddKnownType("MS.Internal.Xml.XPath.SortQuery,System.Xml", "MS.Internal.Xml.XPath.SortQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.SortKey,System.Xml", "MS.Internal.Xml.XPath.SortKey");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathSortComparer,System.Xml", "MS.Internal.Xml.XPath.XPathSortComparer");
            feature.AddKnownType("MS.Internal.Xml.XPath.StringFunctions,System.Xml", "MS.Internal.Xml.XPath.StringFunctions");
            feature.AddKnownType("MS.Internal.Xml.XPath.ValueQuery,System.Xml", "MS.Internal.Xml.XPath.ValueQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Variable,System.Xml", "MS.Internal.Xml.XPath.Variable");
            feature.AddKnownType("MS.Internal.Xml.XPath.VariableQuery,System.Xml", "MS.Internal.Xml.XPath.VariableQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathAncestorIterator,System.Xml", "MS.Internal.Xml.XPath.XPathAncestorIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathAncestorQuery,System.Xml", "MS.Internal.Xml.XPath.XPathAncestorQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathArrayIterator,System.Xml", "MS.Internal.Xml.XPath.XPathArrayIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathAxisIterator,System.Xml", "MS.Internal.Xml.XPath.XPathAxisIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathChildIterator,System.Xml", "MS.Internal.Xml.XPath.XPathChildIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathDescendantIterator,System.Xml", "MS.Internal.Xml.XPath.XPathDescendantIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathEmptyIterator,System.Xml", "MS.Internal.Xml.XPath.XPathEmptyIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathMultyIterator,System.Xml", "MS.Internal.Xml.XPath.XPathMultyIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathParser,System.Xml", "MS.Internal.Xml.XPath.XPathParser");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathScanner,System.Xml", "MS.Internal.Xml.XPath.XPathScanner");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathScanner+LexKind,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.XPathScanner.LexKind");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathSelectionIterator,System.Xml", "MS.Internal.Xml.XPath.XPathSelectionIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathSelfQuery,System.Xml", "MS.Internal.Xml.XPath.XPathSelfQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathSingletonIterator,System.Xml", "MS.Internal.Xml.XPath.XPathSingletonIterator");
            feature.AddKnownType("System.InvariantComparer,System.Xml", "InvariantComparer");
            feature.AddKnownType("System.Xml.Base64Decoder,System.Xml", "Base64Decoder");
            feature.AddKnownType("System.Xml.Base64Encoder,System.Xml", "Base64Encoder");
            feature.AddKnownType("System.Xml.XmlRawWriterBase64Encoder,System.Xml", "XmlRawWriterBase64Encoder");
            feature.AddKnownType("System.Xml.XmlTextWriterBase64Encoder,System.Xml", "XmlTextWriterBase64Encoder");
            feature.AddKnownType("System.Xml.BinHexDecoder,System.Xml", "BinHexDecoder");
            feature.AddKnownType("System.Xml.BitStack,System.Xml", "BitStack");
            feature.AddKnownType("System.Xml.ByteStack,System.Xml", "ByteStack");
            feature.AddKnownType("System.Xml.XmlNamedNodeMap,System.Xml", "XmlNamedNodeMap");
            feature.AddKnownType("System.Xml.XmlNamedNodeMap+SmallXmlNodeList,System.Xml", "SmallXmlNodeList");
            feature.AddKnownType("System.Xml.EmptyEnumerator,System.Xml", "EmptyEnumerator");
            feature.AddKnownType("System.Xml.HWStack,System.Xml", "HWStack");
            feature.AddKnownType("System.Xml.IApplicationResourceStreamResolver,System.Xml", "IApplicationResourceStreamResolver");
            feature.AddKnownType("System.Xml.IHasXmlNode,System.Xml", "IHasXmlNode");
            feature.AddKnownType("System.Xml.IXmlLineInfo,System.Xml", "IXmlLineInfo");
            feature.AddKnownType("System.Xml.PositionInfo,System.Xml", "PositionInfo");
            feature.AddKnownType("System.Xml.ReaderPositionInfo,System.Xml", "ReaderPositionInfo");
            feature.AddKnownType("System.Xml.IXmlNamespaceResolver,System.Xml", "IXmlNamespaceResolver");
            feature.AddKnownType("System.Xml.LineInfo,System.Xml", "LineInfo");
            feature.AddKnownType("System.Xml.NameTable,System.Xml", "NameTable");
            feature.AddKnownType("System.Xml.ValidateNames+Flags,System.Xml", "Flags");
            feature.AddKnownType("System.Xml.XmlCharType,System.Xml", "XmlCharType");
            feature.AddKnownType("System.Xml.ExceptionType,System.Xml", "ExceptionType");
            feature.AddKnownType("System.Xml.XmlDateTimeSerializationMode,System.Xml", "XmlDateTimeSerializationMode");
            feature.AddKnownType("System.Xml.XmlConvert,System.Xml", "XmlConvert");
            feature.AddKnownType("System.Xml.XmlDownloadManager,System.Xml", "XmlDownloadManager");
            feature.AddKnownType("System.Xml.OpenedHost,System.Xml", "OpenedHost");
            feature.AddKnownType("System.Xml.XmlRegisteredNonCachedStream,System.Xml", "XmlRegisteredNonCachedStream");
            feature.AddKnownType("System.Xml.XmlCachedStream,System.Xml", "XmlCachedStream");
            feature.AddKnownType("System.Xml.UTF16Decoder,System.Xml", "UTF16Decoder");
            feature.AddKnownType("System.Xml.SafeAsciiDecoder,System.Xml", "SafeAsciiDecoder");
            feature.AddKnownType("System.Xml.Ucs4Encoding,System.Xml", "Ucs4Encoding");
            feature.AddKnownType("System.Xml.Ucs4Encoding1234,System.Xml", "Ucs4Encoding1234");
            feature.AddKnownType("System.Xml.Ucs4Encoding4321,System.Xml", "Ucs4Encoding4321");
            feature.AddKnownType("System.Xml.Ucs4Encoding2143,System.Xml", "Ucs4Encoding2143");
            feature.AddKnownType("System.Xml.Ucs4Encoding3412,System.Xml", "Ucs4Encoding3412");
            feature.AddKnownType("System.Xml.Ucs4Decoder,System.Xml", "Ucs4Decoder");
            feature.AddKnownType("System.Xml.Ucs4Decoder4321,System.Xml", "Ucs4Decoder4321");
            feature.AddKnownType("System.Xml.Ucs4Decoder1234,System.Xml", "Ucs4Decoder1234");
            feature.AddKnownType("System.Xml.Ucs4Decoder2143,System.Xml", "Ucs4Decoder2143");
            feature.AddKnownType("System.Xml.Ucs4Decoder3412,System.Xml", "Ucs4Decoder3412");
            feature.AddKnownType("System.Xml.XmlException,System.Xml", "XmlException");
            feature.AddKnownType("System.Xml.XmlNamespaceManager,System.Xml", "XmlNamespaceManager");
            feature.AddKnownType("System.Xml.XmlNamespaceScope,System.Xml", "XmlNamespaceScope");
            feature.AddKnownType("System.Xml.XmlNameTable,System.Xml", "XmlNameTable");
            feature.AddKnownType("System.Xml.XmlNodeOrder,System.Xml", "XmlNodeOrder");
            feature.AddKnownType("System.Xml.XmlNodeType,System.Xml", "XmlNodeType");
            feature.AddKnownType("System.Xml.XmlNullResolver,System.Xml", "XmlNullResolver");
            feature.AddKnownType("System.Xml.XmlQualifiedName,System.Xml", "XmlQualifiedName");
            feature.AddKnownType("System.Xml.XmlResolver,System.Xml", "XmlResolver");
            feature.AddKnownType("System.Xml.XmlSecureResolver,System.Xml", "XmlSecureResolver");
            feature.AddKnownType("System.Xml.XmlUrlResolver,System.Xml", "XmlUrlResolver");
            feature.AddKnownType("System.Xml.XmlXapResolver,System.Xml", "XmlXapResolver");
            feature.AddKnownType("System.Xml.CharEntityEncoderFallback,System.Xml", "CharEntityEncoderFallback");
            feature.AddKnownType("System.Xml.CharEntityEncoderFallbackBuffer,System.Xml", "CharEntityEncoderFallbackBuffer");
            feature.AddKnownType("System.Xml.ConformanceLevel,System.Xml", "ConformanceLevel");
            feature.AddKnownType("System.Xml.DtdProcessing,System.Xml", "DtdProcessing");
            feature.AddKnownType("System.Xml.EntityHandling,System.Xml", "EntityHandling");
            feature.AddKnownType("System.Xml.HtmlEncodedRawTextWriter,System.Xml", "HtmlEncodedRawTextWriter");
            feature.AddKnownType("System.Xml.HtmlEncodedRawTextWriterIndent,System.Xml", "HtmlEncodedRawTextWriterIndent");
            feature.AddKnownType("System.Xml.HtmlTernaryTree,System.Xml", "HtmlTernaryTree");
            feature.AddKnownType("System.Xml.HtmlUtf8RawTextWriter,System.Xml", "HtmlUtf8RawTextWriter");
            feature.AddKnownType("System.Xml.HtmlUtf8RawTextWriterIndent,System.Xml", "HtmlUtf8RawTextWriterIndent");
            feature.AddKnownType("System.Xml.IDtdInfo,System.Xml", "IDtdInfo");
            feature.AddKnownType("System.Xml.IDtdAttributeListInfo,System.Xml", "IDtdAttributeListInfo");
            feature.AddKnownType("System.Xml.IDtdAttributeInfo,System.Xml", "IDtdAttributeInfo");
            feature.AddKnownType("System.Xml.IDtdDefaultAttributeInfo,System.Xml", "IDtdDefaultAttributeInfo");
            feature.AddKnownType("System.Xml.IDtdEntityInfo,System.Xml", "IDtdEntityInfo");
            feature.AddKnownType("System.Xml.IDtdParser,System.Xml", "IDtdParser");
            feature.AddKnownType("System.Xml.IDtdParserAdapter,System.Xml", "IDtdParserAdapter");
            feature.AddKnownType("System.Xml.IDtdParserAdapterWithValidation,System.Xml", "IDtdParserAdapterWithValidation");
            feature.AddKnownType("System.Xml.IDtdParserAdapterV1,System.Xml", "IDtdParserAdapterV1");
            feature.AddKnownType("System.Xml.IncrementalReadDecoder,System.Xml", "IncrementalReadDecoder");
            feature.AddKnownType("System.Xml.IncrementalReadDummyDecoder,System.Xml", "IncrementalReadDummyDecoder");
            feature.AddKnownType("System.Xml.IncrementalReadCharsDecoder,System.Xml", "IncrementalReadCharsDecoder");
            feature.AddKnownType("System.Xml.IValidationEventHandling,System.Xml", "IValidationEventHandling");
            feature.AddKnownType("System.Xml.NamespaceHandling,System.Xml", "NamespaceHandling");
            feature.AddKnownType("System.Xml.NewLineHandling,System.Xml", "NewLineHandling");
            feature.AddKnownType("System.Xml.IRemovableWriter,System.Xml", "IRemovableWriter");
            feature.AddKnownType("System.Xml.QueryOutputWriter,System.Xml", "QueryOutputWriter");
            feature.AddKnownType("System.Xml.QueryOutputWriterV1,System.Xml", "QueryOutputWriterV1");
            feature.AddKnownType("System.Xml.ReadContentAsBinaryHelper,System.Xml", "ReadContentAsBinaryHelper");
            feature.AddKnownType("System.Xml.TernaryTreeByte,System.Xml", "TernaryTreeByte");
            feature.AddKnownType("System.Xml.ElementProperties,System.Xml", "ElementProperties");
            feature.AddKnownType("System.Xml.AttributeProperties,System.Xml", "AttributeProperties");
            feature.AddKnownType("System.Xml.TernaryTreeReadOnly,System.Xml", "TernaryTreeReadOnly");
            feature.AddKnownType("System.Xml.ReadState,System.Xml", "ReadState");
            feature.AddKnownType("System.Xml.SecureStringHasher,System.Xml", "SecureStringHasher");
            feature.AddKnownType("System.Xml.TextEncodedRawTextWriter,System.Xml", "TextEncodedRawTextWriter");
            feature.AddKnownType("System.Xml.TextUtf8RawTextWriter,System.Xml", "TextUtf8RawTextWriter");
            feature.AddKnownType("System.Xml.ValidatingReaderNodeData,System.Xml", "ValidatingReaderNodeData");
            feature.AddKnownType("System.Xml.ValidationType,System.Xml", "ValidationType");
            feature.AddKnownType("System.Xml.WhitespaceHandling,System.Xml", "WhitespaceHandling");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReader,System.Xml", "XmlAsyncCheckReader");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReaderWithNS,System.Xml", "XmlAsyncCheckReaderWithNS");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReaderWithLineInfo,System.Xml", "XmlAsyncCheckReaderWithLineInfo");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReaderWithLineInfoNS,System.Xml", "XmlAsyncCheckReaderWithLineInfoNS");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReaderWithLineInfoNSSchema,System.Xml", "XmlAsyncCheckReaderWithLineInfoNSSchema");
            feature.AddKnownType("System.Xml.XmlAsyncCheckWriter,System.Xml", "XmlAsyncCheckWriter");
            feature.AddKnownType("System.Xml.XmlAutoDetectWriter,System.Xml", "XmlAutoDetectWriter");
            feature.AddKnownType("System.Xml.XmlCharCheckingReader,System.Xml", "XmlCharCheckingReader");
            feature.AddKnownType("System.Xml.XmlCharCheckingReaderWithNS,System.Xml", "XmlCharCheckingReaderWithNS");
            feature.AddKnownType("System.Xml.XmlCharCheckingWriter,System.Xml", "XmlCharCheckingWriter");
            feature.AddKnownType("System.Xml.XmlEncodedRawTextWriter,System.Xml", "XmlEncodedRawTextWriter");
            feature.AddKnownType("System.Xml.XmlEncodedRawTextWriterIndent,System.Xml", "XmlEncodedRawTextWriterIndent");
            feature.AddKnownType("System.Xml.XmlEventCache,System.Xml", "XmlEventCache");
            feature.AddKnownType("System.Xml.XmlParserContext,System.Xml", "XmlParserContext");
            feature.AddKnownType("System.Xml.XmlRawWriter,System.Xml", "XmlRawWriter");
            feature.AddKnownType("System.Xml.XmlReader,System.Xml", "XmlReader");
            feature.AddKnownType("System.Xml.XmlReaderSettings,System.Xml", "XmlReaderSettings");
            feature.AddKnownType("System.Xml.XmlSpace,System.Xml", "XmlSpace");
            feature.AddKnownType("System.Xml.XmlSubtreeReader,System.Xml", "XmlSubtreeReader");
            feature.AddKnownType("System.Xml.XmlTextEncoder,System.Xml", "XmlTextEncoder");
            feature.AddKnownType("System.Xml.XmlTextReader,System.Xml", "XmlTextReader");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl,System.Xml", "XmlTextReaderImpl");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl+ParsingMode,System.Xml", "ParsingMode");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl+EntityType,System.Xml", "EntityType");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl+DtdParserProxy,System.Xml", "DtdParserProxy");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl+NodeData,System.Xml", "NodeData");
            feature.AddKnownType("System.Xml.Formatting,System.Xml", "Formatting");
            feature.AddKnownType("System.Xml.XmlTextWriter,System.Xml", "XmlTextWriter");
            feature.AddKnownType("System.Xml.XmlUtf8RawTextWriter,System.Xml", "XmlUtf8RawTextWriter");
            feature.AddKnownType("System.Xml.XmlUtf8RawTextWriterIndent,System.Xml", "XmlUtf8RawTextWriterIndent");
            feature.AddKnownType("System.Xml.XmlValidatingReader,System.Xml", "XmlValidatingReader");
            feature.AddKnownType("System.Xml.XmlValidatingReaderImpl,System.Xml", "XmlValidatingReaderImpl");
            feature.AddKnownType("System.Xml.XmlValidatingReaderImpl+ValidationEventHandling,System.Xml", "ValidationEventHandling");
            feature.AddKnownType("System.Xml.XmlWellFormedWriter,System.Xml", "XmlWellFormedWriter");
            feature.AddKnownType("System.Xml.XmlWellFormedWriter+State,System.Xml", "State");
            feature.AddKnownType("System.Xml.XmlWrappingReader,System.Xml", "XmlWrappingReader");
            feature.AddKnownType("System.Xml.XmlWrappingWriter,System.Xml", "XmlWrappingWriter");
            feature.AddKnownType("System.Xml.WriteState,System.Xml", "WriteState");
            feature.AddKnownType("System.Xml.XmlWriter,System.Xml", "XmlWriter");
            feature.AddKnownType("System.Xml.XmlOutputMethod,System.Xml", "XmlOutputMethod");
            feature.AddKnownType("System.Xml.TriState,System.Xml", "TriState");
            feature.AddKnownType("System.Xml.XmlStandalone,System.Xml", "XmlStandalone");
            feature.AddKnownType("System.Xml.XmlWriterSettings,System.Xml", "XmlWriterSettings");
            feature.AddKnownType("System.Xml.AttributePSVIInfo,System.Xml", "AttributePSVIInfo");
            feature.AddKnownType("System.Xml.XsdValidatingReader,System.Xml", "XsdValidatingReader");
            feature.AddKnownType("System.Xml.XsdCachingReader,System.Xml", "XsdCachingReader");
            feature.AddKnownType("System.Xml.DocumentXmlWriterType,System.Xml", "DocumentXmlWriterType");
            feature.AddKnownType("System.Xml.DocumentXmlWriter,System.Xml", "DocumentXmlWriter");
            feature.AddKnownType("System.Xml.DocumentXPathNavigator,System.Xml", "DocumentXPathNavigator");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_Empty,System.Xml", "DocumentXPathNodeIterator_Empty");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemDescendants,System.Xml", "DocumentXPathNodeIterator_ElemDescendants");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_AllElemChildren,System.Xml", "DocumentXPathNodeIterator_AllElemChildren");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_AllElemChildren_AndSelf,System.Xml", "DocumentXPathNodeIterator_AllElemChildren_AndSelf");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemChildren_NoLocalName,System.Xml", "DocumentXPathNodeIterator_ElemChildren_NoLocalName");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf_NoLocalName,System.Xml", "DocumentXPathNodeIterator_ElemChildren_AndSelf_NoLocalName");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemChildren,System.Xml", "DocumentXPathNodeIterator_ElemChildren");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf,System.Xml", "DocumentXPathNodeIterator_ElemChildren_AndSelf");
            feature.AddKnownType("System.Xml.DomNameTable,System.Xml", "DomNameTable");
            feature.AddKnownType("System.Xml.XmlAttribute,System.Xml", "XmlAttribute");
            feature.AddKnownType("System.Xml.XmlAttributeCollection,System.Xml", "XmlAttributeCollection");
            feature.AddKnownType("System.Xml.XmlCDataSection,System.Xml", "XmlCDataSection");
            feature.AddKnownType("System.Xml.XmlCharacterData,System.Xml", "XmlCharacterData");
            feature.AddKnownType("System.Xml.XmlChildEnumerator,System.Xml", "XmlChildEnumerator");
            feature.AddKnownType("System.Xml.XmlChildNodes,System.Xml", "XmlChildNodes");
            feature.AddKnownType("System.Xml.XmlComment,System.Xml", "XmlComment");
            feature.AddKnownType("System.Xml.XmlDeclaration,System.Xml", "XmlDeclaration");
            feature.AddKnownType("System.Xml.XmlDocument,System.Xml", "XmlDocument");
            feature.AddKnownType("System.Xml.XmlDocumentFragment,System.Xml", "XmlDocumentFragment");
            feature.AddKnownType("System.Xml.XmlDocumentType,System.Xml", "XmlDocumentType");
            feature.AddKnownType("System.Xml.DocumentSchemaValidator,System.Xml", "DocumentSchemaValidator");
            feature.AddKnownType("System.Xml.XmlDOMTextWriter,System.Xml", "XmlDOMTextWriter");
            feature.AddKnownType("System.Xml.XmlElement,System.Xml", "XmlElement");
            feature.AddKnownType("System.Xml.XmlElementList,System.Xml", "XmlElementList");
            feature.AddKnownType("System.Xml.XmlElementListEnumerator,System.Xml", "XmlElementListEnumerator");
            feature.AddKnownType("System.Xml.XmlEmptyElementListEnumerator,System.Xml", "XmlEmptyElementListEnumerator");
            feature.AddKnownType("System.Xml.XmlElementListListener,System.Xml", "XmlElementListListener");
            feature.AddKnownType("System.Xml.XmlEntity,System.Xml", "XmlEntity");
            feature.AddKnownType("System.Xml.XmlEntityReference,System.Xml", "XmlEntityReference");
            feature.AddKnownType("System.Xml.XmlNodeChangedAction,System.Xml", "XmlNodeChangedAction");
            feature.AddKnownType("System.Xml.XmlImplementation,System.Xml", "XmlImplementation");
            feature.AddKnownType("System.Xml.XmlLinkedNode,System.Xml", "XmlLinkedNode");
            feature.AddKnownType("System.Xml.XmlLoader,System.Xml", "XmlLoader");
            feature.AddKnownType("System.Xml.XmlName,System.Xml", "XmlName");
            feature.AddKnownType("System.Xml.XmlNameEx,System.Xml", "XmlNameEx");
            feature.AddKnownType("System.Xml.XmlNode,System.Xml", "XmlNode");
            feature.AddKnownType("System.Xml.DebuggerDisplayXmlNodeProxy,System.Xml", "DebuggerDisplayXmlNodeProxy");
            feature.AddKnownType("System.Xml.XmlNodeChangedEventArgs,System.Xml", "XmlNodeChangedEventArgs");
            feature.AddKnownType("System.Xml.XmlNodeList,System.Xml", "XmlNodeList");
            feature.AddKnownType("System.Xml.XmlNodeReaderNavigator,System.Xml", "XmlNodeReaderNavigator");
            feature.AddKnownType("System.Xml.XmlNodeReaderNavigator+VirtualAttribute,System.Xml", "VirtualAttribute");
            feature.AddKnownType("System.Xml.XmlNodeReader,System.Xml", "XmlNodeReader");
            feature.AddKnownType("System.Xml.XmlNotation,System.Xml", "XmlNotation");
            feature.AddKnownType("System.Xml.XmlProcessingInstruction,System.Xml", "XmlProcessingInstruction");
            feature.AddKnownType("System.Xml.XmlSignificantWhitespace,System.Xml", "XmlSignificantWhitespace");
            feature.AddKnownType("System.Xml.XmlText,System.Xml", "XmlText");
            feature.AddKnownType("System.Xml.XmlUnspecifiedAttribute,System.Xml", "XmlUnspecifiedAttribute");
            feature.AddKnownType("System.Xml.XmlWhitespace,System.Xml", "XmlWhitespace");
            feature.AddKnownType("System.Xml.XPathNodeList,System.Xml", "XPathNodeList");
            feature.AddKnownType("System.Xml.XmlNodeListEnumerator,System.Xml", "XmlNodeListEnumerator");
            feature.AddKnownType("System.Xml.BinXmlToken,System.Xml", "BinXmlToken");
            feature.AddKnownType("System.Xml.BinXmlSqlDecimal,System.Xml", "BinXmlSqlDecimal");
            feature.AddKnownType("System.Xml.BinXmlSqlMoney,System.Xml", "BinXmlSqlMoney");
            feature.AddKnownType("System.Xml.BinXmlDateTime,System.Xml", "BinXmlDateTime");
            feature.AddKnownType("System.Xml.XmlSqlBinaryReader,System.Xml", "XmlSqlBinaryReader");
            feature.AddKnownType("System.Xml.XmlSqlBinaryReader+QName,System.Xml", "QName");
            feature.AddKnownType("System.Xml.DtdParser,System.Xml", "DtdParser");
            feature.AddKnownType("System.Xml.XmlTokenizedType,System.Xml", "XmlTokenizedType");
            feature.AddKnownType("System.Xml.ResDescriptionAttribute,System.Xml", "ResDescriptionAttribute");
            feature.AddKnownType("System.Xml.ResCategoryAttribute,System.Xml", "ResCategoryAttribute");
            feature.AddKnownType("System.Xml.Res,System.Xml", "Res");
            feature.AddKnownType("System.Xml.Resolvers.XmlKnownDtds,System.Xml", "XmlKnownDtds");
            feature.AddKnownType("System.Xml.Resolvers.XmlPreloadedResolver,System.Xml", "XmlPreloadedResolver");
            feature.AddKnownType("System.Xml.Schema.AxisElement,System.Xml", "AxisElement");
            feature.AddKnownType("System.Xml.Schema.AxisStack,System.Xml", "AxisStack");
            feature.AddKnownType("System.Xml.Schema.ActiveAxis,System.Xml", "ActiveAxis");
            feature.AddKnownType("System.Xml.Schema.DoubleLinkAxis,System.Xml", "DoubleLinkAxis");
            feature.AddKnownType("System.Xml.Schema.ForwardAxis,System.Xml", "ForwardAxis");
            feature.AddKnownType("System.Xml.Schema.Asttree,System.Xml", "Asttree");
            feature.AddKnownType("System.Xml.Schema.AutoValidator,System.Xml", "AutoValidator");
            feature.AddKnownType("System.Xml.Schema.BaseProcessor,System.Xml", "BaseProcessor");
            feature.AddKnownType("System.Xml.Schema.BaseValidator,System.Xml", "BaseValidator");
            feature.AddKnownType("System.Xml.Schema.BitSet,System.Xml", "BitSet");
            feature.AddKnownType("System.Xml.Schema.ChameleonKey,System.Xml", "ChameleonKey");
            feature.AddKnownType("System.Xml.Schema.CompiledIdentityConstraint,System.Xml", "CompiledIdentityConstraint");
            feature.AddKnownType("System.Xml.Schema.CompiledIdentityConstraint+ConstraintRole,System.Xml", "CompiledIdentityConstraint.ConstraintRole");
            feature.AddKnownType("System.Xml.Schema.Compiler,System.Xml", "Compiler");
            feature.AddKnownType("System.Xml.Schema.ConstraintStruct,System.Xml", "ConstraintStruct");
            feature.AddKnownType("System.Xml.Schema.LocatedActiveAxis,System.Xml", "LocatedActiveAxis");
            feature.AddKnownType("System.Xml.Schema.SelectorActiveAxis,System.Xml", "SelectorActiveAxis");
            feature.AddKnownType("System.Xml.Schema.KSStruct,System.Xml", "KSStruct");
            feature.AddKnownType("System.Xml.Schema.TypedObject,System.Xml", "TypedObject");
            feature.AddKnownType("System.Xml.Schema.KeySequence,System.Xml", "KeySequence");
            feature.AddKnownType("System.Xml.Schema.UpaException,System.Xml", "UpaException");
            feature.AddKnownType("System.Xml.Schema.SymbolsDictionary,System.Xml", "SymbolsDictionary");
            feature.AddKnownType("System.Xml.Schema.Position,System.Xml", "Position");
            feature.AddKnownType("System.Xml.Schema.Positions,System.Xml", "Positions");
            feature.AddKnownType("System.Xml.Schema.SyntaxTreeNode,System.Xml", "SyntaxTreeNode");
            feature.AddKnownType("System.Xml.Schema.LeafNode,System.Xml", "LeafNode");
            feature.AddKnownType("System.Xml.Schema.NamespaceListNode,System.Xml", "NamespaceListNode");
            feature.AddKnownType("System.Xml.Schema.InteriorNode,System.Xml", "InteriorNode");
            feature.AddKnownType("System.Xml.Schema.SequenceNode,System.Xml", "SequenceNode");
            feature.AddKnownType("System.Xml.Schema.ChoiceNode,System.Xml", "ChoiceNode");
            feature.AddKnownType("System.Xml.Schema.PlusNode,System.Xml", "PlusNode");
            feature.AddKnownType("System.Xml.Schema.QmarkNode,System.Xml", "QmarkNode");
            feature.AddKnownType("System.Xml.Schema.StarNode,System.Xml", "StarNode");
            feature.AddKnownType("System.Xml.Schema.LeafRangeNode,System.Xml", "LeafRangeNode");
            feature.AddKnownType("System.Xml.Schema.ContentValidator,System.Xml", "ContentValidator");
            feature.AddKnownType("System.Xml.Schema.ParticleContentValidator,System.Xml", "ParticleContentValidator");
            feature.AddKnownType("System.Xml.Schema.DfaContentValidator,System.Xml", "DfaContentValidator");
            feature.AddKnownType("System.Xml.Schema.NfaContentValidator,System.Xml", "NfaContentValidator");
            feature.AddKnownType("System.Xml.Schema.RangePositionInfo,System.Xml", "RangePositionInfo");
            feature.AddKnownType("System.Xml.Schema.RangeContentValidator,System.Xml", "RangeContentValidator");
            feature.AddKnownType("System.Xml.Schema.AllElementsContentValidator,System.Xml", "AllElementsContentValidator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDatatypeVariety,System.Xml", "XmlSchemaDatatypeVariety");
            feature.AddKnownType("System.Xml.Schema.XsdSimpleValue,System.Xml", "XsdSimpleValue");
            feature.AddKnownType("System.Xml.Schema.RestrictionFlags,System.Xml", "RestrictionFlags");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaWhiteSpace,System.Xml", "XmlSchemaWhiteSpace");
            feature.AddKnownType("System.Xml.Schema.RestrictionFacets,System.Xml", "RestrictionFacets");
            feature.AddKnownType("System.Xml.Schema.DatatypeImplementation,System.Xml", "DatatypeImplementation");
            feature.AddKnownType("System.Xml.Schema.Datatype_List,System.Xml", "Datatype_List");
            feature.AddKnownType("System.Xml.Schema.Datatype_union,System.Xml", "Datatype_union");
            feature.AddKnownType("System.Xml.Schema.Datatype_anySimpleType,System.Xml", "Datatype_anySimpleType");
            feature.AddKnownType("System.Xml.Schema.Datatype_anyAtomicType,System.Xml", "Datatype_anyAtomicType");
            feature.AddKnownType("System.Xml.Schema.Datatype_untypedAtomicType,System.Xml", "Datatype_untypedAtomicType");
            feature.AddKnownType("System.Xml.Schema.Datatype_string,System.Xml", "Datatype_string");
            feature.AddKnownType("System.Xml.Schema.Datatype_boolean,System.Xml", "Datatype_boolean");
            feature.AddKnownType("System.Xml.Schema.Datatype_float,System.Xml", "Datatype_float");
            feature.AddKnownType("System.Xml.Schema.Datatype_double,System.Xml", "Datatype_double");
            feature.AddKnownType("System.Xml.Schema.Datatype_decimal,System.Xml", "Datatype_decimal");
            feature.AddKnownType("System.Xml.Schema.Datatype_duration,System.Xml", "Datatype_duration");
            feature.AddKnownType("System.Xml.Schema.Datatype_yearMonthDuration,System.Xml", "Datatype_yearMonthDuration");
            feature.AddKnownType("System.Xml.Schema.Datatype_dayTimeDuration,System.Xml", "Datatype_dayTimeDuration");
            feature.AddKnownType("System.Xml.Schema.Datatype_dateTimeBase,System.Xml", "Datatype_dateTimeBase");
            feature.AddKnownType("System.Xml.Schema.Datatype_dateTimeNoTimeZone,System.Xml", "Datatype_dateTimeNoTimeZone");
            feature.AddKnownType("System.Xml.Schema.Datatype_dateTimeTimeZone,System.Xml", "Datatype_dateTimeTimeZone");
            feature.AddKnownType("System.Xml.Schema.Datatype_dateTime,System.Xml", "Datatype_dateTime");
            feature.AddKnownType("System.Xml.Schema.Datatype_timeNoTimeZone,System.Xml", "Datatype_timeNoTimeZone");
            feature.AddKnownType("System.Xml.Schema.Datatype_timeTimeZone,System.Xml", "Datatype_timeTimeZone");
            feature.AddKnownType("System.Xml.Schema.Datatype_time,System.Xml", "Datatype_time");
            feature.AddKnownType("System.Xml.Schema.Datatype_date,System.Xml", "Datatype_date");
            feature.AddKnownType("System.Xml.Schema.Datatype_yearMonth,System.Xml", "Datatype_yearMonth");
            feature.AddKnownType("System.Xml.Schema.Datatype_year,System.Xml", "Datatype_year");
            feature.AddKnownType("System.Xml.Schema.Datatype_monthDay,System.Xml", "Datatype_monthDay");
            feature.AddKnownType("System.Xml.Schema.Datatype_day,System.Xml", "Datatype_day");
            feature.AddKnownType("System.Xml.Schema.Datatype_month,System.Xml", "Datatype_month");
            feature.AddKnownType("System.Xml.Schema.Datatype_hexBinary,System.Xml", "Datatype_hexBinary");
            feature.AddKnownType("System.Xml.Schema.Datatype_base64Binary,System.Xml", "Datatype_base64Binary");
            feature.AddKnownType("System.Xml.Schema.Datatype_anyURI,System.Xml", "Datatype_anyURI");
            feature.AddKnownType("System.Xml.Schema.Datatype_QName,System.Xml", "Datatype_QName");
            feature.AddKnownType("System.Xml.Schema.Datatype_normalizedString,System.Xml", "Datatype_normalizedString");
            feature.AddKnownType("System.Xml.Schema.Datatype_normalizedStringV1Compat,System.Xml", "Datatype_normalizedStringV1Compat");
            feature.AddKnownType("System.Xml.Schema.Datatype_token,System.Xml", "Datatype_token");
            feature.AddKnownType("System.Xml.Schema.Datatype_tokenV1Compat,System.Xml", "Datatype_tokenV1Compat");
            feature.AddKnownType("System.Xml.Schema.Datatype_language,System.Xml", "Datatype_language");
            feature.AddKnownType("System.Xml.Schema.Datatype_NMTOKEN,System.Xml", "Datatype_NMTOKEN");
            feature.AddKnownType("System.Xml.Schema.Datatype_Name,System.Xml", "Datatype_Name");
            feature.AddKnownType("System.Xml.Schema.Datatype_NCName,System.Xml", "Datatype_NCName");
            feature.AddKnownType("System.Xml.Schema.Datatype_ID,System.Xml", "Datatype_ID");
            feature.AddKnownType("System.Xml.Schema.Datatype_IDREF,System.Xml", "Datatype_IDREF");
            feature.AddKnownType("System.Xml.Schema.Datatype_ENTITY,System.Xml", "Datatype_ENTITY");
            feature.AddKnownType("System.Xml.Schema.Datatype_NOTATION,System.Xml", "Datatype_NOTATION");
            feature.AddKnownType("System.Xml.Schema.Datatype_integer,System.Xml", "Datatype_integer");
            feature.AddKnownType("System.Xml.Schema.Datatype_nonPositiveInteger,System.Xml", "Datatype_nonPositiveInteger");
            feature.AddKnownType("System.Xml.Schema.Datatype_negativeInteger,System.Xml", "Datatype_negativeInteger");
            feature.AddKnownType("System.Xml.Schema.Datatype_long,System.Xml", "Datatype_long");
            feature.AddKnownType("System.Xml.Schema.Datatype_int,System.Xml", "Datatype_int");
            feature.AddKnownType("System.Xml.Schema.Datatype_short,System.Xml", "Datatype_short");
            feature.AddKnownType("System.Xml.Schema.Datatype_byte,System.Xml", "Datatype_byte");
            feature.AddKnownType("System.Xml.Schema.Datatype_nonNegativeInteger,System.Xml", "Datatype_nonNegativeInteger");
            feature.AddKnownType("System.Xml.Schema.Datatype_unsignedLong,System.Xml", "Datatype_unsignedLong");
            feature.AddKnownType("System.Xml.Schema.Datatype_unsignedInt,System.Xml", "Datatype_unsignedInt");
            feature.AddKnownType("System.Xml.Schema.Datatype_unsignedShort,System.Xml", "Datatype_unsignedShort");
            feature.AddKnownType("System.Xml.Schema.Datatype_unsignedByte,System.Xml", "Datatype_unsignedByte");
            feature.AddKnownType("System.Xml.Schema.Datatype_positiveInteger,System.Xml", "Datatype_positiveInteger");
            feature.AddKnownType("System.Xml.Schema.Datatype_doubleXdr,System.Xml", "Datatype_doubleXdr");
            feature.AddKnownType("System.Xml.Schema.Datatype_floatXdr,System.Xml", "Datatype_floatXdr");
            feature.AddKnownType("System.Xml.Schema.Datatype_QNameXdr,System.Xml", "Datatype_QNameXdr");
            feature.AddKnownType("System.Xml.Schema.Datatype_ENUMERATION,System.Xml", "Datatype_ENUMERATION");
            feature.AddKnownType("System.Xml.Schema.Datatype_char,System.Xml", "Datatype_char");
            feature.AddKnownType("System.Xml.Schema.Datatype_fixed,System.Xml", "Datatype_fixed");
            feature.AddKnownType("System.Xml.Schema.Datatype_uuid,System.Xml", "Datatype_uuid");
            feature.AddKnownType("System.Xml.Schema.DtdValidator,System.Xml", "DtdValidator");
            feature.AddKnownType("System.Xml.Schema.FacetsChecker,System.Xml", "FacetsChecker");
            feature.AddKnownType("System.Xml.Schema.Numeric10FacetsChecker,System.Xml", "Numeric10FacetsChecker");
            feature.AddKnownType("System.Xml.Schema.Numeric2FacetsChecker,System.Xml", "Numeric2FacetsChecker");
            feature.AddKnownType("System.Xml.Schema.DurationFacetsChecker,System.Xml", "DurationFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.DateTimeFacetsChecker,System.Xml", "DateTimeFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.StringFacetsChecker,System.Xml", "StringFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.QNameFacetsChecker,System.Xml", "QNameFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.MiscFacetsChecker,System.Xml", "MiscFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.BinaryFacetsChecker,System.Xml", "BinaryFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.ListFacetsChecker,System.Xml", "ListFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.UnionFacetsChecker,System.Xml", "UnionFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.IXmlSchemaInfo,System.Xml", "IXmlSchemaInfo");
            feature.AddKnownType("System.Xml.Schema.NamespaceList,System.Xml", "NamespaceList");
            feature.AddKnownType("System.Xml.Schema.NamespaceList+ListType,System.Xml", "NamespaceList.ListType");
            feature.AddKnownType("System.Xml.Schema.NamespaceListV1Compat,System.Xml", "NamespaceListV1Compat");
            feature.AddKnownType("System.Xml.Schema.Parser,System.Xml", "Parser");
            feature.AddKnownType("System.Xml.Schema.Compositor,System.Xml", "Compositor");
            feature.AddKnownType("System.Xml.Schema.RedefineEntry,System.Xml", "RedefineEntry");
            feature.AddKnownType("System.Xml.Schema.Preprocessor,System.Xml", "Preprocessor");
            feature.AddKnownType("System.Xml.Schema.SchemaAttDef,System.Xml", "SchemaAttDef");
            feature.AddKnownType("System.Xml.Schema.SchemaAttDef+Reserve,System.Xml", "Reserve");
            feature.AddKnownType("System.Xml.Schema.SchemaBuilder,System.Xml", "SchemaBuilder");
            feature.AddKnownType("System.Xml.Schema.SchemaCollectionCompiler,System.Xml", "SchemaCollectionCompiler");
            feature.AddKnownType("System.Xml.Schema.SchemaCollectionPreprocessor,System.Xml", "SchemaCollectionPreprocessor");
            feature.AddKnownType("System.Xml.Schema.SchemaDeclBase,System.Xml", "SchemaDeclBase");
            feature.AddKnownType("System.Xml.Schema.SchemaDeclBase+Use,System.Xml", "Use");
            feature.AddKnownType("System.Xml.Schema.SchemaElementDecl,System.Xml", "SchemaElementDecl");
            feature.AddKnownType("System.Xml.Schema.SchemaEntity,System.Xml", "SchemaEntity");
            feature.AddKnownType("System.Xml.Schema.AttributeMatchState,System.Xml", "AttributeMatchState");
            feature.AddKnownType("System.Xml.Schema.SchemaInfo,System.Xml", "SchemaInfo");
            feature.AddKnownType("System.Xml.Schema.SchemaNames,System.Xml", "SchemaNames");
            feature.AddKnownType("System.Xml.Schema.SchemaNames+Token,System.Xml", "SchemaNames.Token");
            feature.AddKnownType("System.Xml.Schema.SchemaNamespaceManager,System.Xml", "SchemaNamespaceManager");
            feature.AddKnownType("System.Xml.Schema.SchemaNotation,System.Xml", "SchemaNotation");
            feature.AddKnownType("System.Xml.Schema.SchemaType,System.Xml", "SchemaType");
            feature.AddKnownType("System.Xml.Schema.ValidationEventArgs,System.Xml", "ValidationEventArgs");
            feature.AddKnownType("System.Xml.Schema.StateUnion,System.Xml", "StateUnion");
            feature.AddKnownType("System.Xml.Schema.ValidationState,System.Xml", "ValidationState");
            feature.AddKnownType("System.Xml.Schema.XdrBuilder,System.Xml", "XdrBuilder");
            feature.AddKnownType("System.Xml.Schema.XdrValidator,System.Xml", "XdrValidator");
            feature.AddKnownType("System.Xml.Schema.XmlAtomicValue,System.Xml", "XmlAtomicValue");
            feature.AddKnownType("System.Xml.Schema.XmlSchema,System.Xml", "XmlSchema");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAll,System.Xml", "XmlSchemaAll");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnnotated,System.Xml", "XmlSchemaAnnotated");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnnotation,System.Xml", "XmlSchemaAnnotation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAny,System.Xml", "XmlSchemaAny");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml", "XmlSchemaAnyAttribute");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAppInfo,System.Xml", "XmlSchemaAppInfo");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttribute,System.Xml", "XmlSchemaAttribute");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttributeGroup,System.Xml", "XmlSchemaAttributeGroup");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttributeGroupRef,System.Xml", "XmlSchemaAttributeGroupRef");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaChoice,System.Xml", "XmlSchemaChoice");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCollection,System.Xml", "XmlSchemaCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCollectionNode,System.Xml", "XmlSchemaCollectionNode");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCollectionEnumerator,System.Xml", "XmlSchemaCollectionEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContent,System.Xml", "XmlSchemaComplexContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContentExtension,System.Xml", "XmlSchemaComplexContentExtension");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContentRestriction,System.Xml", "XmlSchemaComplexContentRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexType,System.Xml", "XmlSchemaComplexType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContent,System.Xml", "XmlSchemaContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentModel,System.Xml", "XmlSchemaContentModel");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentProcessing,System.Xml", "XmlSchemaContentProcessing");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentType,System.Xml", "XmlSchemaContentType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDatatype,System.Xml", "XmlSchemaDatatype");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDerivationMethod,System.Xml", "XmlSchemaDerivationMethod");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDocumentation,System.Xml", "XmlSchemaDocumentation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaElement,System.Xml", "XmlSchemaElement");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaException,System.Xml", "XmlSchemaException");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaExternal,System.Xml", "XmlSchemaExternal");
            feature.AddKnownType("System.Xml.Schema.FacetType,System.Xml", "FacetType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaFacet,System.Xml", "XmlSchemaFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaNumericFacet,System.Xml", "XmlSchemaNumericFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaLengthFacet,System.Xml", "XmlSchemaLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinLengthFacet,System.Xml", "XmlSchemaMinLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxLengthFacet,System.Xml", "XmlSchemaMaxLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaPatternFacet,System.Xml", "XmlSchemaPatternFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaEnumerationFacet,System.Xml", "XmlSchemaEnumerationFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinExclusiveFacet,System.Xml", "XmlSchemaMinExclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinInclusiveFacet,System.Xml", "XmlSchemaMinInclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxExclusiveFacet,System.Xml", "XmlSchemaMaxExclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxInclusiveFacet,System.Xml", "XmlSchemaMaxInclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaTotalDigitsFacet,System.Xml", "XmlSchemaTotalDigitsFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaFractionDigitsFacet,System.Xml", "XmlSchemaFractionDigitsFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaWhiteSpaceFacet,System.Xml", "XmlSchemaWhiteSpaceFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaForm,System.Xml", "XmlSchemaForm");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroup,System.Xml", "XmlSchemaGroup");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroupBase,System.Xml", "XmlSchemaGroupBase");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroupRef,System.Xml", "XmlSchemaGroupRef");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaIdentityConstraint,System.Xml", "XmlSchemaIdentityConstraint");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaXPath,System.Xml", "XmlSchemaXPath");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaUnique,System.Xml", "XmlSchemaUnique");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaKey,System.Xml", "XmlSchemaKey");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaKeyref,System.Xml", "XmlSchemaKeyref");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaImport,System.Xml", "XmlSchemaImport");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInclude,System.Xml", "XmlSchemaInclude");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInfo,System.Xml", "XmlSchemaInfo");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaNotation,System.Xml", "XmlSchemaNotation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObject,System.Xml", "XmlSchemaObject");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectCollection,System.Xml", "XmlSchemaObjectCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectEnumerator,System.Xml", "XmlSchemaObjectEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable,System.Xml", "XmlSchemaObjectTable");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+EnumeratorType,System.Xml", "EnumeratorType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+XmlSchemaObjectEntry,System.Xml", "XmlSchemaObjectEntry");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+NamesCollection,System.Xml", "NamesCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+ValuesCollection,System.Xml", "ValuesCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+XSOEnumerator,System.Xml", "XSOEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+XSODictionaryEnumerator,System.Xml", "XSODictionaryEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaParticle,System.Xml", "XmlSchemaParticle");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaRedefine,System.Xml", "XmlSchemaRedefine");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSequence,System.Xml", "XmlSchemaSequence");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSet,System.Xml", "XmlSchemaSet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCompilationSettings,System.Xml", "XmlSchemaCompilationSettings");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContent,System.Xml", "XmlSchemaSimpleContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContentExtension,System.Xml", "XmlSchemaSimpleContentExtension");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContentRestriction,System.Xml", "XmlSchemaSimpleContentRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleType,System.Xml", "XmlSchemaSimpleType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeContent,System.Xml", "XmlSchemaSimpleTypeContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeList,System.Xml", "XmlSchemaSimpleTypeList");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeRestriction,System.Xml", "XmlSchemaSimpleTypeRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeUnion,System.Xml", "XmlSchemaSimpleTypeUnion");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSubstitutionGroup,System.Xml", "XmlSchemaSubstitutionGroup");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSubstitutionGroupV1Compat,System.Xml", "XmlSchemaSubstitutionGroupV1Compat");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaType,System.Xml", "XmlSchemaType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaUse,System.Xml", "XmlSchemaUse");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidationException,System.Xml", "XmlSchemaValidationException");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidationFlags,System.Xml", "XmlSchemaValidationFlags");
            feature.AddKnownType("System.Xml.Schema.ValidatorState,System.Xml", "ValidatorState");
            feature.AddKnownType("System.Xml.Schema.IdRefNode,System.Xml", "IdRefNode");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidator,System.Xml", "XmlSchemaValidator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidity,System.Xml", "XmlSchemaValidity");
            feature.AddKnownType("System.Xml.Schema.XmlSeverityType,System.Xml", "XmlSeverityType");
            feature.AddKnownType("System.Xml.Schema.XmlTypeCode,System.Xml", "XmlTypeCode");
            feature.AddKnownType("System.Xml.Schema.XmlValueConverter,System.Xml", "XmlValueConverter");
            feature.AddKnownType("System.Xml.Schema.XmlBaseConverter,System.Xml", "XmlBaseConverter");
            feature.AddKnownType("System.Xml.Schema.XmlNumeric10Converter,System.Xml", "XmlNumeric10Converter");
            feature.AddKnownType("System.Xml.Schema.XmlNumeric2Converter,System.Xml", "XmlNumeric2Converter");
            feature.AddKnownType("System.Xml.Schema.XmlDateTimeConverter,System.Xml", "XmlDateTimeConverter");
            feature.AddKnownType("System.Xml.Schema.XmlBooleanConverter,System.Xml", "XmlBooleanConverter");
            feature.AddKnownType("System.Xml.Schema.XmlMiscConverter,System.Xml", "XmlMiscConverter");
            feature.AddKnownType("System.Xml.Schema.XmlStringConverter,System.Xml", "XmlStringConverter");
            feature.AddKnownType("System.Xml.Schema.XmlUntypedConverter,System.Xml", "XmlUntypedConverter");
            feature.AddKnownType("System.Xml.Schema.XmlNodeConverter,System.Xml", "XmlNodeConverter");
            feature.AddKnownType("System.Xml.Schema.XmlAnyConverter,System.Xml", "XmlAnyConverter");
            feature.AddKnownType("System.Xml.Schema.XmlAnyListConverter,System.Xml", "XmlAnyListConverter");
            feature.AddKnownType("System.Xml.Schema.XmlListConverter,System.Xml", "XmlListConverter");
            feature.AddKnownType("System.Xml.Schema.XmlUnionConverter,System.Xml", "XmlUnionConverter");
            feature.AddKnownType("System.Xml.Schema.XsdBuilder,System.Xml", "XsdBuilder");
            feature.AddKnownType("System.Xml.Schema.XsdDateTimeFlags,System.Xml", "XsdDateTimeFlags");
            feature.AddKnownType("System.Xml.Schema.XsdDateTime,System.Xml", "XsdDateTime");
            feature.AddKnownType("System.Xml.Schema.XsdDuration,System.Xml", "XsdDuration");
            feature.AddKnownType("System.Xml.Schema.XsdDuration+DurationType,System.Xml", "XsdDuration.DurationType");
            feature.AddKnownType("System.Xml.Schema.XsdValidator,System.Xml", "XsdValidator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInference,System.Xml", "XmlSchemaInference");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInference+InferenceOption,System.Xml", "XmlSchemaInference.InferenceOption");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInferenceException,System.Xml", "XmlSchemaInferenceException");
            feature.AddKnownType("System.Xml.Serialization.CodeExporter,System.Xml", "CodeExporter");
            feature.AddKnownType("System.Xml.Serialization.CodeGenerationOptions,System.Xml", "CodeGenerationOptions");
            feature.AddKnownType("System.Xml.Serialization.CodeGenerator,System.Xml", "CodeGenerator");
            feature.AddKnownType("System.Xml.Serialization.CodeGenerator+WhileState,System.Xml", "WhileState");
            feature.AddKnownType("System.Xml.Serialization.ArgBuilder,System.Xml", "ArgBuilder");
            feature.AddKnownType("System.Xml.Serialization.ForState,System.Xml", "ForState");
            feature.AddKnownType("System.Xml.Serialization.Cmp,System.Xml", "Cmp");
            feature.AddKnownType("System.Xml.Serialization.IfState,System.Xml", "IfState");
            feature.AddKnownType("System.Xml.Serialization.LocalScope,System.Xml", "LocalScope");
            feature.AddKnownType("System.Xml.Serialization.MethodBuilderInfo,System.Xml", "MethodBuilderInfo");
            feature.AddKnownType("System.Xml.Serialization.CodeGeneratorConversionException,System.Xml", "CodeGeneratorConversionException");
            feature.AddKnownType("System.Xml.Serialization.CodeIdentifier,System.Xml", "CodeIdentifier");
            feature.AddKnownType("System.Xml.Serialization.CaseInsensitiveKeyComparer,System.Xml", "CaseInsensitiveKeyComparer");
            feature.AddKnownType("System.Xml.Serialization.CodeIdentifiers,System.Xml", "CodeIdentifiers");
            feature.AddKnownType("System.Xml.Serialization.TempAssembly,System.Xml", "TempAssembly");
            feature.AddKnownType("System.Xml.Serialization.TempAssembly+TempMethod,System.Xml", "TempMethod");
            feature.AddKnownType("System.Xml.Serialization.TempAssembly+TempMethodDictionary,System.Xml", "TempMethodDictionary");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerCompilerParameters,System.Xml", "XmlSerializerCompilerParameters");
            feature.AddKnownType("System.Xml.Serialization.TempAssemblyCacheKey,System.Xml", "TempAssemblyCacheKey");
            feature.AddKnownType("System.Xml.Serialization.TempAssemblyCache,System.Xml", "TempAssemblyCache");
            feature.AddKnownType("System.Xml.Serialization.Compiler,System.Xml", "Compiler");
            feature.AddKnownType("System.Xml.Serialization.ImportContext,System.Xml", "ImportContext");
            feature.AddKnownType("System.Xml.Serialization.SchemaObjectCache,System.Xml", "SchemaObjectCache");
            feature.AddKnownType("System.Xml.Serialization.SchemaGraph,System.Xml", "SchemaGraph");
            feature.AddKnownType("System.Xml.Serialization.IndentedWriter,System.Xml", "IndentedWriter");
            feature.AddKnownType("System.Xml.Serialization.IXmlSerializable,System.Xml", "IXmlSerializable");
            feature.AddKnownType("System.Xml.Serialization.IXmlTextParser,System.Xml", "IXmlTextParser");
            feature.AddKnownType("System.Xml.Serialization.Accessor,System.Xml", "Accessor");
            feature.AddKnownType("System.Xml.Serialization.ElementAccessor,System.Xml", "ElementAccessor");
            feature.AddKnownType("System.Xml.Serialization.ChoiceIdentifierAccessor,System.Xml", "ChoiceIdentifierAccessor");
            feature.AddKnownType("System.Xml.Serialization.TextAccessor,System.Xml", "TextAccessor");
            feature.AddKnownType("System.Xml.Serialization.XmlnsAccessor,System.Xml", "XmlnsAccessor");
            feature.AddKnownType("System.Xml.Serialization.AttributeAccessor,System.Xml", "AttributeAccessor");
            feature.AddKnownType("System.Xml.Serialization.Mapping,System.Xml", "Mapping");
            feature.AddKnownType("System.Xml.Serialization.TypeMapping,System.Xml", "TypeMapping");
            feature.AddKnownType("System.Xml.Serialization.PrimitiveMapping,System.Xml", "PrimitiveMapping");
            feature.AddKnownType("System.Xml.Serialization.NullableMapping,System.Xml", "NullableMapping");
            feature.AddKnownType("System.Xml.Serialization.ArrayMapping,System.Xml", "ArrayMapping");
            feature.AddKnownType("System.Xml.Serialization.EnumMapping,System.Xml", "EnumMapping");
            feature.AddKnownType("System.Xml.Serialization.ConstantMapping,System.Xml", "ConstantMapping");
            feature.AddKnownType("System.Xml.Serialization.StructMapping,System.Xml", "StructMapping");
            feature.AddKnownType("System.Xml.Serialization.AccessorMapping,System.Xml", "AccessorMapping");
            feature.AddKnownType("System.Xml.Serialization.AccessorMapping+AccessorComparer,System.Xml", "AccessorComparer");
            feature.AddKnownType("System.Xml.Serialization.MemberMappingComparer,System.Xml", "MemberMappingComparer");
            feature.AddKnownType("System.Xml.Serialization.MemberMapping,System.Xml", "MemberMapping");
            feature.AddKnownType("System.Xml.Serialization.MembersMapping,System.Xml", "MembersMapping");
            feature.AddKnownType("System.Xml.Serialization.SpecialMapping,System.Xml", "SpecialMapping");
            feature.AddKnownType("System.Xml.Serialization.SerializableMapping,System.Xml", "SerializableMapping");
            feature.AddKnownType("System.Xml.Serialization.ModelScope,System.Xml", "ModelScope");
            feature.AddKnownType("System.Xml.Serialization.TypeModel,System.Xml", "TypeModel");
            feature.AddKnownType("System.Xml.Serialization.ArrayModel,System.Xml", "ArrayModel");
            feature.AddKnownType("System.Xml.Serialization.PrimitiveModel,System.Xml", "PrimitiveModel");
            feature.AddKnownType("System.Xml.Serialization.SpecialModel,System.Xml", "SpecialModel");
            feature.AddKnownType("System.Xml.Serialization.StructModel,System.Xml", "StructModel");
            feature.AddKnownType("System.Xml.Serialization.SpecifiedAccessor,System.Xml", "SpecifiedAccessor");
            feature.AddKnownType("System.Xml.Serialization.FieldModel,System.Xml", "FieldModel");
            feature.AddKnownType("System.Xml.Serialization.ConstantModel,System.Xml", "ConstantModel");
            feature.AddKnownType("System.Xml.Serialization.EnumModel,System.Xml", "EnumModel");
            feature.AddKnownType("System.Xml.Serialization.NameKey,System.Xml", "NameKey");
            feature.AddKnownType("System.Xml.Serialization.INameScope,System.Xml", "INameScope");
            feature.AddKnownType("System.Xml.Serialization.NameTable,System.Xml", "NameTable");
            feature.AddKnownType("System.Xml.Serialization.SchemaImporter,System.Xml", "SchemaImporter");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeComparer,System.Xml", "XmlAttributeComparer");
            feature.AddKnownType("System.Xml.Serialization.XmlFacetComparer,System.Xml", "XmlFacetComparer");
            feature.AddKnownType("System.Xml.Serialization.QNameComparer,System.Xml", "QNameComparer");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaObjectComparer,System.Xml", "XmlSchemaObjectComparer");
            feature.AddKnownType("System.Xml.Serialization.SchemaObjectWriter,System.Xml", "SchemaObjectWriter");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributeAttribute,System.Xml", "SoapAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributeOverrides,System.Xml", "SoapAttributeOverrides");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributeFlags,System.Xml", "SoapAttributeFlags");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributes,System.Xml", "SoapAttributes");
            feature.AddKnownType("System.Xml.Serialization.SoapCodeExporter,System.Xml", "SoapCodeExporter");
            feature.AddKnownType("System.Xml.Serialization.SoapElementAttribute,System.Xml", "SoapElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapEnumAttribute,System.Xml", "SoapEnumAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapIgnoreAttribute,System.Xml", "SoapIgnoreAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapIncludeAttribute,System.Xml", "SoapIncludeAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapReflectionImporter,System.Xml", "SoapReflectionImporter");
            feature.AddKnownType("System.Xml.Serialization.SoapSchemaExporter,System.Xml", "SoapSchemaExporter");
            feature.AddKnownType("System.Xml.Serialization.SoapSchemaImporter,System.Xml", "SoapSchemaImporter");
            feature.AddKnownType("System.Xml.Serialization.SoapSchemaMember,System.Xml", "SoapSchemaMember");
            feature.AddKnownType("System.Xml.Serialization.SoapTypeAttribute,System.Xml", "SoapTypeAttribute");
            feature.AddKnownType("System.Xml.Serialization.SourceInfo,System.Xml", "SourceInfo");
            feature.AddKnownType("System.Xml.Serialization.TypeKind,System.Xml", "TypeKind");
            feature.AddKnownType("System.Xml.Serialization.TypeFlags,System.Xml", "TypeFlags");
            feature.AddKnownType("System.Xml.Serialization.TypeDesc,System.Xml", "TypeDesc");
            feature.AddKnownType("System.Xml.Serialization.TypeScope,System.Xml", "TypeScope");
            feature.AddKnownType("System.Xml.Serialization.Soap,System.Xml", "Soap");
            feature.AddKnownType("System.Xml.Serialization.Soap12,System.Xml", "Soap12");
            feature.AddKnownType("System.Xml.Serialization.Wsdl,System.Xml", "Wsdl");
            feature.AddKnownType("System.Xml.Serialization.UrtTypes,System.Xml", "UrtTypes");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyAttributeAttribute,System.Xml", "XmlAnyAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyElementAttribute,System.Xml", "XmlAnyElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyElementAttributes,System.Xml", "XmlAnyElementAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayAttribute,System.Xml", "XmlArrayAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayItemAttribute,System.Xml", "XmlArrayItemAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayItemAttributes,System.Xml", "XmlArrayItemAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeAttribute,System.Xml", "XmlAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeOverrides,System.Xml", "XmlAttributeOverrides");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeFlags,System.Xml", "XmlAttributeFlags");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributes,System.Xml", "XmlAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlChoiceIdentifierAttribute,System.Xml", "XmlChoiceIdentifierAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlCodeExporter,System.Xml", "XmlCodeExporter");
            feature.AddKnownType("System.Xml.Serialization.XmlCountingReader,System.Xml", "XmlCountingReader");
            feature.AddKnownType("System.Xml.Serialization.XmlCustomFormatter,System.Xml", "XmlCustomFormatter");
            feature.AddKnownType("System.Xml.Serialization.XmlElementAttribute,System.Xml", "XmlElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlElementAttributes,System.Xml", "XmlElementAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlEnumAttribute,System.Xml", "XmlEnumAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlIgnoreAttribute,System.Xml", "XmlIgnoreAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlIncludeAttribute,System.Xml", "XmlIncludeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlMappingAccess,System.Xml", "XmlMappingAccess");
            feature.AddKnownType("System.Xml.Serialization.XmlMapping,System.Xml", "XmlMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlMemberMapping,System.Xml", "XmlMemberMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlMembersMapping,System.Xml", "XmlMembersMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlNamespaceDeclarationsAttribute,System.Xml", "XmlNamespaceDeclarationsAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlReflectionImporter,System.Xml", "XmlReflectionImporter");
            feature.AddKnownType("System.Xml.Serialization.ImportStructWorkItem,System.Xml", "ImportStructWorkItem");
            feature.AddKnownType("System.Xml.Serialization.WorkItems,System.Xml", "WorkItems");
            feature.AddKnownType("System.Xml.Serialization.RecursionLimiter,System.Xml", "RecursionLimiter");
            feature.AddKnownType("System.Xml.Serialization.XmlReflectionMember,System.Xml", "XmlReflectionMember");
            feature.AddKnownType("System.Xml.Serialization.XmlRootAttribute,System.Xml", "XmlRootAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaExporter,System.Xml", "XmlSchemaExporter");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaImporter,System.Xml", "XmlSchemaImporter");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaImporter+ElementComparer,System.Xml", "ElementComparer");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaProviderAttribute,System.Xml", "XmlSchemaProviderAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemas,System.Xml", "XmlSchemas");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaEnumerator,System.Xml", "XmlSchemaEnumerator");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationGeneratedCode,System.Xml", "XmlSerializationGeneratedCode");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationCodeGen,System.Xml", "XmlSerializationCodeGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationILGen,System.Xml", "XmlSerializationILGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader,System.Xml", "XmlSerializationReader");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader+Fixup,System.Xml", "Fixup");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader+CollectionFixup,System.Xml", "CollectionFixup");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReaderCodeGen,System.Xml", "XmlSerializationReaderCodeGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReaderILGen,System.Xml", "XmlSerializationReaderILGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriter,System.Xml", "XmlSerializationWriter");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriter+TypeEntry,System.Xml", "TypeEntry");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriterCodeGen,System.Xml", "XmlSerializationWriterCodeGen");
            feature.AddKnownType("System.Xml.Serialization.ReflectionAwareCodeGen,System.Xml", "ReflectionAwareCodeGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriterILGen,System.Xml", "XmlSerializationWriterILGen");
            feature.AddKnownType("System.Xml.Serialization.ReflectionAwareILGen,System.Xml", "ReflectionAwareILGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerAssemblyAttribute,System.Xml", "XmlSerializerAssemblyAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlDeserializationEvents,System.Xml", "XmlDeserializationEvents");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerImplementation,System.Xml", "XmlSerializerImplementation");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializer,System.Xml", "XmlSerializer");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerFactory,System.Xml", "XmlSerializerFactory");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerNamespaces,System.Xml", "XmlSerializerNamespaces");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerVersionAttribute,System.Xml", "XmlSerializerVersionAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlTextAttribute,System.Xml", "XmlTextAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlTypeAttribute,System.Xml", "XmlTypeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlTypeMapping,System.Xml", "XmlTypeMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeEventArgs,System.Xml", "XmlAttributeEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlElementEventArgs,System.Xml", "XmlElementEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlNodeEventArgs,System.Xml", "XmlNodeEventArgs");
            feature.AddKnownType("System.Xml.Serialization.UnreferencedObjectEventArgs,System.Xml", "UnreferencedObjectEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationPrimitiveWriter,System.Xml", "XmlSerializationPrimitiveWriter");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationPrimitiveReader,System.Xml", "XmlSerializationPrimitiveReader");
            feature.AddKnownType("System.Xml.Serialization.Advanced.SchemaImporterExtension,System.Xml", "SchemaImporterExtension");
            feature.AddKnownType("System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection,System.Xml", "SchemaImporterExtensionCollection");
            feature.AddKnownType("System.Xml.Serialization.Advanced.MappedTypeDesc,System.Xml", "MappedTypeDesc");
            feature.AddKnownType("System.Xml.Serialization.Configuration.DateTimeSerializationSection,System.Xml", "DateTimeSerializationSection");
            feature.AddKnownType("System.Xml.Serialization.Configuration.DateTimeSerializationSection+DateTimeSerializationMode,System.Xml", "DateTimeSerializationSection.DateTimeSerializationMode");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SchemaImporterExtensionElement,System.Xml", "SchemaImporterExtensionElement");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SchemaImporterExtensionElement+TypeTypeConverter,System.Xml", "TypeTypeConverter");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection,System.Xml", "SchemaImporterExtensionElementCollection");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection,System.Xml", "SchemaImporterExtensionsSection");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SerializationSectionGroup,System.Xml", "SerializationSectionGroup");
            feature.AddKnownType("System.Xml.Serialization.Configuration.XmlSerializerSection,System.Xml", "XmlSerializerSection");
            feature.AddKnownType("System.Xml.Serialization.Configuration.RootedPathValidator,System.Xml", "RootedPathValidator");
            feature.AddKnownType("System.Xml.XPath.IXPathNavigable,System.Xml", "IXPathNavigable");
            feature.AddKnownType("System.Xml.XPath.XPathDocument,System.Xml", "XPathDocument");
            feature.AddKnownType("System.Xml.XPath.XPathDocument+LoadFlags,System.Xml", "LoadFlags");
            feature.AddKnownType("System.Xml.XPath.XPathException,System.Xml", "XPathException");
            feature.AddKnownType("System.Xml.XPath.XmlSortOrder,System.Xml", "XmlSortOrder");
            feature.AddKnownType("System.Xml.XPath.XmlCaseOrder,System.Xml", "XmlCaseOrder");
            feature.AddKnownType("System.Xml.XPath.XmlDataType,System.Xml", "XmlDataType");
            feature.AddKnownType("System.Xml.XPath.XPathResultType,System.Xml", "XPathResultType");
            feature.AddKnownType("System.Xml.XPath.XPathExpression,System.Xml", "XPathExpression");
            feature.AddKnownType("System.Xml.XPath.XPathItem,System.Xml", "XPathItem");
            feature.AddKnownType("System.Xml.XPath.XPathNamespaceScope,System.Xml", "XPathNamespaceScope");
            feature.AddKnownType("System.Xml.XPath.XPathNavigator,System.Xml", "XPathNavigator");
            feature.AddKnownType("System.Xml.XPath.XPathNavigator+DebuggerDisplayProxy,System.Xml", "DebuggerDisplayProxy");
            feature.AddKnownType("System.Xml.XPath.XPathNavigatorKeyComparer,System.Xml", "XPathNavigatorKeyComparer");
            feature.AddKnownType("System.Xml.XPath.XPathNavigatorReader,System.Xml", "XPathNavigatorReader");
            feature.AddKnownType("System.Xml.XPath.XPathNavigatorReaderWithSI,System.Xml", "XPathNavigatorReaderWithSI");
            feature.AddKnownType("System.Xml.XPath.XmlEmptyNavigator,System.Xml", "XmlEmptyNavigator");
            feature.AddKnownType("System.Xml.XPath.XPathNodeIterator,System.Xml", "XPathNodeIterator");
            feature.AddKnownType("System.Xml.XPath.XPathNodeType,System.Xml", "XPathNodeType");
            feature.AddKnownType("System.Xml.XmlConfiguration.XmlReaderSection,System.Xml", "XmlReaderSection");
            feature.AddKnownType("System.Xml.XmlConfiguration.XsltConfigSection,System.Xml", "XsltConfigSection");
            feature.AddKnownType("System.Xml.Xsl.XslCompiledTransform,System.Xml", "XslCompiledTransform");
            feature.AddKnownType("System.Xml.Xsl.XsltMessageEncounteredEventArgs,System.Xml", "XsltMessageEncounteredEventArgs");
            feature.AddKnownType("System.Xml.Xsl.XsltArgumentList,System.Xml", "XsltArgumentList");
            feature.AddKnownType("System.Xml.Xsl.IXsltContextFunction,System.Xml", "IXsltContextFunction");
            feature.AddKnownType("System.Xml.Xsl.IXsltContextVariable,System.Xml", "IXsltContextVariable");
            feature.AddKnownType("System.Xml.Xsl.XsltContext,System.Xml", "XsltContext");
            feature.AddKnownType("System.Xml.Xsl.XsltException,System.Xml", "XsltException");
            feature.AddKnownType("System.Xml.Xsl.XsltCompileException,System.Xml", "XsltCompileException");
            feature.AddKnownType("System.Xml.Xsl.XslTransform,System.Xml", "XslTransform");
            feature.AddKnownType("System.Xml.Xsl.XsltSettings,System.Xml", "XsltSettings");
            feature.AddKnownType("MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1,System.Xml.Linq", "MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider'1");
            feature.AddKnownType("System.Xml.Linq.XName,System.Xml.Linq", "XName");
            feature.AddKnownType("System.Xml.Linq.NameSerializer,System.Xml.Linq", "NameSerializer");
            feature.AddKnownType("System.Xml.Linq.XNamespace,System.Xml.Linq", "XNamespace");
            feature.AddKnownType("System.Xml.Linq.XObject,System.Xml.Linq", "XObject");
            feature.AddKnownType("System.Xml.Linq.XObjectChange,System.Xml.Linq", "XObjectChange");
            feature.AddKnownType("System.Xml.Linq.XObjectChangeEventArgs,System.Xml.Linq", "XObjectChangeEventArgs");
            feature.AddKnownType("System.Xml.Linq.XNode,System.Xml.Linq", "XNode");
            feature.AddKnownType("System.Xml.Linq.XNodeDocumentOrderComparer,System.Xml.Linq", "XNodeDocumentOrderComparer");
            feature.AddKnownType("System.Xml.Linq.XNodeEqualityComparer,System.Xml.Linq", "XNodeEqualityComparer");
            feature.AddKnownType("System.Xml.Linq.XText,System.Xml.Linq", "XText");
            feature.AddKnownType("System.Xml.Linq.XCData,System.Xml.Linq", "XCData");
            feature.AddKnownType("System.Xml.Linq.XContainer,System.Xml.Linq", "XContainer");
            feature.AddKnownType("System.Xml.Linq.XElement,System.Xml.Linq", "XElement");
            feature.AddKnownType("System.Xml.Linq.LoadOptions,System.Xml.Linq", "LoadOptions");
            feature.AddKnownType("System.Xml.Linq.SaveOptions,System.Xml.Linq", "SaveOptions");
            feature.AddKnownType("System.Xml.Linq.ReaderOptions,System.Xml.Linq", "ReaderOptions");
            feature.AddKnownType("System.Xml.Linq.XDocument,System.Xml.Linq", "XDocument");
            feature.AddKnownType("System.Xml.Linq.XComment,System.Xml.Linq", "XComment");
            feature.AddKnownType("System.Xml.Linq.XProcessingInstruction,System.Xml.Linq", "XProcessingInstruction");
            feature.AddKnownType("System.Xml.Linq.XDeclaration,System.Xml.Linq", "XDeclaration");
            feature.AddKnownType("System.Xml.Linq.XDocumentType,System.Xml.Linq", "XDocumentType");
            feature.AddKnownType("System.Xml.Linq.XAttribute,System.Xml.Linq", "XAttribute");
            feature.AddKnownType("System.Xml.Linq.XStreamingElement,System.Xml.Linq", "XStreamingElement");
            feature.AddKnownType("System.Xml.XPath.XDocumentExtensions+XDocumentNavigable,System.Xml.XPath.XDocument", "XDocumentNavigable");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
